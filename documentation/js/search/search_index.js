var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["16.1.4","add","angular","applic","artifact","automat","build","capabl","chang","check","choic","cli","code","command","compon","dev","develop","directive|pipe|service|class|guard|interface|enum|modul","directori","dist","e2","end","execut","file","first","further","gener","go","help","http://localhost:4200","implement","index","karma","match","more","name","navig","need","new","ng","out","overview","packag","page","pfa","platform","project","readm","refer","reload","result","run","scaffold","serv","server","sourc","store","test","unit","us","version","via"],"overview.html":["1","16","4","browser","compon","inject","match","modul","out","overview","reset","result","support","svg","zoom"],"modules.html":["appmodul","brows","browser","match","modul","result","support","svg"],"modules/AppModule.html":["about/about.compon","aboutcompon","addnodecompon","addweightededgecompon","algorithmservic","allservice/algorithm.servic","allservice/dark","allservice/graphe.servic","allservice/sav","angular/common","angular/common/http","angular/cor","angular/form","angular/platform","app","app.compon","appcompon","appmodul","approutingmodul","assets/i18n","bootstrap","browser","browsermodul","changecolorcompon","changeidnodecompon","changesizescreencompon","class","color.compon","color/chang","commonmodul","components/add","components/chang","components/info/info.compon","components/matrix/matrix.compon","components/message/message.compon","components/screen/screen.compon","components/select/select.compon","contact/contact.compon","contactcompon","darkmodeservic","declar","dep","edge.compon","edge/add","export","file","footer/footer.compon","footercompon","formsmodul","function","grapheservic","grapheservice,algorithmservice,saveuploadservice,darkmodeservic","header/header.compon","headercompon","httpclient","httpclientmodul","httploaderfactori","httploaderfactory(http","id","import","info","infocompon","json","load","loader","match","matrixcompon","messagecompon","mode.servic","modul","new","ngmodul","ngx","node.compon","node/add","node/chang","out","provid","reset","result","return","routing.modul","saveuploadservic","screen.compon","screen/chang","screenbox/screenbox.compon","screenboxcompon","screencompon","selectcompon","size","sourc","src/app/app.module.t","support","svg","translat","translate/cor","translate/http","translatehttpload","translatehttploader(http","translateload","translatemodul","translatemodule.forroot","upload.servic","usefactori","weight","zoom"],"components/AboutComponent.html":["about.component.css","about.component.html","aboutcompon","allservice/graphe.servic","angular/cor","app","class","compon","constructor","constructor(graphservic","constructor(priv","export","file","grapheservic","graphservice:grapheservic","import","info","match","metadata","result","selector","sourc","src/app/about/about.component.t","styleurl","templateurl"],"components/AddNodeComponent.html":["add","addnodecompon","angular","angular/cor","app","boolean","class","compon","component,input","constructor","constructor(graph","constructor(protect","contain","container:ani","data","default","descript","event","export","fals","field","file","flag","focu","focus","focus.set","form","graph","graphes:grapheservic","grapheservic","handler","id","import","indic","info","initi","input","inputtouch","inputtouched:boolean","instanc","match","metadata","method","new","node","node.component.css","node.component.html","node.component.t","node/add","nodeid","nodeid:ani","oninputfocu","param","paramet","parent","properti","receiv","repres","result","return","selector","set","sourc","src/app/allservice/graphe.servic","src/app/components/add","styleurl","templateurl","this.inputtouched=tru","touch","true","type","valu","void","whether"],"components/AddWeightedEdgeComponent.html":["ad","add","addweightededgecompon","angular","angular/cor","app","chang","changes.emit","class","compon","constructor","constructor(graph","constructor(protect","contain","data","descript","edg","edge.component.css","edge.component.html","edge.component.t","edge/add","emit","emitt","enter","event","eventemitt","export","field","file","form","graph","grapheservic","handler","import","info","initi","input","instanc","match","metadata","method","new","node","nodet","onweightformchang","output","param","paramet","parent","properti","receiv","repres","result","return","selector","sourc","src/app/allservice/graphe.servic","src/app/components/add","styleurl","target","templateurl","this.weight.emit(this.weightform","type","us","valu","void","weight","weightform"],"components/AppComponent.html":["allservice/dark","angular/cor","app","app.component.css","app.component.html","appcompon","class","compon","constructor","constructor(priv","constructor(transl","darkmod","darkmodes:darkmodeservic","darkmodeservic","default","en","export","file","import","info","match","metadata","mode.servic","ngx","pfa","properti","result","root","selector","sourc","src/app/app.component.t","string","styleurl","templateurl","titl","translat","translate.setdefaultlang(localstorage.getitem('languag","translate/cor","translateservic","translateservice,protect","valu"],"components/ChangeColorComponent.html":["angular","angular/cor","app","background","bgcolor","case","chang","changecolorcompon","class","color","color.component.css","color.component.html","color.component.t","color/chang","compon","constructor","constructor(graph","constructor(protect","contain","data","descript","direct","edg","export","fcolor","field","file","flesh","form","graph","grapheservic","import","info","initi","input","instanc","match","metadata","new","node","param","paramet","parent","properti","receiv","repres","result","selector","sourc","src/app/allservice/graphe.servic","src/app/components/chang","styleurl","templateurl","type"],"components/ChangeIdNodeComponent.html":["angular","angular/cor","app","chang","changeidnodecompon","class","compon","constructor","constructor(graph","constructor(protect","contain","data","descript","export","field","file","form","graph","grapheservic","id","import","info","initi","input","instanc","last","lastnodeid","match","metadata","new","newnodeid","node","node.component.css","node.component.html","node.component.t","node/chang","param","paramet","parent","properti","receiv","repres","result","selector","sourc","src/app/allservice/graphe.servic","src/app/components/chang","string","styleurl","templateurl","type","us"],"components/ChangeSizeScreenComponent.html":["400","angular","angular/cor","app","chang","changesizescreencompon","class","compon","constructor","constructor(graph","constructor(protect","contain","data","default","descript","export","field","file","form","graph","grapheservic","height","import","info","initi","input","instanc","match","metadata","new","param","paramet","parent","properti","receiv","repres","result","screen","screen.component.css","screen.component.html","screen.component.t","screen/chang","selector","size","sourc","src/app/allservice/graphe.servic","src/app/components/chang","styleurl","templateurl","type","valu"],"components/ContactComponent.html":["0","allservice/graphe.servic","angular/cor","app","class","compon","constructor","constructor(graph","constructor(protect","contact","contact.component.css","contact.component.html","contactcompon","contactvar","contactvar:number=0","default","export","file","graphes:grapheservic","grapheservic","import","info","match","metadata","number","properti","result","selector","sourc","src/app/contact/contact.component.t","styleurl","templateurl","valu"],"components/FooterComponent.html":["allservice/dark","angular/cor","app","class","compon","constructor","constructor(darkmod","constructor(protect","darkmodes:darkmodeservic","darkmodeservic","export","file","footer","footer.component.css","footer.component.html","footercompon","import","info","match","metadata","mode.servic","result","selector","sourc","src/app/footer/footer.component.t","styleurl","templateurl"],"components/HeaderComponent.html":["allservice/dark","angular/cor","app","ar","changelanguag","changelanguage(ev","class","code","compon","constructor","constructor(darkmod","constructor(protect","darkmodes:darkmodeservice,priv","darkmodeservic","en","english","event.target.valu","export","file","fr","fran√ßai","header","header.component.css","header.component.html","headercompon","import","info","lang","lang:any=localstorage.getitem('languag","languag","localstorage.setitem('languag","match","metadata","method","mode.servic","name","ngx","oninit","properti","result","return","selector","sourc","src/app/header/header.component.t","string","styleurl","templateurl","this.darkmodes.toggledarkmod","this.translate.use(event.target.valu","toggledarkmod","toggledarkmode():void","translat","translate/cor","translate:translateservic","translateservic","void"],"components/InfoComponent.html":["algo","algorithm","angular","angular/cor","app","class","compon","constructor","data","descript","display","export","file","graph","import","info","info.component.css","info.component.html","infocompon","inform","initi","input","instanc","match","metadata","new","parent","properti","receiv","relat","result","selector","sourc","src/app/components/info/info.component.t","styleurl","templateurl","type"],"components/MatrixComponent.html":["adjac","adjacencymatrixformat","afterviewcheck","angular","angular/cor","app","call","check","class","compon","constructor","content","descript","display","exampl","export","file","format","here","hook","implement","import","info","initi","input","instanc","lifecycl","match","mathjax","mathjax.hub","mathjax.hub.queue([\"typeset","matrix","matrix.component.css","matrix.component.html","matrixcompon","metadata","need","new","ngafterviewcheck","properti","render","repres","result","selector","sourc","src/app/components/matrix/matrix.component.t","string","styleurl","templateurl","type","us","view","void"],"components/MessageComponent.html":["0.7","1","103","2","20","50","adjust","angular","angular/cor","app","base","box'","call","chang","class","compon","const","constructor","constructor(darkmod","constructor(protect","contain","darkmod","darkmodeservic","data","descript","display","elementref","export","file","graph","grapheservic","height","hook","implement","import","info","initi","input","instanc","length","lifecycl","match","messag","message.component.css","message.component.html","messagecompon","metadata","method","mode.servic","msgbox","msgbox.style.height","msgboxc","msgboxc.style.height","new","ngonchanges(chang","onchang","onmessagelengthchang","param","paramet","parent","properti","protect","px","receiv","repres","result","return","selector","simplechang","sourc","src/app/allservice/dark","src/app/allservice/graphe.servic","src/app/components/message/message.component.t","string","styleurl","templateurl","this.container.el.nativeelement.queryselector('#msgbox","this.container.el.nativeelement.queryselector('.msgboxc","this.message.length","this.onmessagelengthchang","type","void"],"components/ScreenComponent.html":["angular","angular/cor","app","class","compon","constructor","constructor(darkmod","constructor(protect","darkmod","darkmodeservic","descript","display","export","file","import","info","initi","instanc","main","match","metadata","mode.servic","new","param","paramet","result","screen","screen.component.css","screen.component.html","screencompon","selector","sourc","src/app/allservice/dark","src/app/components/screen/screen.component.t","styleurl","templateurl"],"components/ScreenboxComponent.html":["0","70","action","add","algo","algorithm","algorithm:str","algorithmservic","algos:algorithmservice,protect","allservice/algorithm.servic","allservice/dark","allservice/graphe.servic","allservice/sav","angular","angular/cor","app","assign","box","button","buttonclick","buttonclicked:str","call","chang","changeselect","changeselect:str","chngetypegraph","chngetypegraphe(data","chngetypegraphe(data:str","class","click","compon","constructor","constructor(el","constructor(priv","contain","containerheight","containerheight:number=70;//height","darkmod","darkmodes:darkmodeservic","darkmodeservic","data","default","descript","destroy","edg","el","elementref","elementref,protect","event","event.target.id","export","file","get","getbuttonclickedid","getbuttonclickedid(ev","graph","graphes:grapheservice,protect","grapheservic","handl","hook","id","implement","import","info","initi","instanc","lifecycl","match","messag","message:str","metadata","method","mode.servic","msg","new","newweight","ngondestroy","ngoninit","ngx","node","nodeid","nodeid:number=0;//incr","nodeidchang","nodeidchanged:ani","nodenam","nodename:string=\"numeriqu","nodenamingmethod","nodenamingmethode:str","number","numeriqu","ondestroy","oninit","oninit,ondestroy","onweightchang","onweightchange(newweight","output","param","paramet","privat","properti","relev","remov","remove:str","repres","restorearray","restorearray:array","result","return","saveupload","saveupload:str","saveuploads:saveuploadservice,protect","saveuploadservic","screen","screenbox","screenbox.component.css","screenbox.component.html","screenboxcompon","selectednod","selectednode:array","selector","sourc","src/app/screenbox/screenbox.component.t","string","styleurl","target","templateurl","this.buttonclick","this.graphes.onchangebuttonclicked(thi","this.graphes.ondestroy","this.graphes.onedgetap(thi","this.graphes.oninit(thi","this.graphes.onnodetap(thi","this.graphes.onscreentap(thi","this.graphes.resetcolor","this.typegraphe=data","this.weight=newweight","translat","translate/cor","translate:translateservice,protect","translateservic","trigger","type","typegraph","upload.servic","valu","value(app","void","weight","weight?:numb"],"components/SelectComponent.html":["angular/cor","app","class","class:str","compon","component,eventemitter,input","contain","container:ani","disablelabel","disablelabell:str","event","eventemitt","export","file","functionhandl","functionhandler:ani","import","info","input","item","items:array","match","metadata","method","new","onchang","onchange():void","output","properti","result","return","select","select.component.css","select.component.html","selectcompon","selected:eventemitt","selectednew","selectednew:str","selector","sourc","src/app/components/select/select.component.t","string","styleurl","templateurl","this.selected.emit(this.selectednew","type","void"],"injectables/AlgorithmService.html":["0","0]==\"direct","0]==\"undirect","1","1]==\"weight","2000","a.data('weight","affich","algorithm","algorithmservic","allpositive:boolean=tru","angular/cor","anim","array","arrow","b.data('weight","b:ani","bellman","bellmanford","bellmanford.distanceto(container.graphes.cy.$(`#${targetnodeid","bellmanford.distanceto(targetnod","bellmanford.pathto(container.graphes.cy.$(`#${targetnodeid","bellmanford.pathto(targetnod","bellmanfordalgorithm","bellmanfordalgorithm(rootnodeid","bellmanfordanim","bellmanfordanimation(rootnodeid","bf","bfs(node","bfs(node:any,visitednodes:any):void","bfsanim","bfsanimation(rootnodeid","bfspathstr","boolean","breadth","break","chang","changealgorithm","changealgorithm(contain","changealgorithm(container:any):void","check","chemin","class","color","complet","compon","connect","console.log(i","const","constructor","constructor(priv","constructor(transl","contain","container'","container.algorithm","container.algorithm==\"dijkstraab","container.algorithm==\"prim","container.buttonclick","container.changeselect","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formaddnod","container.el.nativeelement.queryselector('.formchangecolor","container.graphes.background_color_nod","container.graphes.background_color_node,container.graphes.color_nod","container.graphes.background_color_node_algo","container.graphes.background_color_node_algo,container.graphes.color_node_algo,++i*2000","container.graphes.background_color_node_algo,container.graphes.color_node_algo,j","container.graphes.changecoloredge(edge,container.graphes.data_edge_color_algo,container.graphes.color_line_edge_algo,container.graphes.target_arrow_color_algo,j=++i*2000","container.graphes.changecolornode(edge.sourc","container.graphes.changecolornode(edge.target","container.graphes.changecolornode(nod","container.graphes.changecolornode(targetnod","container.graphes.ci","container.graphes.color_line_edge_algo","container.graphes.color_nod","container.graphes.cy.$(`#${rootnodeid","container.graphes.cy.$(`#${targetnodeid","container.graphes.cy.edges().foreach((edge:ani","container.graphes.cy.edges().toarray","container.graphes.cy.elements().bellmanford","container.graphes.cy.elements().bf","container.graphes.cy.elements().df","container.graphes.cy.elements().dijkstra","container.graphes.cy.nodes().first","container.graphes.cy.nodes().foreach((node:ani","container.graphes.cy.nodes().length","container.graphes.cy.nodes().s","container.graphes.data_edge_color_algo","container.graphes.posit","container.graphes.resetcolor","container.graphes.searcheedgechnagebc(container,lastnode.data('id'),node.data('id'),container.graphes.color_line_edge_algo","container.graphes.target_arrow_color_algo","container.graphes.typegraphe.split","container.messag","container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1","container.message=\"kruskal(mst","container.message=\"prime(mst","container.message=container.translate.instant(\"algos.msg10","container.message=container.translate.instant(\"algos.msg11","container.message=container.translate.instant(\"algos.msg12","container.message=container.translate.instant(\"algos.msg8","container.message=lastmessag","container.message=this.translate.instant(\"algos.msg7\",{algorithm:container.algorithm","container.message=this.translate.instant('algos.msg1","container.remov","container.saveupload","container.selectednod","container.typegraphe.split","creat","currentnod","currentnode.neighborhood().nod","cy","cy.elements().floydwarshal","cy.nodes().foreach((nodea","cy.nodes().foreach((nodeb","d'anim","de","delay","depth","depth:ani","descript","df","dfsanim","dfsanimation(rootnodeid","dfspathstr","dijkstra","dijkstra'","dijkstra.distanceto(container.graphes.cy.$(`#${targetnodeid","dijkstra.distanceto(targetnod","dijkstra.pathto(container.graphes.cy.$(`#${targetnodeid","dijkstra.pathto(targetnod","dijkstraalgorithm","dijkstraalgorithm(rootnodeid","dijkstraanim","dijkstraanimation(rootnodeid","direct","directed:direct","directed=fals","directed=tru","distanc","distancetotarget","dri","d√©lai","e","e.style('color","e.style('lin","e.style('target","e:ani","edg","edge.data('weight","edge.data('weight')||1","edge.source().id","edge.target().id","edge:ani","edges.sort((a:ani","est","export","fals","file","find","first","floyd","floydwarshal","floydwarshall.distance(nodea","floydwarshall.path(nodea","floydwarshallalgorithm","floydwarshallalgorithm(contain","ford","formachangesizescreen","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","formaddnod","formaddnode.style.display=\"non","formchangecolor","formchangecolor.style.display=\"non","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","function","given","graph","i*10000","i*2000","i++*10000","i:ani","i:number=0","i=1","id","if(!container.graphes.cy.nodes().length","if((container.algorithm==\"dijkstra","if(container.algorithm==\"floydwarshal","if(container.algorithm==\"krusk","if(container.typegraph","if(container.typegraphe.split","if(edge.data('weight","if(i!=1","if(i!=container.graphes.cy.nodes().length","if(i/2!=container.graphes.cy.nodes().length","if(this.isgraphconnected(container)==tru","import","infin","info","inject","instanc","isalledgeposit","isalledgepositive(contain","isalledgepositive(container:any):boolean","isgraphconnect","isgraphconnected(contain","isgraphconnected(container:any):boolean","j","j:number=0","kruskal'","kruskalanim","kruskalanimation(contain","kruskalanimation(container:any):void","l'arbr","lastmessag","lastmessage:str","lastnode:any=pathtotarget.nodes().first","lastnode=nod","le","lorsqu","mark","match","messag","method","minim","minimum","minimumspanningtreeedg","minimumspanningtreeedges(contain","minimumspanningtreeedges(container:ani","neighbor","neighbors.foreach((neighbor:ani","new","ngx","node","node.data('id","node.id","node.style('background","node.style('color',container.graphes.color_node_algo","nodea.id","nodeb","nodeb.id","nodeid","n≈ìud","object","otherwis","pair","param","paramet","path","path[currentnod","path[v.id","pathnod","pathnodes.join","pathnodes.push(currentnod","pathnodes.push(rootnodeid","pathnodes.reverse().join","pathstr","pathtonodeb","pathtonodeb.nodes().map((nod","pathtotarget","pathtotarget.nodes().foreach((nod","pathtotarget.nodes().map((nod","pathtotarget.nodes().map((node:ani","perform","poid","posit","pour","prim'","primeaniamant","primeaniamantion(contain","primeaniamantion(container:any):void","print","printbfspath","printbfspath(rootnodeid","printdfspath","printdfspath(rootnodeid","provid","providedin","queue","queue.length","queue.push(neighbor","queue.shift","result","return","root","rootnodeid","rootnodeid,targetnodeid,pathstring,distancetotarget","rootnodeid=nodea.data(\"id","screenboxcompon","search","select","servic","set","settimeout","shortest","sont","sourc","sourceid:ani","space:str","span","src/app/allservice/algorithm.service.t","start","startnod","stocker","store","string","string,container:ani","strongli","style","target","targetid:ani","targetnod","targetnodeid","targetnodeid=nodeb.data(\"id","tarjan","this.bellmanfordanimation(rootnodeid,targetnodeid,contain","this.bfs(startnode,visitednod","this.dijkstraanimation(rootnodeid,targetnodeid,contain","this.floydwarshallalgorithm(contain","this.isalledgepositive(contain","this.kruskalanimation(contain","this.minimumspanningtreeedges(container).foreach((edge:ani","this.primeaniamantion(contain","this.printbfspath(rootnodeid","this.printdfspath(rootnodeid","this.translate.instant(\"algos.msg3\",{rootnodeid,targetnodeid,pathstring,distancetotarget","this.translate.instant(\"algos.msg5","this.translate.instant(\"algos.msg6\",{rootnodeid","this.translate.instant('algos.msg2","this.translate.instant('algos.msg4","tou","track","translat","translate/cor","translateservic","tree","treeedg","treeedges.length","treeedges.push(edg","treenod","treenodes.add(sourceid","treenodes.add(targetid","treenodes.has(sourceid","treenodes.has(targetid","true","u","u.id","u.style('background","u.style('color","u:ani","updat","us","v","v.id","v.id(),contain","v.style('background","v.style('color',container.graphes.color_node_algo","v:ani","var","visit","visited.add(v.id","visited.s","visitednod","visitednodes.add(neighbor.id","visitednodes.add(node.id","visitednodes.has(neighbor.id","visitednodes.s","visit√©","visual","void","warshal","weight","weighta","weightb"],"injectables/DarkModeService.html":["angular/cor","boolean","class","constructor","current","dark","darkmodeservic","descript","disabl","enabl","export","file","import","indic","info","initi","inject","instanc","isdarkmod","isdarkmode:boolean","local","localstorage.getitem('darkmod","localstorage.setitem('darkmod","manag","match","method","mode","mode.service.t","new","properti","providedin","result","return","root","servic","set","sourc","src/app/allservice/dark","state","storag","store","this.isdarkmod","this.isdarkmode.tostr","toggl","toggledarkmod","true","type","updat","versa","versa.upd","vice","void","whether"],"injectables/GrapheService.html":["0","0]==\"direct","1","10","12","1]==\"unweight","1]==\"weight","2","26","2d","4","400+'px';//default","_","action","ad","add","addit","addnod","addnode(contain","addnode(container:any,container2:any):void","addnodecompon","addweightededg","addweightededge(contain","addweightededge(container:any,container2:any):void","addweightededgecompon","adjac","adjacencymatrix:array","algorithm","alphabet","alphabets0","alreadi","angular/cor","anim","anoth","appli","array","array.from","arrow","associ","background","background_color_nod","background_color_node_algo","base","befor","between","bezier","bgcolor","black","block","blue","button","chang","changechang","changechanges(contain","changechanges(container:ani","changecolor","changecolor(contain","changecolor(container:any,container2:ani","changecolorcompon","changecoloredg","changecoloredge(edg","changecoloredge(edge:any,color:string,lineedgecolor:string,targetarrowcolor:string,time:number=10","changecolornod","changecolornode(nod","changecolornode(node:any,bgcolor:string,color:string,time:number=10","changeidnodecompon","changenodeenum","changenodeenum(contain","changenodeenum(container:any):void","changenodeid","changenodeid(contain","changenodeid(container:any,container2:any):void","changesizescreen","changesizescreen(contain","changesizescreen(container:any,container2:any):void","changesizescreencompon","changetypegraph","changetypegraphe(contain","changetypegraphe(container:any):void","charact","check","class","cleanup","click","code","color","color',bgcolor","color',lineedgecolor","color',this.background_color_nod","color',this.color_line_edg","color_line_edg","color_line_edge_algo","color_nod","color_node_algo","compon","condit","const","constant","constructor","constructor(priv","constructor(transl","contain","container.algorithm","container.buttonclick","container.buttonclicked===\"addvertic","container.changeselect","container.changeselect==\"changecoloredg","container.changeselect==\"changecoloredgesalgo","container.changeselect==\"changecolornodesalgo","container.changeselect==\"changecolorscreen","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formchangecolor","container.graphes.posit","container.message+=this.translate.instant(\"graphes.msg18","container.message+=this.translate.instant(\"graphes.msg19","container.message=this.translate.instant(\"graphes.msg1","container.message=this.translate.instant(\"graphes.msg10\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg11\",{sourceid:edge.source().id(),targetid:edge.target().id","container.message=this.translate.instant(\"graphes.msg12\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg17","container.message=this.translate.instant(\"graphes.msg2","container.message=this.translate.instant(\"graphes.msg22","container.message=this.translate.instant(\"graphes.msg23","container.message=this.translate.instant(\"graphes.msg24","container.message=this.translate.instant(\"graphes.msg25\",{last:container.selectednode[0],new:container2.newnodeid","container.message=this.translate.instant(\"graphes.msg26","container.message=this.translate.instant(\"graphes.msg27","container.message=this.translate.instant(\"graphes.msg28","container.message=this.translate.instant(\"graphes.msg29","container.message=this.translate.instant(\"graphes.msg3","container.message=this.translate.instant(\"graphes.msg30","container.message=this.translate.instant(\"graphes.msg31","container.message=this.translate.instant(\"graphes.msg32","container.message=this.translate.instant(\"graphes.msg33","container.message=this.translate.instant(\"graphes.msg34","container.message=this.translate.instant(\"graphes.msg35","container.message=this.translate.instant(\"graphes.msg36","container.message=this.translate.instant(\"graphes.msg37\",{height:container2.height","container.message=this.translate.instant(\"graphes.msg38","container.message=this.translate.instant(\"graphes.msg39","container.message=this.translate.instant(\"graphes.msg4","container.message=this.translate.instant(\"graphes.msg40","container.message=this.translate.instant(\"graphes.msg41","container.message=this.translate.instant(\"graphes.msg6","container.message=this.translate.instant(\"graphes.msg7\",{selectednode1:container.selectednode[0],selectednode2:container.selectednode[1],weight:container.weight","container.message=this.translate.instant(\"graphes.msg8","container.message=this.translate.instant(\"graphes.msg9","container.message=this.translate.instant(\"screenbox.msg23","container.message=this.translate.instant('graphes.msg23","container.message=this.translate.instant('screenbox.msg41","container.nodeid=0","container.nodeidchanged=container2.newnodeid","container.nodename=\"numeriqu","container.remov","container.remove==\"remov","container.restorearray.push(elem","container.saveupload","container.selectednod","container.selectednode.push(node.data('id","container.weight=nul","container2","container2.height+'px","container2.height=nul","container2.height=screen.style.height.slice(0","container2.newnodeid","container2.newnodeid=nul","container2.nodeid","container2.nodeid=nul","container2.weightform=nul","counter","curv","cy","cytoscap","data","data(weight","data_edge_color","data_edge_color_algo","default","delay","descript","destroy","destroyed.destroy","direct","doesn't","dri","e.g","edg","edge.data('weight","edge.remov","edge.source().id","edge.source().id()==node2","edge.source().id()},${this.translate.instant(\"info.t","edge.style('color',color","edge.style('color',this.data_edge_color","edge.style('lin","edge.style('target","edge.target().id","edge.target().id()==node1","edge.target().id()==node2","edge=this.cy.add","edges.foreach((edge:ani","edgesourceid","edgetargetid","elem:ani","elem=container.restorearray.pop","elem={status:\"add\",element:edg","elem={status:\"add\",element:nod","elem={status:\"add\",element:nodenew","elem={status:\"remove\",element:edg","elem={status:\"remove\",element:nod","element","element+=`,${this.translate.instant(\"info.w","element.isedg","element.remov","element:string=`(${this.translate.instant(\"info.","element=elem.el","enumer","event","evt.cyposit","evt.posit","evt.target","evt:ani","exist","exist:boolean=fals","exist=tru","export","file","first","follow","form","formachangesizescreen","formachangesizescreen.style.display=\"block","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","formaddedge.style.display='non","formaddnode.style.display=\"block","formaddnode.style.display=\"non","formaddnode=container.el.nativeelement.queryselector('.formaddnod","format","formchangecolor","formchangecolor.style.display=\"block","formchangecolor.style.display=\"non","formchangenodeid.style.display","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","found","gener","getlisteofedg","getlisteofedge():str","getlistofnod","getlistofnode():str","given","graph","grapheservic","group","handl","haystack","here","i:number=0","id","idexists=fals","idexists=tru","if(!exist","if((edge.source().id()==node1","if(container.buttonclicked==\"addedg","if(container.buttonclicked==\"addvertic","if(container.buttonclicked==\"default","if(container.buttonclicked==\"restor","if(container.buttonclicked===\"addedg","if(container.changeselect==\"changecoloredg","if(container.changeselect==\"changecoloredgesalgo","if(container.changeselect==\"changecolornod","if(container.changeselect==\"changecolornodesalgo","if(container.changeselect==\"changecolorscreen","if(container.changeselect==\"changeidnod","if(container.changeselect==\"changesizescreen","if(container.changeselect===\"changeidnod","if(container.nodename!=\"customtext","if(container.nodename==\"alphab","if(container.nodename==\"customtext","if(container.nodename==\"numeriqu","if(container.remove==\"remov","if(container.remove==\"reset","if(container.restorearray.length!=0","if(container.selectednode.length","if(container.selectednode.length!=0","if(container.typegraph","if(container.weight!=0","if(container2.height","if(container2.nodeid","if(elem.status==\"add","if(element.isnod","if(i!=this.cy?.edges().length","if(i!=this.cy?.nodes().length","if(idexists==fals","if(node.data('id')==container2.newnodeid","if(node.data('id')==container2.nodeid","if(node.data('id')==this.alphabets[0","if(node.data('id')==this.counter+1","if(this.cy.nodes().length","if(this.cy.nodes().length==0","if(this.typegraph","if(this.typegraphe.split","import","includ","info","initi","initiali","inject","instanc","interact","internation","isedgeremov","isedgeremove(node1","label","layout","length","letter","line","linecolor","lineedgecolor","list","listen","listofedg","listofedge+=el","listofedge:str","listofnod","listofnode+=`${node.data(\"id","listofnode:str","log","logic","lowercas","made","manag","margin","match","matrix","matrixadj","matrixadjancy():array","messag","met","method","need","new","ngx","node","node.id","node.position('i","node.position('x'),i","node.remov","node.style('background","node.style('color',color","node.style('color',this.color_nod","node1","node2","node:ani","node=this.cy.add","nodenew.id","nodenew=this.cy.add","nodes.length","none","number","numnod","object","onchangebuttonclick","onchangebuttonclicked(contain","onchangebuttonclicked(container:any):void","ondestroy","ondestroy():void","onedgetap","onedgetap(contain","onedgetap(container:any):void","oninit","oninit(contain","onnodetap","onnodetap(contain","onnodetap(container:any):void","onremovechang","onremovechange(contain","onremovechange(container:any):void","onscreentap","onscreentap(contain","onscreentap(container:any):void","oper","option","option(chnag","param","paramet","perform","po","posit","previou","privat","properti","providedin","public","red","reject","rejeteraddedgeweight","rejeteraddedgeweighted(contain","rejeteraddedgeweighted(container:any,container2:any):void","rejeteraddnod","rejeteraddnode(contain","rejeteraddnode(container:any,container2:any):void","rejeterchangecolor","rejeterchangecolor(contain","rejeterchangecolor(container:any):void","rejeterchangenodeid","rejeterchangenodeid(contain","rejeterchangenodeid(container:any,container2:any):void","rejeterchangesizescreen","rejeterchangesizescreen(contain","rejeterchangesizescreen(container:any,container2:any):void","relat","remov","render","repres","represent","reset","resetcolor","restor","restorearray","restoregraph","restoregraphe(contain","restoregraphe(container:any):void","result","return","root","screen","screen.style.backgroundcolor=container2.bgcolor","screen.style.height","screen=container.el.nativeelement.queryselector('.scr","screenboxcompon","search","searcheedgechnagebc","searcheedgechnagebc(contain","searcheedgechnagebc(container:any,source:string,target:string,linecolor:string):void","second","select","selector('edg","selector('nod","servic","set","settimeout","shape","size","someth","sourc","source:container.selectednode[0","specifi","src/app/allservice/graphe.service.t","state","string","string.fromcharcode(65","style","tap","target","target:container.selectednode[1","target_arrow_color","target_arrow_color_algo","targetarrowcolor","text","this.alphabets.concat","this.alphabets.shift","this.alphabets0.concat","this.alphabets0.map(lett","this.alphabets=this.alphabets.concat(this.alphabets0.map(lett","this.background_color_nod","this.background_color_node=container2.bgcolor","this.background_color_node_algo,this.color_node_algo","this.background_color_node_algo=container2.bgcolor","this.changecoloredg","this.changecolornod","this.changecolornode(nod","this.ci","this.color_line_edg","this.color_line_edge=container2.bgcolor","this.color_line_edge_algo=container2.bgcolor","this.color_nod","this.color_node=container2.color","this.color_node_algo=container2.color","this.count","this.counter=0","this.cy.add","this.cy.add(el","this.cy.destroy","this.cy.edges().foreach((edge:ani","this.cy.edges().style('color","this.cy.edges().style('lin","this.cy.edges().style('target","this.cy.elements('edg","this.cy.fit","this.cy.getelementbyid(container.selectednode[0","this.cy.nod","this.cy.nodes().foreach((node:ani","this.cy.nodes().length","this.cy.nodes().style('background","this.cy.nodes().style('color","this.cy.on('tap","this.cy.remove(edg","this.cy.remove(nod","this.cy.remove(this.cy.el","this.cy.styl","this.cy?.edges().foreach((edge:ani","this.cy?.nodes().foreach((node:ani","this.data_edge_color","this.data_edge_color=container2.color","this.data_edge_color_algo=container2.color","this.isedgeremove(container.selectednode[0],container.selectednode[1],contain","this.posit","this.position=po","this.resetcolor","this.restoregraphe(contain","this.target_arrow_color","this.target_arrow_color=container2.fcolor","this.target_arrow_color_algo=container2.fcolor","this.translate.instant(\"graphes.msg20","this.translate.instant(\"graphes.msg21","this.typegraph","this.typegraphe=container.typegraph","time","track","translat","translate/cor","translateservic","triangl","two","type","typegraph","undirect","unweight","up","updat","us","user","valu","var","variabl","variou","visual","void","weight","weight:container.weight","white","width","x","y","yellow"],"injectables/SaveUploadService.html":["0","1","800","900","a.click","a.download","a.href","action","add","addit","anchor","angular/cor","application/json","background","bg","blob","blob([json.stringify(elementsjson","block","boolean","catch","chang","check","class","clean","clear","color","const","constructor","constructor(priv","constructor(transl","contain","container.algorithm","container.buttonclick","container.changeselect","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formchangecolor","container.graphes.changetypegraphe(contain","container.graphes.ci","container.graphes.cy.add(json.el","container.graphes.cy.elements().remov","container.graphes.cy.fit","container.graphes.cy.json","container.graphes.cy.nodes().length","container.graphes.cy.reset","container.graphes.posit","container.message=this.translate.instant(\"algos.msg11","container.message=this.translate.instant(\"saveuploads.msg1","container.message=this.translate.instant(\"saveuploads.msg2","container.nodeid=largestnodeid","container.remov","container.saveupload","container.selectednod","container.typegraph","container.typegraphe=json.typegraph","correspond","creat","current","cy","cy.jpg","cy.png","cytoscap","data","descript","document.createelement('a","document.createelement('input","download","e","element","elementsjson","elementsjson.typegraph","error","event","event.target","exist","export","file","fileread","fit","formachangesizescreen","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","format","formchangecolor","formchangecolor.style.display=\"non","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","full","fullgraph","fullgraph=tru","fullgraphe=tru","graph","graph.jpg","graph.png","graphe.json","handl","height","highest","htmlinputelement).files?.[0","if(!container.graphes.cy.nodes().length","if(container.saveupload==\"sav","if(container.saveupload==\"savejpg","if(container.saveupload==\"savejpgscreen","if(container.saveupload==\"savepng","if(container.saveupload==\"savepngscreen","if(container.saveupload==\"upload","if(container.typegraph","imag","import","info","initi","inject","input","input.click","input.onchang","input.typ","instanc","jpg","jpgpromis","jpgpromise.then((blob:ani","json","json.elements.nodes.foreach((nod","json.parse(e.target?.result","json.typegraph","largestnodeid","local","make","match","maxheight","maximum","maxwidth","method","new","ngx","nodeid","non","object","onsaveuploadchang","onsaveuploadchange(contain","onsaveuploadchange(container:any):void","oper","operations.it","option","origin","output","param","paramet","parseint(node.data.id","perform","png","pngpromis","pngpromise.then((blob","promis","properti","provid","providedin","qualiti","reader","reader.onload","reader.readastext(fil","refer","respons","result","return","root","save","save/upload","savejpg","savejpg(contain","savejpg(container:any,fullgraphe:boolean=true):void","savejson","savejson(contain","savejson(container:ani","savepng","savepng(contain","savepng(container:any,fullgraph:boolean=true):void","saveuploadservic","scale","screenboxcompon","servic","set","size","sourc","src/app/allservice/sav","string","temporari","this.savejpg(contain","this.savejpg(container,fals","this.savejson(contain","this.savepng(contain","this.savepng(container,fals","this.uploadjson(contain","translat","translate/cor","translateservic","tri","trigger","true","type","typegraph","up","updat","upload","upload.service.t","uploadjson","uploadjson(contain","uploadjson(container:ani","url","url.createobjecturl(blob","url.revokeobjecturl(url","us","view","viewport","void","whether","white","width"],"coverage.html":["0","0/1","0/2","0/5","0/9","1/1","100","16/16","2/2","21","3/3","4/19","4/4","48/48","5/5","66","7/7","aboutcompon","addnodecompon","addweightededgecompon","algorithmservic","appcompon","changecolorcompon","changeidnodecompon","changesizescreencompon","color.component.t","color/chang","compon","contactcompon","coverag","darkmodeservic","document","edge.component.t","edge/add","file","footercompon","grapheservic","headercompon","id","identifi","infocompon","inject","match","matrixcompon","messagecompon","mode.service.t","node.component.t","node/add","node/chang","project","result","saveuploadservic","screen.component.t","screen/chang","screenboxcompon","screencompon","selectcompon","size","src/app/about/about.component.t","src/app/allservice/algorithm.service.t","src/app/allservice/dark","src/app/allservice/graphe.service.t","src/app/allservice/sav","src/app/app.component.t","src/app/components/add","src/app/components/chang","src/app/components/info/info.component.t","src/app/components/matrix/matrix.component.t","src/app/components/message/message.component.t","src/app/components/screen/screen.component.t","src/app/components/select/select.component.t","src/app/contact/contact.component.t","src/app/footer/footer.component.t","src/app/header/header.component.t","src/app/screenbox/screenbox.component.t","statement","type","upload.service.t","weight"]},"length":25},"tokenStore":{"root":{"0":{"docs":{"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012},"coverage.html":{"ref":"coverage.html","tf":0.046153846153846156}},".":{"7":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}},"docs":{}},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.1}}},"3":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"6":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}},".":{"1":{"docs":{},".":{"4":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}},"docs":{}}},"docs":{}},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"docs":{}},"docs":{}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.006724949562878279},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010050251256281407}},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}}}}}},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"docs":{}}},"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}},"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}},"docs":{}}},"3":{"docs":{},"/":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}},"docs":{}}},"4":{"0":{"0":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248}},"+":{"docs":{},"'":{"docs":{},"p":{"docs":{},"x":{"docs":{},"'":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}},"docs":{}},"8":{"docs":{},"/":{"4":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"docs":{}},"docs":{}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}},"/":{"1":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"docs":{}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}},"docs":{}}},"5":{"0":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}},"docs":{},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.023076923076923078}}},"docs":{}}},"6":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"docs":{}},"7":{"0":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}},"docs":{},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}},"docs":{}}},"8":{"0":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}},"docs":{}},"docs":{}},"9":{"0":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}},"docs":{}},"docs":{}},"docs":{},"a":{"docs":{},"d":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.05228758169934641},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":5.026143790849673},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":5.018691588785047},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.030303030303030304},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011363636363636364}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.01},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.00941492938802959},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00432152117545376}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.007778738115816767}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}},"p":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}},"l":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004753673292999135}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.009950248756219}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.024875621890547265},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.033333333333333},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}}}}}}}}}}}},"r":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0033624747814391394},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0038893690579083835}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"o":{"docs":{},"w":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00864304235090752}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":5.052631578947368},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.04},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.01882985877605918},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004753673292999135}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.017045454545454544},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":5.002689979825151},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005185825410544511}},"s":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}},"docs":{}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"1":{"8":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.03773584905660377}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967}}}}},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}}}}}}},"x":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272}},"'":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.024844720496894408},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004753673292999135},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00432152117545376}}}}},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.018633540372670808},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"$":{"docs":{},"(":{"docs":{},"`":{"docs":{},"#":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"$":{"docs":{},"(":{"docs":{},"`":{"docs":{},"#":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688}}}}}}},"z":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0121049092131809}},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.011725293132328308}},"(":{"docs":{},"[":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}},"s":{"docs":{},"e":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204}}}},"l":{"docs":{},"l":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.08695652173913043},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.055944055944055944},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.07751937984496124},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011363636363636364},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.013828867761452032},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":5.024844720496894},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"1":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"1":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":5.027972027972028},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":5.0310077519379846},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283}},"c":{"docs":{},"k":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011363636363636364},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.0196078431372549},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.018633540372670808},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.02097902097902098},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.023255813953488372},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.03},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.030303030303030304},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.041666666666666664},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.026785714285714284},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"u":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.04597701149425287},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":5.078947368421052},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":5.03921568627451},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":5.0514018691588785},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.05},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":5.043478260869565},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":5.048951048951049},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":5.054263565891473},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":5.0625},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":5.073170731707317},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":5.0344827586206895},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":5.09},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":5.05050505050505},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":5.035},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":5.069444444444445},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":5.025568181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":5.025974025974026},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752},"coverage.html":{"ref":"coverage.html","tf":0.12307692307692308}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.11801242236024845},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0121049092131809},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.03975799481417459},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204}}}}}},"t":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"'":{"docs":{},",":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":5.041666666666667},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332}}},"docs":{}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.05043712172158709},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.05012964563526361},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.05025125628140704}},"e":{"docs":{},"r":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.011668107173725151}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"+":{"docs":{},"'":{"docs":{},"p":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}}}}},"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"7":{"0":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}}},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0038893690579083835},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"5":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"*":{"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"j":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"j":{"docs":{},"=":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"*":{"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}},"y":{"docs":{},".":{"docs":{},"$":{"docs":{},"(":{"docs":{},"`":{"docs":{},"#":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}},"d":{"docs":{},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}},"s":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},",":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967}},"e":{"docs":{},"+":{"docs":{},"=":{"docs":{},"`":{"docs":{},"(":{"docs":{},"s":{"docs":{},":":{"docs":{},"$":{"docs":{},"{":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},",":{"docs":{},"t":{"docs":{},":":{"docs":{},"$":{"docs":{},"{":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},",":{"docs":{},"w":{"docs":{},":":{"docs":{},"$":{"docs":{},"{":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"k":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"2":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"docs":{}},"8":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"1":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}},"docs":{}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}}}}}}}}}}}}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"2":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"4":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"5":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"3":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"4":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"4":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"2":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}},"docs":{}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}},"2":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}},"docs":{}}}}}}}}}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"docs":{}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}},"docs":{}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"4":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005185825410544511}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0033624747814391394}}}}}}}},"=":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102}}}}}},"s":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.03833221250840619},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.01728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.03015075376884422}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.03},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.030303030303030304},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.026785714285714284},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888}}}}}}}}},"e":{"docs":{},"l":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.007692307692308}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008375209380234505}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.023450586264656615}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}},"y":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0038893690579083835},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.021775544388609715}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.006914433880726016}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.01},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.011432414256893073},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"|":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"|":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"|":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"|":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"|":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}},"l":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"$":{"docs":{},"(":{"docs":{},"`":{"docs":{},"#":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"$":{"docs":{},"(":{"docs":{},"`":{"docs":{},"#":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.07142857142857142}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.041666666666666664},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.03},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.08333333333333333},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.017045454545454544},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":5.035714285714286},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.04},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011363636363636364},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.007778738115816767},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.02512562814070352}},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.007397444519166106}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688}}}},"√©":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.011725293132328308}}}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}},"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.05660377358490566}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}}}},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.01},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01507537688442211}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"d":{"docs":{},"g":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.056074766355140186},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.037267080745341616},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.019502353732347006},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.024200518582541054}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}}}}},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}},"'":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688}},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}},"}":{"docs":{},",":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.02336448598130841},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011363636363636364},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}}}}}}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}},"i":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047}},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}}}}},"l":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003025064822817632},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010050251256281407}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.014204545454545454}},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}},"+":{"docs":{},"=":{"docs":{},"`":{"docs":{},",":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"w":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"`":{"docs":{},"(":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"s":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},":":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.01},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01340033500837521},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.037267080745341616},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248}}}}},"n":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795}}}},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}},"u":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01340033500837521}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010050251256281407}},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}},"e":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805}},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":5.048780487804878},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008}},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}}}},"a":{"docs":{},"t":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}},"'":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623}}}},"c":{"docs":{},"u":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}},"s":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204}}}}},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"l":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.018633540372670808}}}}}}},"r":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}},"a":{"docs":{},"n":{"docs":{},"√ß":{"docs":{},"a":{"docs":{},"i":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.03773584905660377},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}}},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.031055900621118012},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.02097902097902098},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.023255813953488372},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.06},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.019886363636363636},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.023537323470073975},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.01901469317199654},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.02847571189279732}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.032679738562091505},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.037267080745341616},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.04195804195804196},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.046511627906976744},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.03},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.017045454545454544},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":5.001728608470182},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}},"e":{"docs":{},",":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332}},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436}},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":5.022988505747127},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.05426356589147287},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.035},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}},"r":{"docs":{},"e":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"4":{"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}},"y":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"?":{"docs":{},".":{"docs":{},"[":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}},"e":{"docs":{},"r":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.14427860696517414},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.05},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.034482758620689655},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.01},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.017045454545454544},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}},"a":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010050251256281407}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5}}}},"i":{"docs":{},"c":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":5.002017484868864},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":5.026785714285714},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":5.0012964563526365},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":5.005025125628141},"coverage.html":{"ref":"coverage.html","tf":0.03076923076923077}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.03},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":5.04},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02}}}}}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02}}}}},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.05228758169934641},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.0514018691588785},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.06832298136645963},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.06993006993006994},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.05426356589147287},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.08},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.050505050505050504},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.05},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.07792207792207792},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.018691588785046728},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.024844720496894408},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.027972027972027972},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.031007751937984496},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.03},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.05555555555555555},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.03409090909090909},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.023450586264656615}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.0979020979020979},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.017484868863483525},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.007778738115816767},"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}},"*":{"1":{"0":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"+":{"docs":{},"+":{"docs":{},"*":{"1":{"0":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"docs":{}}}}}}}}},"=":{"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}},"f":{"docs":{},"(":{"docs":{},"!":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}},"k":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"!":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"!":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}},"i":{"docs":{},"!":{"docs":{},"=":{"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},"?":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"2":{"docs":{},"!":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"=":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"=":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004753673292999135}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"docs":{}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"+":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571}},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.2},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024},"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0707070707070707},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":5.040404040404041},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"j":{"docs":{},"a":{"docs":{},"x":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204}},".":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102}},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776}}}},"r":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}},"d":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}},"k":{"docs":{},"e":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}},"x":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":10.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.0049751243781095}}}},"e":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.07142857142857142}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.06},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":5.02},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.01},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}},"s":{"docs":{},"g":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015}}}}}}}}}}}}}}},"c":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.025}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"u":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.04597701149425287}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.027972027972027972},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.019886363636363636},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.010803802938634399},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008375209380234505}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.02097902097902098}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0660377358490566}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}}},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.0392156862745098},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.024844720496894408},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.055944055944055944},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0363147276395427},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.026361279170267933}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986}}}}}},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"x":{"docs":{},"'":{"docs":{},")":{"docs":{},",":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}},"docs":{}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.017045454545454544},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}},"≈ì":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.03896103896103896},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"overview.html":{"ref":"overview.html","tf":10.055555555555555}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.0196078431372549}}}}}}}}},"i":{"docs":{},"t":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},",":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.02549697493517718},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01675041876046901}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01507537688442211}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.02556818181818182},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.020847343644922665},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.018150388936905792},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01340033500837521}},"e":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011363636363636364},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.011432414256893073},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.010803802938634399},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010050251256281407}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.04},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.01882985877605918}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}},"v":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0033624747814391394}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.0196078431372549},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.03271028037383177},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.018633540372670808},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.03496503496503497},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.023255813953488372},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.04},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.03},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.026785714285714284},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.022727272727272728},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00950734658599827}}}}},"m":{"docs":{},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0033624747814391394}},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}},"x":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.010759919300605245},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}}},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0038893690579083835}}}}},"u":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"e":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}},"a":{"docs":{},"t":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.04},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0038893690579083835}}}},"e":{"docs":{},"v":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.2},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024},"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00648228176318064}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.014794889038332213},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.015557476231633534},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008375209380234505}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.04},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.027972027972027972},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004753673292999135}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00432152117545376}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0660377358490566}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.023537323470073975},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.014122394082044385}},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}},"l":{"docs":{},"e":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.046511627906976744},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.05555555555555555},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776}}}}}},"t":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":5.011363636363637},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.019502353732347006},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.01728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01675041876046901},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":5.055555555555555},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}}},"i":{"docs":{},"c":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0033624747814391394},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.03896103896103896},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004753673292999135}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014925373134328358},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":5.025974025974026},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}},"o":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003025064822817632}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}},":":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008375209380234505}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.008069939475453935},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.01},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004753673292999135},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}}},"a":{"docs":{},"g":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.006724949562878279},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.012532411408815903}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.036931818181818184},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.03896103896103896},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.03093476798924008},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.013828867761452032},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"6":{"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}},"t":{"docs":{},"e":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01675041876046901}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.014204545454545454}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.017045454545454544},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":5.006700167504188},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}},":":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}}}},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.07751937984496124},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024},"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.02631578947368421},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"coverage.html":{"ref":"coverage.html","tf":0.023076923076923078}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004034969737726967}}}}}}}},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.05660377358490566}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.05263157894736842},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015503875968992248},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.041666666666666664},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.020202020202020204},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}}}},"x":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0033624747814391394},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"'":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03333333333333333},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.017045454545454544},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0033624747814391394},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01507537688442211}},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}},"u":{"docs":{},"e":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}},"e":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004707464694014795}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"5":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"docs":{}},"docs":{}}}}}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}},"4":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688}},"e":{"docs":{},"=":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003025064822817632}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"f":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"f":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"#":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}}}}},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},"c":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}},"e":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}},"docs":{}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00216076058772688}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008}}}}}}},"?":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"=":{"docs":{},"p":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"0":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}},"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"0":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00432152117545376}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"c":{"docs":{},"h":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.026785714285714284}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.018691588785046728},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011363636363636364},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.07792207792207792},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005379959650302623},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.011668107173725151}},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.014794889038332213}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.05}}}},"m":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005185825410544511}}}}},"w":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003025064822817632},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}}}}}}}}},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01507537688442211}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012},"coverage.html":{"ref":"coverage.html","tf":0.007692307692307693}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.013449899125756557},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"r":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}},"a":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}},"e":{"docs":{},"w":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01340033500837521}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.011725293132328308}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.00605245460659045}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}},"s":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}}}},"s":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}},"√©":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.02219233355749832},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0038893690579083835}}}}}},"c":{"docs":{},"e":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.016666666666666666},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007751937984496124},"components/ContactComponent.html":{"ref":"components/ContactComponent.html","tf":0.020833333333333332},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008522727272727272},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005185825410544511}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}}}}}},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0033624747814391394},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}},"o":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.022727272727272728},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.014794889038332213},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.013828867761452032},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008375209380234505}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}},"j":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0026899798251513113}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01340033500837521}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"?":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"docs":{}}}}}}}}},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0016750418760469012}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.004975124378109453}},"e":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"'":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"=":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.022988505747126436}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"'":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.034482758620689655}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.005681818181818182}}}}}}}},"n":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0056179775280898875}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0012964563526361278}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003457216940363008}},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025929127052722557}}}},"o":{"docs":{},"f":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}},"e":{"docs":{},"+":{"docs":{},"=":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"+":{"docs":{},"=":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0020174848688634837}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}},"'":{"docs":{},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.009950248756218905},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.102803738317757},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.022727272727272728},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.00605245460659045},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.006050129645635264},"coverage.html":{"ref":"coverage.html","tf":0.015384615384615385}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047}}}}}},"?":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.002840909090909091}}}}}}}},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006700167504187605}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0013449899125756557}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.0033500837520938024}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0006724949562878278}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005025125628140704}}}}}}}}},"_":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000432152117545376}}},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.000864304235090752}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001728608470181504}}}}}}}}},"length":2357},"corpusTokens":["0","0.7","0/1","0/2","0/5","0/9","0]==\"direct","0]==\"undirect","1","1/1","10","100","103","12","16","16.1.4","16/16","1]==\"unweight","1]==\"weight","2","2/2","20","2000","21","26","2d","3/3","4","4/19","4/4","400","400+'px';//default","48/48","5/5","50","66","7/7","70","800","900","_","a.click","a.data('weight","a.download","a.href","about.component.css","about.component.html","about/about.compon","aboutcompon","action","ad","add","addit","addnod","addnode(contain","addnode(container:any,container2:any):void","addnodecompon","addweightededg","addweightededge(contain","addweightededge(container:any,container2:any):void","addweightededgecompon","adjac","adjacencymatrix:array","adjacencymatrixformat","adjust","affich","afterviewcheck","algo","algorithm","algorithm:str","algorithmservic","algos:algorithmservice,protect","allpositive:boolean=tru","allservice/algorithm.servic","allservice/dark","allservice/graphe.servic","allservice/sav","alphabet","alphabets0","alreadi","anchor","angular","angular/common","angular/common/http","angular/cor","angular/form","angular/platform","anim","anoth","app","app.compon","app.component.css","app.component.html","appcompon","appli","applic","application/json","appmodul","approutingmodul","ar","array","array.from","arrow","artifact","assets/i18n","assign","associ","automat","b.data('weight","b:ani","background","background_color_nod","background_color_node_algo","base","befor","bellman","bellmanford","bellmanford.distanceto(container.graphes.cy.$(`#${targetnodeid","bellmanford.distanceto(targetnod","bellmanford.pathto(container.graphes.cy.$(`#${targetnodeid","bellmanford.pathto(targetnod","bellmanfordalgorithm","bellmanfordalgorithm(rootnodeid","bellmanfordanim","bellmanfordanimation(rootnodeid","between","bezier","bf","bfs(node","bfs(node:any,visitednodes:any):void","bfsanim","bfsanimation(rootnodeid","bfspathstr","bg","bgcolor","black","blob","blob([json.stringify(elementsjson","block","blue","boolean","bootstrap","box","box'","breadth","break","brows","browser","browsermodul","build","button","buttonclick","buttonclicked:str","call","capabl","case","catch","chang","changealgorithm","changealgorithm(contain","changealgorithm(container:any):void","changechang","changechanges(contain","changechanges(container:ani","changecolor","changecolor(contain","changecolor(container:any,container2:ani","changecolorcompon","changecoloredg","changecoloredge(edg","changecoloredge(edge:any,color:string,lineedgecolor:string,targetarrowcolor:string,time:number=10","changecolornod","changecolornode(nod","changecolornode(node:any,bgcolor:string,color:string,time:number=10","changeidnodecompon","changelanguag","changelanguage(ev","changenodeenum","changenodeenum(contain","changenodeenum(container:any):void","changenodeid","changenodeid(contain","changenodeid(container:any,container2:any):void","changes.emit","changeselect","changeselect:str","changesizescreen","changesizescreen(contain","changesizescreen(container:any,container2:any):void","changesizescreencompon","changetypegraph","changetypegraphe(contain","changetypegraphe(container:any):void","charact","check","chemin","chngetypegraph","chngetypegraphe(data","chngetypegraphe(data:str","choic","class","class:str","clean","cleanup","clear","cli","click","code","color","color',bgcolor","color',lineedgecolor","color',this.background_color_nod","color',this.color_line_edg","color.compon","color.component.css","color.component.html","color.component.t","color/chang","color_line_edg","color_line_edge_algo","color_nod","color_node_algo","command","commonmodul","complet","compon","component,eventemitter,input","component,input","components/add","components/chang","components/info/info.compon","components/matrix/matrix.compon","components/message/message.compon","components/screen/screen.compon","components/select/select.compon","condit","connect","console.log(i","const","constant","constructor","constructor(darkmod","constructor(el","constructor(graph","constructor(graphservic","constructor(priv","constructor(protect","constructor(transl","contact","contact.component.css","contact.component.html","contact/contact.compon","contactcompon","contactvar","contactvar:number=0","contain","container'","container.algorithm","container.algorithm==\"dijkstraab","container.algorithm==\"prim","container.buttonclick","container.buttonclicked===\"addvertic","container.changeselect","container.changeselect==\"changecoloredg","container.changeselect==\"changecoloredgesalgo","container.changeselect==\"changecolornodesalgo","container.changeselect==\"changecolorscreen","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formaddnod","container.el.nativeelement.queryselector('.formchangecolor","container.graphes.background_color_nod","container.graphes.background_color_node,container.graphes.color_nod","container.graphes.background_color_node_algo","container.graphes.background_color_node_algo,container.graphes.color_node_algo,++i*2000","container.graphes.background_color_node_algo,container.graphes.color_node_algo,j","container.graphes.changecoloredge(edge,container.graphes.data_edge_color_algo,container.graphes.color_line_edge_algo,container.graphes.target_arrow_color_algo,j=++i*2000","container.graphes.changecolornode(edge.sourc","container.graphes.changecolornode(edge.target","container.graphes.changecolornode(nod","container.graphes.changecolornode(targetnod","container.graphes.changetypegraphe(contain","container.graphes.ci","container.graphes.color_line_edge_algo","container.graphes.color_nod","container.graphes.cy.$(`#${rootnodeid","container.graphes.cy.$(`#${targetnodeid","container.graphes.cy.add(json.el","container.graphes.cy.edges().foreach((edge:ani","container.graphes.cy.edges().toarray","container.graphes.cy.elements().bellmanford","container.graphes.cy.elements().bf","container.graphes.cy.elements().df","container.graphes.cy.elements().dijkstra","container.graphes.cy.elements().remov","container.graphes.cy.fit","container.graphes.cy.json","container.graphes.cy.nodes().first","container.graphes.cy.nodes().foreach((node:ani","container.graphes.cy.nodes().length","container.graphes.cy.nodes().s","container.graphes.cy.reset","container.graphes.data_edge_color_algo","container.graphes.posit","container.graphes.resetcolor","container.graphes.searcheedgechnagebc(container,lastnode.data('id'),node.data('id'),container.graphes.color_line_edge_algo","container.graphes.target_arrow_color_algo","container.graphes.typegraphe.split","container.messag","container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1","container.message+=this.translate.instant(\"graphes.msg18","container.message+=this.translate.instant(\"graphes.msg19","container.message=\"kruskal(mst","container.message=\"prime(mst","container.message=container.translate.instant(\"algos.msg10","container.message=container.translate.instant(\"algos.msg11","container.message=container.translate.instant(\"algos.msg12","container.message=container.translate.instant(\"algos.msg8","container.message=lastmessag","container.message=this.translate.instant(\"algos.msg11","container.message=this.translate.instant(\"algos.msg7\",{algorithm:container.algorithm","container.message=this.translate.instant(\"graphes.msg1","container.message=this.translate.instant(\"graphes.msg10\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg11\",{sourceid:edge.source().id(),targetid:edge.target().id","container.message=this.translate.instant(\"graphes.msg12\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg17","container.message=this.translate.instant(\"graphes.msg2","container.message=this.translate.instant(\"graphes.msg22","container.message=this.translate.instant(\"graphes.msg23","container.message=this.translate.instant(\"graphes.msg24","container.message=this.translate.instant(\"graphes.msg25\",{last:container.selectednode[0],new:container2.newnodeid","container.message=this.translate.instant(\"graphes.msg26","container.message=this.translate.instant(\"graphes.msg27","container.message=this.translate.instant(\"graphes.msg28","container.message=this.translate.instant(\"graphes.msg29","container.message=this.translate.instant(\"graphes.msg3","container.message=this.translate.instant(\"graphes.msg30","container.message=this.translate.instant(\"graphes.msg31","container.message=this.translate.instant(\"graphes.msg32","container.message=this.translate.instant(\"graphes.msg33","container.message=this.translate.instant(\"graphes.msg34","container.message=this.translate.instant(\"graphes.msg35","container.message=this.translate.instant(\"graphes.msg36","container.message=this.translate.instant(\"graphes.msg37\",{height:container2.height","container.message=this.translate.instant(\"graphes.msg38","container.message=this.translate.instant(\"graphes.msg39","container.message=this.translate.instant(\"graphes.msg4","container.message=this.translate.instant(\"graphes.msg40","container.message=this.translate.instant(\"graphes.msg41","container.message=this.translate.instant(\"graphes.msg6","container.message=this.translate.instant(\"graphes.msg7\",{selectednode1:container.selectednode[0],selectednode2:container.selectednode[1],weight:container.weight","container.message=this.translate.instant(\"graphes.msg8","container.message=this.translate.instant(\"graphes.msg9","container.message=this.translate.instant(\"saveuploads.msg1","container.message=this.translate.instant(\"saveuploads.msg2","container.message=this.translate.instant(\"screenbox.msg23","container.message=this.translate.instant('algos.msg1","container.message=this.translate.instant('graphes.msg23","container.message=this.translate.instant('screenbox.msg41","container.nodeid=0","container.nodeid=largestnodeid","container.nodeidchanged=container2.newnodeid","container.nodename=\"numeriqu","container.remov","container.remove==\"remov","container.restorearray.push(elem","container.saveupload","container.selectednod","container.selectednode.push(node.data('id","container.typegraph","container.typegraphe.split","container.typegraphe=json.typegraph","container.weight=nul","container2","container2.height+'px","container2.height=nul","container2.height=screen.style.height.slice(0","container2.newnodeid","container2.newnodeid=nul","container2.nodeid","container2.nodeid=nul","container2.weightform=nul","container:ani","containerheight","containerheight:number=70;//height","content","correspond","counter","coverag","creat","current","currentnod","currentnode.neighborhood().nod","curv","cy","cy.elements().floydwarshal","cy.jpg","cy.nodes().foreach((nodea","cy.nodes().foreach((nodeb","cy.png","cytoscap","d'anim","dark","darkmod","darkmodes:darkmodeservic","darkmodes:darkmodeservice,priv","darkmodeservic","data","data(weight","data_edge_color","data_edge_color_algo","de","declar","default","delay","dep","depth","depth:ani","descript","destroy","destroyed.destroy","dev","develop","df","dfsanim","dfsanimation(rootnodeid","dfspathstr","dijkstra","dijkstra'","dijkstra.distanceto(container.graphes.cy.$(`#${targetnodeid","dijkstra.distanceto(targetnod","dijkstra.pathto(container.graphes.cy.$(`#${targetnodeid","dijkstra.pathto(targetnod","dijkstraalgorithm","dijkstraalgorithm(rootnodeid","dijkstraanim","dijkstraanimation(rootnodeid","direct","directed:direct","directed=fals","directed=tru","directive|pipe|service|class|guard|interface|enum|modul","directori","disabl","disablelabel","disablelabell:str","display","dist","distanc","distancetotarget","document","document.createelement('a","document.createelement('input","doesn't","download","dri","d√©lai","e","e.g","e.style('color","e.style('lin","e.style('target","e2","e:ani","edg","edge.compon","edge.component.css","edge.component.html","edge.component.t","edge.data('weight","edge.data('weight')||1","edge.remov","edge.source().id","edge.source().id()==node2","edge.source().id()},${this.translate.instant(\"info.t","edge.style('color',color","edge.style('color',this.data_edge_color","edge.style('lin","edge.style('target","edge.target().id","edge.target().id()==node1","edge.target().id()==node2","edge/add","edge:ani","edge=this.cy.add","edges.foreach((edge:ani","edges.sort((a:ani","edgesourceid","edgetargetid","el","elem:ani","elem=container.restorearray.pop","elem={status:\"add\",element:edg","elem={status:\"add\",element:nod","elem={status:\"add\",element:nodenew","elem={status:\"remove\",element:edg","elem={status:\"remove\",element:nod","element","element+=`,${this.translate.instant(\"info.w","element.isedg","element.remov","element:string=`(${this.translate.instant(\"info.","element=elem.el","elementref","elementref,protect","elementsjson","elementsjson.typegraph","emit","emitt","en","enabl","end","english","enter","enumer","error","est","event","event.target","event.target.id","event.target.valu","eventemitt","evt.cyposit","evt.posit","evt.target","evt:ani","exampl","execut","exist","exist:boolean=fals","exist=tru","export","fals","fcolor","field","file","fileread","find","first","fit","flag","flesh","floyd","floydwarshal","floydwarshall.distance(nodea","floydwarshall.path(nodea","floydwarshallalgorithm","floydwarshallalgorithm(contain","focu","focus","focus.set","follow","footer","footer.component.css","footer.component.html","footer/footer.compon","footercompon","ford","form","formachangesizescreen","formachangesizescreen.style.display=\"block","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","formaddedge.style.display='non","formaddnod","formaddnode.style.display=\"block","formaddnode.style.display=\"non","formaddnode=container.el.nativeelement.queryselector('.formaddnod","format","formchangecolor","formchangecolor.style.display=\"block","formchangecolor.style.display=\"non","formchangenodeid.style.display","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","formsmodul","found","fr","fran√ßai","full","fullgraph","fullgraph=tru","fullgraphe=tru","function","functionhandl","functionhandler:ani","further","gener","get","getbuttonclickedid","getbuttonclickedid(ev","getlisteofedg","getlisteofedge():str","getlistofnod","getlistofnode():str","given","go","graph","graph.jpg","graph.png","graphe.json","graphes:grapheservic","graphes:grapheservice,protect","grapheservic","grapheservice,algorithmservice,saveuploadservice,darkmodeservic","graphservice:grapheservic","group","handl","handler","haystack","header","header.component.css","header.component.html","header/header.compon","headercompon","height","help","here","highest","hook","htmlinputelement).files?.[0","http://localhost:4200","httpclient","httpclientmodul","httploaderfactori","httploaderfactory(http","i*10000","i*2000","i++*10000","i:ani","i:number=0","i=1","id","identifi","idexists=fals","idexists=tru","if(!container.graphes.cy.nodes().length","if(!exist","if((container.algorithm==\"dijkstra","if((edge.source().id()==node1","if(container.algorithm==\"floydwarshal","if(container.algorithm==\"krusk","if(container.buttonclicked==\"addedg","if(container.buttonclicked==\"addvertic","if(container.buttonclicked==\"default","if(container.buttonclicked==\"restor","if(container.buttonclicked===\"addedg","if(container.changeselect==\"changecoloredg","if(container.changeselect==\"changecoloredgesalgo","if(container.changeselect==\"changecolornod","if(container.changeselect==\"changecolornodesalgo","if(container.changeselect==\"changecolorscreen","if(container.changeselect==\"changeidnod","if(container.changeselect==\"changesizescreen","if(container.changeselect===\"changeidnod","if(container.nodename!=\"customtext","if(container.nodename==\"alphab","if(container.nodename==\"customtext","if(container.nodename==\"numeriqu","if(container.remove==\"remov","if(container.remove==\"reset","if(container.restorearray.length!=0","if(container.saveupload==\"sav","if(container.saveupload==\"savejpg","if(container.saveupload==\"savejpgscreen","if(container.saveupload==\"savepng","if(container.saveupload==\"savepngscreen","if(container.saveupload==\"upload","if(container.selectednode.length","if(container.selectednode.length!=0","if(container.typegraph","if(container.typegraphe.split","if(container.weight!=0","if(container2.height","if(container2.nodeid","if(edge.data('weight","if(elem.status==\"add","if(element.isnod","if(i!=1","if(i!=container.graphes.cy.nodes().length","if(i!=this.cy?.edges().length","if(i!=this.cy?.nodes().length","if(i/2!=container.graphes.cy.nodes().length","if(idexists==fals","if(node.data('id')==container2.newnodeid","if(node.data('id')==container2.nodeid","if(node.data('id')==this.alphabets[0","if(node.data('id')==this.counter+1","if(this.cy.nodes().length","if(this.cy.nodes().length==0","if(this.isgraphconnected(container)==tru","if(this.typegraph","if(this.typegraphe.split","imag","implement","import","includ","index","indic","infin","info","info.component.css","info.component.html","infocompon","inform","initi","initiali","inject","input","input.click","input.onchang","input.typ","inputtouch","inputtouched:boolean","instanc","interact","internation","isalledgeposit","isalledgepositive(contain","isalledgepositive(container:any):boolean","isdarkmod","isdarkmode:boolean","isedgeremov","isedgeremove(node1","isgraphconnect","isgraphconnected(contain","isgraphconnected(container:any):boolean","item","items:array","j","j:number=0","jpg","jpgpromis","jpgpromise.then((blob:ani","json","json.elements.nodes.foreach((nod","json.parse(e.target?.result","json.typegraph","karma","kruskal'","kruskalanim","kruskalanimation(contain","kruskalanimation(container:any):void","l'arbr","label","lang","lang:any=localstorage.getitem('languag","languag","largestnodeid","last","lastmessag","lastmessage:str","lastnode:any=pathtotarget.nodes().first","lastnode=nod","lastnodeid","layout","le","length","letter","lifecycl","line","linecolor","lineedgecolor","list","listen","listofedg","listofedge+=el","listofedge:str","listofnod","listofnode+=`${node.data(\"id","listofnode:str","load","loader","local","localstorage.getitem('darkmod","localstorage.setitem('darkmod","localstorage.setitem('languag","log","logic","lorsqu","lowercas","made","main","make","manag","margin","mark","match","mathjax","mathjax.hub","mathjax.hub.queue([\"typeset","matrix","matrix.component.css","matrix.component.html","matrixadj","matrixadjancy():array","matrixcompon","maxheight","maximum","maxwidth","messag","message.component.css","message.component.html","message:str","messagecompon","met","metadata","method","minim","minimum","minimumspanningtreeedg","minimumspanningtreeedges(contain","minimumspanningtreeedges(container:ani","mode","mode.servic","mode.service.t","modul","more","msg","msgbox","msgbox.style.height","msgboxc","msgboxc.style.height","name","navig","need","neighbor","neighbors.foreach((neighbor:ani","new","newnodeid","newweight","ng","ngafterviewcheck","ngmodul","ngonchanges(chang","ngondestroy","ngoninit","ngx","node","node.compon","node.component.css","node.component.html","node.component.t","node.data('id","node.id","node.position('i","node.position('x'),i","node.remov","node.style('background","node.style('color',color","node.style('color',container.graphes.color_node_algo","node.style('color',this.color_nod","node/add","node/chang","node1","node2","node:ani","node=this.cy.add","nodea.id","nodeb","nodeb.id","nodeid","nodeid:ani","nodeid:number=0;//incr","nodeidchang","nodeidchanged:ani","nodenam","nodename:string=\"numeriqu","nodenamingmethod","nodenamingmethode:str","nodenew.id","nodenew=this.cy.add","nodes.length","nodet","non","none","number","numeriqu","numnod","n≈ìud","object","onchang","onchange():void","onchangebuttonclick","onchangebuttonclicked(contain","onchangebuttonclicked(container:any):void","ondestroy","ondestroy():void","onedgetap","onedgetap(contain","onedgetap(container:any):void","oninit","oninit(contain","oninit,ondestroy","oninputfocu","onmessagelengthchang","onnodetap","onnodetap(contain","onnodetap(container:any):void","onremovechang","onremovechange(contain","onremovechange(container:any):void","onsaveuploadchang","onsaveuploadchange(contain","onsaveuploadchange(container:any):void","onscreentap","onscreentap(contain","onscreentap(container:any):void","onweightchang","onweightchange(newweight","onweightformchang","oper","operations.it","option","option(chnag","origin","otherwis","out","output","overview","packag","page","pair","param","paramet","parent","parseint(node.data.id","path","path[currentnod","path[v.id","pathnod","pathnodes.join","pathnodes.push(currentnod","pathnodes.push(rootnodeid","pathnodes.reverse().join","pathstr","pathtonodeb","pathtonodeb.nodes().map((nod","pathtotarget","pathtotarget.nodes().foreach((nod","pathtotarget.nodes().map((nod","pathtotarget.nodes().map((node:ani","perform","pfa","platform","png","pngpromis","pngpromise.then((blob","po","poid","posit","pour","previou","prim'","primeaniamant","primeaniamantion(contain","primeaniamantion(container:any):void","print","printbfspath","printbfspath(rootnodeid","printdfspath","printdfspath(rootnodeid","privat","project","promis","properti","protect","provid","providedin","public","px","qualiti","queue","queue.length","queue.push(neighbor","queue.shift","reader","reader.onload","reader.readastext(fil","readm","receiv","red","refer","reject","rejeteraddedgeweight","rejeteraddedgeweighted(contain","rejeteraddedgeweighted(container:any,container2:any):void","rejeteraddnod","rejeteraddnode(contain","rejeteraddnode(container:any,container2:any):void","rejeterchangecolor","rejeterchangecolor(contain","rejeterchangecolor(container:any):void","rejeterchangenodeid","rejeterchangenodeid(contain","rejeterchangenodeid(container:any,container2:any):void","rejeterchangesizescreen","rejeterchangesizescreen(contain","rejeterchangesizescreen(container:any,container2:any):void","relat","relev","reload","remov","remove:str","render","repres","represent","reset","resetcolor","respons","restor","restorearray","restorearray:array","restoregraph","restoregraphe(contain","restoregraphe(container:any):void","result","return","root","rootnodeid","rootnodeid,targetnodeid,pathstring,distancetotarget","rootnodeid=nodea.data(\"id","routing.modul","run","save","save/upload","savejpg","savejpg(contain","savejpg(container:any,fullgraphe:boolean=true):void","savejson","savejson(contain","savejson(container:ani","savepng","savepng(contain","savepng(container:any,fullgraph:boolean=true):void","saveupload","saveupload:str","saveuploads:saveuploadservice,protect","saveuploadservic","scaffold","scale","screen","screen.compon","screen.component.css","screen.component.html","screen.component.t","screen.style.backgroundcolor=container2.bgcolor","screen.style.height","screen/chang","screen=container.el.nativeelement.queryselector('.scr","screenbox","screenbox.component.css","screenbox.component.html","screenbox/screenbox.compon","screenboxcompon","screencompon","search","searcheedgechnagebc","searcheedgechnagebc(contain","searcheedgechnagebc(container:any,source:string,target:string,linecolor:string):void","second","select","select.component.css","select.component.html","selectcompon","selected:eventemitt","selectednew","selectednew:str","selectednod","selectednode:array","selector","selector('edg","selector('nod","serv","server","servic","set","settimeout","shape","shortest","simplechang","size","someth","sont","sourc","source:container.selectednode[0","sourceid:ani","space:str","span","specifi","src/app/about/about.component.t","src/app/allservice/algorithm.service.t","src/app/allservice/dark","src/app/allservice/graphe.servic","src/app/allservice/graphe.service.t","src/app/allservice/sav","src/app/app.component.t","src/app/app.module.t","src/app/components/add","src/app/components/chang","src/app/components/info/info.component.t","src/app/components/matrix/matrix.component.t","src/app/components/message/message.component.t","src/app/components/screen/screen.component.t","src/app/components/select/select.component.t","src/app/contact/contact.component.t","src/app/footer/footer.component.t","src/app/header/header.component.t","src/app/screenbox/screenbox.component.t","start","startnod","state","statement","stocker","storag","store","string","string,container:ani","string.fromcharcode(65","strongli","style","styleurl","support","svg","tap","target","target:container.selectednode[1","target_arrow_color","target_arrow_color_algo","targetarrowcolor","targetid:ani","targetnod","targetnodeid","targetnodeid=nodeb.data(\"id","tarjan","templateurl","temporari","test","text","this.alphabets.concat","this.alphabets.shift","this.alphabets0.concat","this.alphabets0.map(lett","this.alphabets=this.alphabets.concat(this.alphabets0.map(lett","this.background_color_nod","this.background_color_node=container2.bgcolor","this.background_color_node_algo,this.color_node_algo","this.background_color_node_algo=container2.bgcolor","this.bellmanfordanimation(rootnodeid,targetnodeid,contain","this.bfs(startnode,visitednod","this.buttonclick","this.changecoloredg","this.changecolornod","this.changecolornode(nod","this.ci","this.color_line_edg","this.color_line_edge=container2.bgcolor","this.color_line_edge_algo=container2.bgcolor","this.color_nod","this.color_node=container2.color","this.color_node_algo=container2.color","this.container.el.nativeelement.queryselector('#msgbox","this.container.el.nativeelement.queryselector('.msgboxc","this.count","this.counter=0","this.cy.add","this.cy.add(el","this.cy.destroy","this.cy.edges().foreach((edge:ani","this.cy.edges().style('color","this.cy.edges().style('lin","this.cy.edges().style('target","this.cy.elements('edg","this.cy.fit","this.cy.getelementbyid(container.selectednode[0","this.cy.nod","this.cy.nodes().foreach((node:ani","this.cy.nodes().length","this.cy.nodes().style('background","this.cy.nodes().style('color","this.cy.on('tap","this.cy.remove(edg","this.cy.remove(nod","this.cy.remove(this.cy.el","this.cy.styl","this.cy?.edges().foreach((edge:ani","this.cy?.nodes().foreach((node:ani","this.darkmodes.toggledarkmod","this.data_edge_color","this.data_edge_color=container2.color","this.data_edge_color_algo=container2.color","this.dijkstraanimation(rootnodeid,targetnodeid,contain","this.floydwarshallalgorithm(contain","this.graphes.onchangebuttonclicked(thi","this.graphes.ondestroy","this.graphes.onedgetap(thi","this.graphes.oninit(thi","this.graphes.onnodetap(thi","this.graphes.onscreentap(thi","this.graphes.resetcolor","this.inputtouched=tru","this.isalledgepositive(contain","this.isdarkmod","this.isdarkmode.tostr","this.isedgeremove(container.selectednode[0],container.selectednode[1],contain","this.kruskalanimation(contain","this.message.length","this.minimumspanningtreeedges(container).foreach((edge:ani","this.onmessagelengthchang","this.posit","this.position=po","this.primeaniamantion(contain","this.printbfspath(rootnodeid","this.printdfspath(rootnodeid","this.resetcolor","this.restoregraphe(contain","this.savejpg(contain","this.savejpg(container,fals","this.savejson(contain","this.savepng(contain","this.savepng(container,fals","this.selected.emit(this.selectednew","this.target_arrow_color","this.target_arrow_color=container2.fcolor","this.target_arrow_color_algo=container2.fcolor","this.translate.instant(\"algos.msg3\",{rootnodeid,targetnodeid,pathstring,distancetotarget","this.translate.instant(\"algos.msg5","this.translate.instant(\"algos.msg6\",{rootnodeid","this.translate.instant(\"graphes.msg20","this.translate.instant(\"graphes.msg21","this.translate.instant('algos.msg2","this.translate.instant('algos.msg4","this.translate.use(event.target.valu","this.typegraph","this.typegraphe=container.typegraph","this.typegraphe=data","this.uploadjson(contain","this.weight.emit(this.weightform","this.weight=newweight","time","titl","toggl","toggledarkmod","toggledarkmode():void","tou","touch","track","translat","translate.setdefaultlang(localstorage.getitem('languag","translate/cor","translate/http","translate:translateservic","translate:translateservice,protect","translatehttpload","translatehttploader(http","translateload","translatemodul","translatemodule.forroot","translateservic","translateservice,protect","tree","treeedg","treeedges.length","treeedges.push(edg","treenod","treenodes.add(sourceid","treenodes.add(targetid","treenodes.has(sourceid","treenodes.has(targetid","tri","triangl","trigger","true","two","type","typegraph","u","u.id","u.style('background","u.style('color","u:ani","undirect","unit","unweight","up","updat","upload","upload.servic","upload.service.t","uploadjson","uploadjson(contain","uploadjson(container:ani","url","url.createobjecturl(blob","url.revokeobjecturl(url","us","usefactori","user","v","v.id","v.id(),contain","v.style('background","v.style('color',container.graphes.color_node_algo","v:ani","valu","value(app","var","variabl","variou","versa","versa.upd","version","via","vice","view","viewport","visit","visited.add(v.id","visited.s","visitednod","visitednodes.add(neighbor.id","visitednodes.add(node.id","visitednodes.has(neighbor.id","visitednodes.s","visit√©","visual","void","warshal","weight","weight:container.weight","weight?:numb","weighta","weightb","weightform","whether","white","width","x","y","yellow","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nPfa\nThis project was generated with Angular CLI version 16.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    AppModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n  Modules\n  AppModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                ScreenboxComponent\n                            \n                            \n                                FooterComponent\n                            \n                            \n                                AboutComponent\n                            \n                            \n                                ContactComponent\n                            \n                            \n                                InfoComponent\n                            \n                            \n                                MessageComponent\n                            \n                            \n                                ScreenComponent\n                            \n                            \n                                AddWeightedEdgeComponent\n                            \n                            \n                                MatrixComponent\n                            \n                            \n                                SelectComponent\n                            \n                            \n                                ChangeIdNodeComponent\n                            \n                            \n                                ChangeColorComponent\n                            \n                            \n                                AddNodeComponent\n                            \n                            \n                                ChangeSizeScreenComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                GrapheService\n                            \n                            \n                                AlgorithmService\n                            \n                            \n                                SaveUploadService\n                            \n                            \n                                DarkModeService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ScreenboxComponent } from './screenbox/screenbox.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { GrapheService } from './AllService/graphe.service';\r\nimport { AlgorithmService } from './AllService/algorithm.service';\r\nimport { SaveUploadService } from './AllService/save-upload.service';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { InfoComponent } from './components/info/info.component';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MessageComponent } from './components/message/message.component';\r\nimport { ScreenComponent } from './components/screen/screen.component';\r\nimport { AddWeightedEdgeComponent } from './components/add-weighted-edge/add-weighted-edge.component';\r\nimport { MatrixComponent } from './components/matrix/matrix.component';\r\nimport { SelectComponent } from './components/select/select.component';\r\nimport { ChangeIdNodeComponent } from './components/change-id-node/change-id-node.component';\r\nimport { ChangeColorComponent } from './components/change-color/change-color.component';\r\nimport { AddNodeComponent } from './components/add-node/add-node.component';\r\nimport { ChangeSizeScreenComponent } from './components/change-size-screen/change-size-screen.component';\r\nimport { DarkModeService } from './AllService/dark-mode.service';\r\n\r\n\r\n// Function to load translations\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ScreenboxComponent,\r\n    FooterComponent,\r\n    AboutComponent,\r\n    ContactComponent,\r\n    InfoComponent,\r\n    MessageComponent,\r\n    ScreenComponent,\r\n    AddWeightedEdgeComponent,\r\n    MatrixComponent,\r\n    SelectComponent,\r\n    ChangeIdNodeComponent,\r\n    ChangeColorComponent,\r\n    AddNodeComponent,\r\n    ChangeSizeScreenComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    CommonModule\r\n    \r\n  ],\r\n  providers: [GrapheService,AlgorithmService,SaveUploadService,DarkModeService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n  Components\n  AboutComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.component.css\n            \n\n\n\n            \n                templateUrl\n                about.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(GraphService: GrapheService)\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component } from '@angular/core';\r\nimport { GrapheService } from '../AllService/graphe.service';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent {\r\n  constructor(private GraphService:GrapheService){\r\n    \r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddNodeComponent.html":{"url":"components/AddNodeComponent.html","title":"component - AddNodeComponent","body":"\n                   \n\n\n\n  Components\n  AddNodeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/add-node/add-node.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the add node form.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-node\n            \n\n            \n                styleUrls\n                add-node.component.css\n            \n\n\n\n            \n                templateUrl\n                add-node.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the AddNodeComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             onInputFocus\n                        \n                    \n    \n                    \n                        \n    onInputFocus()\n                        \n                    \n    \n                    \n                        \n                                Event handler for when the input field receives focus.Sets the inputTouched flag to true.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             inputTouched\n                        \n                    \n                    \n                        \n                            inputTouched:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                    \n                        \n                            Indicates whether the input field has been touched or focused.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nodeId\n                        \n                    \n                    \n                        \n                            nodeId:     any\n    \n                        \n                    \n                    \n                        \n                            The ID of the new node.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component,Input } from '@angular/core';\nimport { GrapheService } from 'src/app/AllService/graphe.service';\n\n/**\n * Angular component representing the add node form.\n */\n@Component({\n  selector: 'app-add-node',\n  templateUrl: './add-node.component.html',\n  styleUrls: ['./add-node.component.css']\n})\nexport class AddNodeComponent {\n  /**\n   * The ID of the new node.\n   */\n  nodeId:any;\n  /**\n   * Indicates whether the input field has been touched or focused.\n   */\n  inputTouched:boolean = false;\n  /**\n   * Input property to receive data from a parent component.\n   */\n  @Input() container:any;\n  /**\n   * Initializes a new instance of the AddNodeComponent class.\n   *\n   * @param {GrapheService} grapheS - The GrapheService instance.\n   */\n  constructor(protected grapheS:GrapheService){\n\n  }\n  /**\n   * Event handler for when the input field receives focus.\n   * Sets the `inputTouched` flag to true.\n   */\n  onInputFocus(){\n    this.inputTouched=true;\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddWeightedEdgeComponent.html":{"url":"components/AddWeightedEdgeComponent.html","title":"component - AddWeightedEdgeComponent","body":"\n                   \n\n\n\n  Components\n  AddWeightedEdgeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/add-weighted-edge/add-weighted-edge.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the form for adding a weighted edge.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-weighted-edge\n            \n\n            \n                styleUrls\n                add-weighted-edge.component.css\n            \n\n\n\n            \n                templateUrl\n                add-weighted-edge.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            nodeS\n                        \n                        \n                            Input property representing the source node for the edge.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            nodeT\n                        \n                        \n                            Input property representing the target node for the edge.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            weight\n                        \n                        \n                            Event emitter for emitting the weight of the edge to the parent component.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the AddWeightedEdgeComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             onWeightFormChange\n                        \n                    \n    \n                    \n                        \n    onWeightFormChange()\n                        \n                    \n    \n                    \n                        \n                                Event handler for when the weight form changes.Emits the weight value to the parent component using the weight EventEmitter.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             weightForm\n                        \n                    \n                    \n                        \n                            weightForm:     any\n    \n                        \n                    \n                    \n                        \n                            The form field for entering the edge weight.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { GrapheService } from 'src/app/AllService/graphe.service';\r\n\r\n/**\r\n * Angular component representing the form for adding a weighted edge.\r\n */\r\n@Component({\r\n  selector: 'app-add-weighted-edge',\r\n  templateUrl: './add-weighted-edge.component.html',\r\n  styleUrls: ['./add-weighted-edge.component.css']\r\n})\r\nexport class AddWeightedEdgeComponent {\r\n  /**\r\n   * Input property representing the source node for the edge.\r\n   */\r\n  @Input() nodeS: any;\r\n\r\n  /**\r\n   * Input property representing the target node for the edge.\r\n   */\r\n  @Input() nodeT: any;\r\n\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container: any;\r\n\r\n  /**\r\n   * Event emitter for emitting the weight of the edge to the parent component.\r\n   */\r\n  @Output() weight: EventEmitter = new EventEmitter();\r\n\r\n  /**\r\n   * The form field for entering the edge weight.\r\n   */\r\n  weightForm: any;\r\n\r\n  /**\r\n   * Initializes a new instance of the AddWeightedEdgeComponent class.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected grapheS: GrapheService) {}\r\n\r\n  /**\r\n   * Event handler for when the weight form changes.\r\n   * Emits the weight value to the parent component using the `weight` EventEmitter.\r\n   */\r\n  onWeightFormChange(): void {\r\n    this.weight.emit(this.weightForm);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(translate: TranslateService, darkModeS: DarkModeService)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: pfa\n                            \n                        \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DarkModeService } from './AllService/dark-mode.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'pfa';\r\n  constructor(private translate: TranslateService,protected darkModeS:DarkModeService) {\r\n      translate.setDefaultLang(localStorage.getItem('language') || \"en\");\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeColorComponent.html":{"url":"components/ChangeColorComponent.html","title":"component - ChangeColorComponent","body":"\n                   \n\n\n\n  Components\n  ChangeColorComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/change-color/change-color.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the color change form.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-color\n            \n\n            \n                styleUrls\n                change-color.component.css\n            \n\n\n\n            \n                templateUrl\n                change-color.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ChangeColorComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             bgColor\n                        \n                    \n                    \n                        \n                            bgColor:     any\n    \n                        \n                    \n                    \n                        \n                            The background color input field for changing node or edge background colors.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             color\n                        \n                    \n                    \n                        \n                            color:     any\n    \n                        \n                    \n                    \n                        \n                            The color input field for changing node or edge colors.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fColor\n                        \n                    \n                    \n                        \n                            fColor:     any\n    \n                        \n                    \n                    \n                        \n                            The flesh color input field for changing edge colors in case of a directed graph.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\nimport { GrapheService } from 'src/app/AllService/graphe.service';\n\n/**\n * Angular component representing the color change form.\n */\n@Component({\n  selector: 'app-change-color',\n  templateUrl: './change-color.component.html',\n  styleUrls: ['./change-color.component.css']\n})\nexport class ChangeColorComponent {\n  /**\n   * Input property to receive data from a parent component.\n   */\n  @Input() container: any;\n\n  /**\n   * The color input field for changing node or edge colors.\n   */\n  color: any;\n\n  /**\n   * The background color input field for changing node or edge background colors.\n   */\n  bgColor: any;\n\n  /**\n   * The flesh color input field for changing edge colors in case of a directed graph.\n   */\n  fColor: any;\n\n  /**\n   * Initializes a new instance of the ChangeColorComponent class.\n   *\n   * @param {GrapheService} grapheS - The GrapheService instance.\n   */\n  constructor(protected grapheS: GrapheService) {}\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeIdNodeComponent.html":{"url":"components/ChangeIdNodeComponent.html","title":"component - ChangeIdNodeComponent","body":"\n                   \n\n\n\n  Components\n  ChangeIdNodeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/change-id-node/change-id-node.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the form for changing the ID of a node.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-id-node\n            \n\n            \n                styleUrls\n                change-id-node.component.css\n            \n\n\n\n            \n                templateUrl\n                change-id-node.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            lastNodeId\n                        \n                        \n                            Input property representing the last used node ID.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ChangeIdNodeComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             newNodeId\n                        \n                    \n                    \n                        \n                            newNodeId:     string\n    \n                        \n                    \n                    \n                        \n                            The new node ID input field.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\r\nimport { GrapheService } from 'src/app/AllService/graphe.service';\r\n\r\n/**\r\n * Angular component representing the form for changing the ID of a node.\r\n */\r\n@Component({\r\n  selector: 'app-change-id-node',\r\n  templateUrl: './change-id-node.component.html',\r\n  styleUrls: ['./change-id-node.component.css']\r\n})\r\nexport class ChangeIdNodeComponent {\r\n  /**\r\n   * Input property representing the last used node ID.\r\n   */\r\n  @Input() lastNodeId: any;\r\n\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container: any;\r\n\r\n  /**\r\n   * The new node ID input field.\r\n   */\r\n  newNodeId: string = \"\";\r\n\r\n  /**\r\n   * Initializes a new instance of the ChangeIdNodeComponent class.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected grapheS: GrapheService) {}\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeSizeScreenComponent.html":{"url":"components/ChangeSizeScreenComponent.html","title":"component - ChangeSizeScreenComponent","body":"\n                   \n\n\n\n  Components\n  ChangeSizeScreenComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/change-size-screen/change-size-screen.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the form for changing the size of the screen.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-size-screen\n            \n\n            \n                styleUrls\n                change-size-screen.component.css\n            \n\n\n\n            \n                templateUrl\n                change-size-screen.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ChangeSizeScreenComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             height\n                        \n                    \n                    \n                        \n                            height:     any\n    \n                        \n                    \n                        \n                            \n                                Default value: 400\n                            \n                        \n                    \n                        \n                            The height input field for changing the screen height.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\nimport { GrapheService } from 'src/app/AllService/graphe.service';\n\n/**\n * Angular component representing the form for changing the size of the screen.\n */\n@Component({\n  selector: 'app-change-size-screen',\n  templateUrl: './change-size-screen.component.html',\n  styleUrls: ['./change-size-screen.component.css']\n})\nexport class ChangeSizeScreenComponent {\n  /**\n   * Input property to receive data from a parent component.\n   */\n  @Input() container: any;\n\n  /**\n   * The height input field for changing the screen height.\n   */\n  height: any = \"400\";\n\n  /**\n   * Initializes a new instance of the ChangeSizeScreenComponent class.\n   *\n   * @param {GrapheService} grapheS - The GrapheService instance.\n   */\n  constructor(protected grapheS: GrapheService) {}\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n  Components\n  ContactComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/contact/contact.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                contact.component.css\n            \n\n\n\n            \n                templateUrl\n                contact.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: GrapheService)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             contactVar\n                        \n                    \n                    \n                        \n                            contactVar:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\r\nimport { GrapheService } from '../AllService/graphe.service';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent {\r\n  contactVar:number=0;\r\n  constructor(protected grapheS:GrapheService){\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n  Components\n  FooterComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.css\n            \n\n\n\n            \n                templateUrl\n                footer.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(darkModeS: DarkModeService)\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component } from '@angular/core';\r\nimport { DarkModeService } from '../AllService/dark-mode.service';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n  constructor(protected darkModeS:DarkModeService){\r\n    \r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n  Components\n  HeaderComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                header.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(darkModeS: DarkModeService, translate: TranslateService)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             toggleDarkMode\n                        \n                    \n    \n                    \n                        \n    toggleDarkMode()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             changeLanguage\n                        \n                    \n    \n                    \n                        \n    changeLanguage(event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             lang\n                        \n                    \n                    \n                        \n                            lang:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             languages\n                        \n                    \n                    \n                        \n                            languages:     { code: string; name: string; }[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { DarkModeService } from '../AllService/dark-mode.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent{\r\n  lang:any=localStorage.getItem('language') || \"en\";\r\n  languages = [\r\n    { code: 'en', name: 'English' },\r\n    { code: 'fr', name: 'Fran√ßais' },\r\n    { code: 'ar', name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©' }\r\n  ];\r\n  constructor(protected darkModeS:DarkModeService,private translate:TranslateService){\r\n  }\r\n\r\n  toggleDarkMode():void{\r\n    this.darkModeS.toggleDarkMode();\r\n  }\r\n  changeLanguage(event: any) {\r\n    localStorage.setItem('language', event.target.value);\r\n    this.translate.use(event.target.value);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n  Components\n  InfoComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/info/info.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component for displaying information about the graph and algorithms.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info\n            \n\n            \n                styleUrls\n                info.component.css\n            \n\n\n\n            \n                templateUrl\n                info.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            algoS\n                        \n                        \n                            Input property to receive data from a parent component related to algorithms.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            grapheS\n                        \n                        \n                            Input property to receive data from a parent component related to the graph.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the InfoComponent class.\n    \n                        \n                    \n                \n            \n    \n\n\n\n        \n            import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * Angular component for displaying information about the graph and algorithms.\r\n */\r\n@Component({\r\n  selector: 'app-info',\r\n  templateUrl: './info.component.html',\r\n  styleUrls: ['./info.component.css']\r\n})\r\nexport class InfoComponent {\r\n  /**\r\n   * Input property to receive data from a parent component related to the graph.\r\n   */\r\n  @Input() grapheS: any;\r\n\r\n  /**\r\n   * Input property to receive data from a parent component related to algorithms.\r\n   */\r\n  @Input() algoS: any;\r\n\r\n  /**\r\n   * Initializes a new instance of the InfoComponent class.\r\n   */\r\n  constructor() {\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatrixComponent.html":{"url":"components/MatrixComponent.html","title":"component - MatrixComponent","body":"\n                   \n\n\n\n  Components\n  MatrixComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/matrix/matrix.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component for displaying a matrix.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matrix\n            \n\n            \n                styleUrls\n                matrix.component.css\n            \n\n\n\n            \n                templateUrl\n                matrix.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            adjacencyMatrixFormatted\n                        \n                        \n                            Input property representing the formatted adjacency matrix.\n\n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the MatrixComponent class.\n    \n                        \n                    \n                \n            \n    \n\n\n\n        \n            import { Component, Input, AfterViewChecked } from '@angular/core';\r\n\r\n/**\r\n * Angular component for displaying a matrix.\r\n */\r\n@Component({\r\n  selector: 'app-matrix',\r\n  templateUrl: './matrix.component.html',\r\n  styleUrls: ['./matrix.component.css']\r\n})\r\nexport class MatrixComponent implements AfterViewChecked {\r\n  /**\r\n   * Input property representing the formatted adjacency matrix.\r\n   */\r\n  @Input() adjacencyMatrixFormatted: string = \"\";\r\n\r\n  /**\r\n   * Initializes a new instance of the MatrixComponent class.\r\n   */\r\n  constructor() {}\r\n\r\n  /**\r\n   * Angular lifecycle hook called after the view has been checked.\r\n   * This hook is used for rendering MathJax content in the matrix.\r\n   */\r\n  ngAfterViewChecked(): void {\r\n    // Call MathJax rendering here if needed\r\n    // Example: MathJax.Hub.Queue([\"Typeset\", MathJax.Hub]);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageComponent.html":{"url":"components/MessageComponent.html","title":"component - MessageComponent","body":"\n                   \n\n\n\n  Components\n  MessageComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/message/message.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component for displaying messages.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message\n            \n\n            \n                styleUrls\n                message.component.css\n            \n\n\n\n            \n                templateUrl\n                message.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            message\n                        \n                        \n                            Input property representing the message to be displayed.\n\n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(darkModeS: any, grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the MessageComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        darkModeS\n                                                            :     DarkModeService\n    \n                                                    \n                                                    \n                                                        \n    The DarkModeService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             OnMessageLengthChange\n                        \n                    \n    \n                    \n                        \n    OnMessageLengthChange()\n                        \n                    \n    \n                    \n                        \n                                Adjusts the message box's height based on the length of the message.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DarkModeService } from 'src/app/AllService/dark-mode.service';\r\nimport { GrapheService } from 'src/app/AllService/graphe.service';\r\n\r\n/**\r\n * Angular component for displaying messages.\r\n */\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\nexport class MessageComponent implements OnChanges {\r\n  /**\r\n   * Input property representing the message to be displayed.\r\n   */\r\n  @Input() message: string = \"\";\r\n\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container: any;\r\n\r\n  /**\r\n   * Initializes a new instance of the MessageComponent class.\r\n   *\r\n   * @param {DarkModeService} darkModeS - The DarkModeService instance.\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected darkModeS: DarkModeService, protected grapheS: GrapheService) {}\r\n\r\n  /**\r\n   * Angular lifecycle hook called when input properties change.\r\n   *\r\n   * @param {SimpleChanges} changes - The changes in input properties.\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.OnMessageLengthChange();\r\n  }\r\n\r\n  /**\r\n   * Adjusts the message box's height based on the length of the message.\r\n   */\r\n  OnMessageLengthChange(): void {\r\n    const msgBox = this.container.el.nativeElement.querySelector('#msgBox');\r\n    const msgBoxC = this.container.el.nativeElement.querySelector('.msgBoxC');\r\n    const height = 50;\r\n\r\n    if (this.message.length > 103) {\r\n      msgBoxC.style.height = height * (this.message.length / 103 + 0.7) + 'px';\r\n      msgBox.style.height = msgBoxC.style.height;\r\n    } else {\r\n      msgBoxC.style.height = height + 20 + 'px';\r\n      msgBox.style.height = height + 'px';\r\n    }\r\n\r\n    if (this.message.length > 103 * 2) {\r\n      msgBoxC.style.height = height * (this.message.length / 103 - 1) + 'px';\r\n      msgBox.style.height = msgBoxC.style.height;\r\n    }\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenComponent.html":{"url":"components/ScreenComponent.html","title":"component - ScreenComponent","body":"\n                   \n\n\n\n  Components\n  ScreenComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/screen/screen.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component for displaying the main screen.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screen\n            \n\n            \n                styleUrls\n                screen.component.css\n            \n\n\n\n            \n                templateUrl\n                screen.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(darkModeS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ScreenComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        darkModeS\n                                                            :     DarkModeService\n    \n                                                    \n                                                    \n                                                        \n    The DarkModeService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n        \n            import { Component } from '@angular/core';\r\nimport { DarkModeService } from 'src/app/AllService/dark-mode.service';\r\n\r\n/**\r\n * Angular component for displaying the main screen.\r\n */\r\n@Component({\r\n  selector: 'app-screen',\r\n  templateUrl: './screen.component.html',\r\n  styleUrls: ['./screen.component.css']\r\n})\r\nexport class ScreenComponent {\r\n  /**\r\n   * Initializes a new instance of the ScreenComponent class.\r\n   *\r\n   * @param {DarkModeService} darkModeS - The DarkModeService instance.\r\n   */\r\n  constructor(protected darkModeS: DarkModeService) {\r\n    \r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenboxComponent.html":{"url":"components/ScreenboxComponent.html","title":"component - ScreenboxComponent","body":"\n                   \n\n\n\n  Components\n  ScreenboxComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/screenbox/screenbox.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the screen box.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screenbox\n            \n\n            \n                styleUrls\n                screenbox.component.css\n            \n\n\n\n            \n                templateUrl\n                screenbox.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(el: any, grapheS: GrapheService, algoS: AlgorithmService, saveUploadS: SaveUploadService, translate: TranslateService, darkModeS: DarkModeService)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ScreenboxComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        el\n                                                            :     ElementRef\n    \n                                                    \n                                                    \n                                                        \n    The ElementRef for this component.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        algoS\n                                                            :     AlgorithmService\n    \n                                                    \n                                                    \n                                                        \n    The AlgorithmService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        saveUploadS\n                                                            :     SaveUploadService\n    \n                                                    \n                                                    \n                                                        \n    The SaveUploadService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        translate\n                                                            :     TranslateService\n    \n                                                    \n                                                    \n                                                        \n    The TranslateService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        darkModeS\n                                                            :     DarkModeService\n    \n                                                    \n                                                    \n                                                        \n    The DarkModeService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             getButtonClickedId\n                        \n                    \n    \n                    \n                        \n    getButtonClickedId(event: any)\n                        \n                    \n    \n                    \n                        \n                                Gets the ID of the button that was clicked and triggers relevant actions.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    The event containing the click target.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onWeightChange\n                        \n                    \n    \n                    \n                        \n    onWeightChange(newWeight: number)\n                        \n                    \n    \n                    \n                        \n                                Handles the change in weight.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        newWeight\n                                                    \n                                                    \n                                                        \n    The new weight value(app-add-weighted-edge Output).\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             chngeTypeGraphe\n                        \n                    \n    \n                    \n                        \n    chngeTypeGraphe(data: string)\n                        \n                    \n    \n                    \n                        \n                                Changes the type of the graph.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        data\n                                                    \n                                                    \n                                                        \n    The new graph type data.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             algorithm\n                        \n                    \n                    \n                        \n                            algorithm:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private buttonClicked\n                        \n                    \n                    \n                        \n                            buttonClicked:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             changeSelect\n                        \n                    \n                    \n                        \n                            changeSelect:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             containerHeight\n                        \n                    \n                    \n                        \n                            containerHeight:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 70\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             message\n                        \n                    \n                    \n                        \n                            message:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private nodeId\n                        \n                    \n                    \n                        \n                            nodeId:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Private nodeIdChanged\n                        \n                    \n                    \n                        \n                            nodeIdChanged:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nodeName\n                        \n                    \n                    \n                        \n                            nodeName:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: numerique\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             nodeNamingMethode\n                        \n                    \n                    \n                        \n                            nodeNamingMethode:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             remove\n                        \n                    \n                    \n                        \n                            remove:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private restoreArray\n                        \n                    \n                    \n                        \n                            restoreArray:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             saveUpload\n                        \n                    \n                    \n                        \n                            saveUpload:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectedNode\n                        \n                    \n                    \n                        \n                            selectedNode:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             typeGraphe\n                        \n                    \n                    \n                        \n                            typeGraphe:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             weight\n                        \n                    \n                    \n                        \n                            weight:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { GrapheService } from '../AllService/graphe.service';\r\nimport { SaveUploadService } from '../AllService/save-upload.service';\r\nimport { AlgorithmService } from '../AllService/algorithm.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DarkModeService } from '../AllService/dark-mode.service';\r\n\r\n/**\r\n * Angular component representing the screen box.\r\n */\r\n@Component({\r\n  selector: 'app-screenbox',\r\n  templateUrl: './screenbox.component.html',\r\n  styleUrls: ['./screenbox.component.css'],\r\n})\r\nexport class ScreenboxComponent implements OnInit,OnDestroy {\r\n  private buttonClicked:string=\"\";\r\n  private restoreArray:Array =[] ;\r\n  typeGraphe: string = \"\";\r\n  weight?:number;\r\n  containerHeight:number=70;//Height of msg box\r\n  selectedNode:Array=[];\r\n  message:string=\"\";\r\n  algorithm:string=\"\";\r\n  nodeNamingMethode:string=\"\";\r\n  remove:string=\"\";\r\n  saveUpload:string=\"\";\r\n  changeSelect:string=\"\";\r\n  nodeName:string=\"numerique\";\r\n  private nodeId:number=0;//Increment and assign a new node\r\n  private nodeIdChanged:any;\r\n  /**\r\n   * Initializes a new instance of the ScreenboxComponent class.\r\n   *\r\n   * @param {ElementRef} el - The ElementRef for this component.\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   * @param {AlgorithmService} algoS - The AlgorithmService instance.\r\n   * @param {SaveUploadService} saveUploadS - The SaveUploadService instance.\r\n   * @param {TranslateService} translate - The TranslateService instance.\r\n   * @param {DarkModeService} darkModeS - The DarkModeService instance.\r\n   */\r\n  constructor(private el: ElementRef,protected grapheS:GrapheService,protected algoS:AlgorithmService,protected saveUploadS:SaveUploadService,protected translate:TranslateService,protected darkModeS:DarkModeService) {\r\n  }\r\n  /**\r\n   * Angular lifecycle hook called when the component is initialized.\r\n   */\r\n  ngOnInit(): void {\r\n    this.grapheS.OnInit(this);\r\n    this.grapheS.OnScreenTap(this);\r\n    this.grapheS.OnEdgeTap(this);\r\n    this.grapheS.OnNodeTap(this);\r\n  }\r\n  /**\r\n   * Angular lifecycle hook called when the component is destroyed.\r\n   */\r\n  ngOnDestroy(): void {\r\n    this.grapheS.OnDestroy();\r\n  }\r\n  /**\r\n   * Gets the ID of the button that was clicked and triggers relevant actions.\r\n   *\r\n   * @param {any} event - The event containing the click target.\r\n   */\r\n  getButtonClickedId(event: any): void {\r\n    this.buttonClicked= event.target.id;\r\n    this.grapheS.resetColors();\r\n    this.grapheS.onChangeButtonClicked(this);\r\n  }\r\n  /**\r\n   * Handles the change in weight.\r\n   *\r\n   * @param {number} newWeight - The new weight value(app-add-weighted-edge Output).\r\n   */\r\n  onWeightChange(newWeight: number): void {\r\n    this.weight=newWeight;\r\n  }\r\n  /**\r\n   * Changes the type of the graph.\r\n   *\r\n   * @param {string} data - The new graph type data.\r\n   */\r\n  chngeTypeGraphe(data:string): void {\r\n    this.typeGraphe=data;\r\n  }\r\n}\r\n\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n  Components\n  SelectComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/select/select.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                select.component.css\n            \n\n\n\n            \n                templateUrl\n                select.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            Class\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            container\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            disableLabell\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            functionHandler\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            items\n                        \n                        \n                              \n                                Type:    any[]\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            selected\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n\n    \n        Methods\n            \n                \n                    \n                        \n                             onChange\n                        \n                    \n    \n                    \n                        \n    onChange()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             selectedNew\n                        \n                    \n                    \n                        \n                            selectedNew:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component,EventEmitter,Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.css']\r\n})\r\nexport class SelectComponent {\r\n  @Input() disableLabell:string=\"\";\r\n  @Input() container:any;\r\n  @Input() functionHandler:any;\r\n  @Input() Class:string=\"\";\r\n  @Input() items:Array=[];\r\n  @Output() selected:EventEmitter= new EventEmitter();\r\n  selectedNew:string=\"\";\r\n  onChange():void{\r\n    this.selected.emit(this.selectedNew);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlgorithmService.html":{"url":"injectables/AlgorithmService.html","title":"injectable - AlgorithmService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AlgorithmService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/AllService/algorithm.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for performing algorithms.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(translate: TranslateService)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of AlgorithmService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                translate\n                                                                    :     TranslateService\n            \n                                                            \n                                                            \n                                                                \n            The translation service.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     bfsAnimation\n                                \n                            \n            \n                            \n                                \n            bfsAnimation(rootNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform a breadth-first search (BFS) animation.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for BFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     printBFSPath\n                                \n                            \n            \n                            \n                                \n            printBFSPath(rootNodeId: string, path: { [nodeId: string]: string; }, targetNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Print the BFS path in the container message.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for BFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                path\n                                                                    :     Object\n            \n                                                            \n                                                            \n                                                                \n            The BFS path object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the target node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     dfsAnimation\n                                \n                            \n            \n                            \n                                \n            dfsAnimation(rootNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform a depth-first search (DFS) animation and update node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for DFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     printDFSPath\n                                \n                            \n            \n                            \n                                \n            printDFSPath(rootNodeId: string, path: { [nodeId: string]: string; }, targetNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Print the DFS path and update the container's message.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for DFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                path\n                                                                    :     Object\n            \n                                                            \n                                                            \n                                                                \n            The DFS path object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the target node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     dijkstraAlgorithm\n                                \n                            \n            \n                            \n                                \n            dijkstraAlgorithm(rootNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform Dijkstra's algorithm to find the shortest path and update node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for Dijkstra's algorithm.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     dijkstraAnimation\n                                \n                            \n            \n                            \n                                \n            dijkstraAnimation(rootNodeId: string, targetNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Dijkstra's algorithm by updating node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for Dijkstra's algorithm.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the target node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     bellmanFordAnimation\n                                \n                            \n            \n                            \n                                \n            bellmanFordAnimation(rootNodeId: string, targetNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform Bellman-Ford algorithm to find the shortest path and update node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for Bellman-Ford algorithm.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     bellmanFordAlgorithm\n                                \n                            \n            \n                            \n                                \n            bellmanFordAlgorithm(rootNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Bellman-Ford algorithm by updating node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for Bellman-Ford algorithm.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the target node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     floydWarshallAlgorithm\n                                \n                            \n            \n                            \n                                \n            floydWarshallAlgorithm(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform Floyd-Warshall algorithm to find all-pairs shortest paths and update messages.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeAlgorithm\n                                \n                            \n            \n                            \n                                \n            changeAlgorithm(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Change the selected algorithm and update the container's message.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     bfs\n                                \n                            \n            \n                            \n                                \n            bfs(node: any, visitedNodes: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform breadth-first search (BFS) starting from a given node and mark visited nodes.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                node\n                                                            \n                                                            \n                                                                \n            The starting node for BFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                visitedNodes\n                                                                    :     Set\n            \n                                                            \n                                                            \n                                                                \n            A set to track visited node IDs.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isGraphConnected\n                                \n                            \n            \n                            \n                                \n            isGraphConnected(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Check if the graph is connected by performing a breadth-first search (BFS) from a starting node.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                True if the graph is connected; otherwise, false.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isAllEdgePositive\n                                \n                            \n            \n                            \n                                \n            isAllEdgePositive(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Check if all edges in the graph are positive (weight > 0).\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                True if all edges have positive weights; otherwise, false.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     MinimumSpanningTreeEdges\n                                \n                            \n            \n                            \n                                \n            MinimumSpanningTreeEdges(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Find the minimum spanning tree edges using Kruskal's algorithm and return them as an array.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                An array of minimum spanning tree edges.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     kruskalAnimation\n                                \n                            \n            \n                            \n                                \n            kruskalAnimation(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Kruskal's algorithm by changing edge and node colors to visualize the minimum spanning tree.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     primeAniamantion\n                                \n                            \n            \n                            \n                                \n            primeAniamantion(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Prim's algorithm by changing edge and node colors to visualize the minimum spanning tree.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n/**\r\n * Service for performing algorithms.\r\n *\r\n * @description This service provides functionality for algorithm animations.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlgorithmService {\r\n  /**\r\n   * Creates an instance of AlgorithmService.\r\n   *\r\n   * @param {TranslateService} translate - The translation service.\r\n   */\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  /**\r\n   * Perform a breadth-first search (BFS) animation.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for BFS.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  bfsAnimation(rootNodeId: string,container:any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    const visited = new Set();\r\n    const path: { [nodeId: string]: string } = {}; // To store the BFS path\r\n    \r\n    container.grapheS.cy.elements().bfs({\r\n      roots: root,\r\n      visit: (v:any, e:any, u:any, i:any, depth:any) => {\r\n        setTimeout(() => {\r\n          visited.add(v.id());\r\n          v.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE_ALGO); // Update node color\r\n          v.style('color',container.grapheS.COLOR_NODE_ALGO);\r\n          if (u && e) {\r\n            u.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE);\r\n            u.style('color', container.grapheS.COLOR_NODE);\r\n            e.style('line-color', container.grapheS.COLOR_LINE_EDGE_ALGO); // Update edge color\r\n            e.style('target-arrow-color', container.grapheS.TARGET_ARROW_COLOR_ALGO);\r\n            e.style('color', container.grapheS.DATA_EDGE_COLOR_ALGO)\r\n            path[v.id()] = u.id();\r\n          }\r\n          if (i === visited.size - 1) {\r\n            this.printBFSPath(rootNodeId, path, v.id(),container); // Print path when all nodes are visited\r\n          }\r\n        }, i * 2000); // Animation delay\r\n      },\r\n      directed: (container.grapheS.typeGraphe.split(\" \")[0]==\"Directed\")\r\n    });\r\n  }\r\n  /**\r\n   * Print the BFS path in the container message.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for BFS.\r\n   * @param {Object} path - The BFS path object.\r\n   * @param {string} targetNodeId - The ID of the target node.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  printBFSPath(rootNodeId: string, path: { [nodeId: string]: string }, targetNodeId: string,container:any): void {\r\n    const pathNodes = [];\r\n    let currentNode = targetNodeId;\r\n  \r\n    while (currentNode !== rootNodeId) {\r\n      pathNodes.push(currentNode);\r\n      currentNode = path[currentNode];\r\n    }\r\n    pathNodes.push(rootNodeId);\r\n  \r\n    const bfsPathString = pathNodes.reverse().join(' -> ');\r\n    container.message=this.translate.instant('algoS.msg1')+ bfsPathString;\r\n  }\r\n  /**\r\n * Perform a depth-first search (DFS) animation and update node and edge styles.\r\n *\r\n * @param {string} rootNodeId - The ID of the root node for DFS.\r\n * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n */\r\n  dfsAnimation(rootNodeId: string, container: any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    const visited = new Set();\r\n    const path: { [nodeId: string]: string } = {}; // Pour stocker le chemin DFS\r\n    \r\n    container.grapheS.cy.elements().dfs({\r\n        roots: root,\r\n        visit: (v: any, e: any, u: any, i: any, depth: any) => {\r\n            setTimeout(() => {\r\n                visited.add(v.id());\r\n                v.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE_ALGO); // Update node color\r\n                v.style('color',container.grapheS.COLOR_NODE_ALGO);\r\n\r\n                if (u && e) {\r\n                  u.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE);\r\n                  u.style('color', container.grapheS.COLOR_NODE);\r\n                  e.style('line-color', container.grapheS.COLOR_LINE_EDGE_ALGO); // Update edge color\r\n                  e.style('target-arrow-color', container.grapheS.TARGET_ARROW_COLOR_ALGO);\r\n                  e.style('color', container.grapheS.DATA_EDGE_COLOR_ALGO)\r\n                    path[v.id()] = u.id();\r\n                }\r\n                if (i === visited.size - 1) {\r\n                    this.printDFSPath(rootNodeId, path, v.id(), container); // Afficher le chemin lorsque tous les n≈ìuds sont visit√©s\r\n                }\r\n            }, i * 2000); // D√©lai d'animation\r\n        },\r\n        directed: (container.grapheS.typeGraphe.split(\" \")[0]==\"Directed\")\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Print the DFS path and update the container's message.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for DFS.\r\n   * @param {Object} path - The DFS path object.\r\n   * @param {string} targetNodeId - The ID of the target node.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  printDFSPath(rootNodeId: string, path: { [nodeId: string]: string }, targetNodeId: string, container: any): void {\r\n      const pathNodes = [];\r\n      let currentNode = targetNodeId;\r\n\r\n      while (currentNode !== rootNodeId) {\r\n          pathNodes.push(currentNode);\r\n          currentNode = path[currentNode];\r\n      }\r\n      pathNodes.push(rootNodeId);\r\n\r\n      const dfsPathString = pathNodes.reverse().join(' -> ');\r\n      container.message = this.translate.instant('algoS.msg2') + dfsPathString;\r\n  }\r\n\r\n  /**\r\n   * Perform Dijkstra's algorithm to find the shortest path and update node and edge styles.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for Dijkstra's algorithm.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  dijkstraAlgorithm(rootNodeId: string, container: any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    let directed=false;\r\n    if(container.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n      directed=true;\r\n    }\r\n    const dijkstra = container.grapheS.cy.elements().dijkstra({\r\n        root: root,\r\n        weight: (edge:any) => edge.data('weight')||1,\r\n        directed:directed\r\n    });\r\n    let lastMessage:string=\"||\";\r\n    let i:number=0;\r\n    container.grapheS.cy.nodes().forEach((node:any) => {\r\n        if (node.id() !== rootNodeId) {\r\n            const targetNodeId = node.data('id');\r\n            const pathToTarget = dijkstra.pathTo(container.grapheS.cy.$(`#${targetNodeId}`));\r\n            const distanceToTarget = dijkstra.distanceTo(container.grapheS.cy.$(`#${targetNodeId}`));\r\n            const pathNodes = pathToTarget.nodes().map((node:any) => node.data('id'));\r\n            const pathString = pathNodes.join(' -> ');\r\n            setTimeout(()=>{\r\n              container.grapheS.resetColors();\r\n              this.dijkstraAnimation(rootNodeId,targetNodeId,container);\r\n              lastMessage += this.translate.instant('algoS.msg4', { rootNodeId,targetNodeId,pathString,distanceToTarget });\r\n            },i++*10000);\r\n          }\r\n    });\r\n    setTimeout(()=>{\r\n      container.grapheS.resetColors();\r\n      container.message=lastMessage;\r\n    },i*10000)\r\n    \r\n  }\r\n  /**\r\n   * Animate Dijkstra's algorithm by updating node and edge styles.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for Dijkstra's algorithm.\r\n   * @param {string} targetNodeId - The ID of the target node.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  dijkstraAnimation(rootNodeId: string, targetNodeId: string, container: any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    let directed = false;\r\n    if (container.typeGraphe.split(\" \")[0] === \"Directed\") {\r\n      directed = true;\r\n    }\r\n    const dijkstra = container.grapheS.cy.elements().dijkstra({\r\n      root: root,\r\n      weight: (edge: any) => edge.data('weight') || 1,\r\n      directed: directed\r\n    });\r\n    let i=1;\r\n    const targetNode = container.grapheS.cy.$(`#${targetNodeId}`);\r\n    const pathToTarget = dijkstra.pathTo(targetNode);\r\n    const distanceToTarget = dijkstra.distanceTo(targetNode);\r\n    const pathNodes = pathToTarget.nodes().map((node: any) => node.data('id'));\r\n    let lastNode:any=pathToTarget.nodes().first();\r\n    container.grapheS.changeColorNode(targetNode, container.grapheS.BACKGROUND_COLOR_NODE,container.grapheS.COLOR_NODE);\r\n    pathToTarget.nodes().forEach((node: any) =>{\r\n      setTimeout(() =>{\r\n        node.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE_ALGO);\r\n        node.style('color',container.grapheS.COLOR_NODE_ALGO);\r\n        console.log(i);\r\n        if(i!=1){\r\n          container.grapheS.searcheEdgeChnageBC(container,lastNode.data('id'),node.data('id'),container.grapheS.COLOR_LINE_EDGE_ALGO);\r\n        }\r\n        lastNode=node;\r\n      },i*2000);\r\n      i++;\r\n    });\r\n    const pathString = pathNodes.join(' -> ');\r\n    container.message = this.translate.instant(\"algoS.msg3\",{rootNodeId,targetNodeId,pathString,distanceToTarget});\r\n  }\r\n\r\n  /**\r\n   * Perform Bellman-Ford algorithm to find the shortest path and update node and edge styles.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for Bellman-Ford algorithm.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  bellmanFordAnimation(rootNodeId: string, targetNodeId: string, container: any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    let directed = false;\r\n    if (container.typeGraphe.split(\" \")[0] === \"Directed\") {\r\n      directed = true;\r\n    }\r\n    const bellmanFord = container.grapheS.cy.elements().bellmanFord({\r\n      root: root,\r\n      weight: (edge: any) => edge.data('weight') || 1,\r\n      directed: directed\r\n    });\r\n    let i=1;\r\n    const targetNode = container.grapheS.cy.$(`#${targetNodeId}`);\r\n    const pathToTarget = bellmanFord.pathTo(targetNode);\r\n    const distanceToTarget = bellmanFord.distanceTo(targetNode);\r\n    const pathNodes = pathToTarget.nodes().map((node: any) => node.data('id'));\r\n    let lastNode:any=pathToTarget.nodes().first();\r\n    container.grapheS.changeColorNode(targetNode, container.grapheS.BACKGROUND_COLOR_NODE,container.grapheS.COLOR_NODE);\r\n    pathToTarget.nodes().forEach((node: any) =>{\r\n      setTimeout(() =>{\r\n        node.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE_ALGO);\r\n        node.style('color',container.grapheS.COLOR_NODE_ALGO);\r\n        console.log(i);\r\n        if(i!=1){\r\n          container.grapheS.searcheEdgeChnageBC(container,lastNode.data('id'),node.data('id'),container.grapheS.COLOR_LINE_EDGE_ALGO);\r\n        }\r\n        lastNode=node;\r\n      },i*2000);\r\n      i++;\r\n    });\r\n    const pathString = pathNodes.join(' -> ');\r\n    container.message = this.translate.instant(\"algoS.msg3\",{rootNodeId,targetNodeId,pathString,distanceToTarget});\r\n  }\r\n\r\n  /**\r\n   * Animate Bellman-Ford algorithm by updating node and edge styles.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for Bellman-Ford algorithm.\r\n   * @param {string} targetNodeId - The ID of the target node.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  bellmanFordAlgorithm(rootNodeId: string, container: any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    let directed=false;\r\n    if(container.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n      directed=true;\r\n    }\r\n    const bellmanFord = container.grapheS.cy.elements().bellmanFord({\r\n        root: root,\r\n        weight: (edge:any) => edge.data('weight')||1,\r\n        directed:directed\r\n    });\r\n    let lastMessage:string=\"||\";\r\n    let i:number=0;\r\n    container.grapheS.cy.nodes().forEach((node:any) => {\r\n        if (node.id() !== rootNodeId) {\r\n            const targetNodeId = node.data('id');\r\n            const pathToTarget = bellmanFord.pathTo(container.grapheS.cy.$(`#${targetNodeId}`));\r\n            const distanceToTarget = bellmanFord.distanceTo(container.grapheS.cy.$(`#${targetNodeId}`));\r\n            const pathNodes = pathToTarget.nodes().map((node:any) => node.data('id'));\r\n            const pathString = pathNodes.join(' -> ');\r\n            setTimeout(()=>{\r\n              container.grapheS.resetColors();\r\n              this.bellmanFordAnimation(rootNodeId,targetNodeId,container);\r\n              lastMessage += this.translate.instant('algoS.msg4', { rootNodeId,targetNodeId,pathString,distanceToTarget });\r\n            },i++*10000);\r\n          }\r\n    });\r\n    setTimeout(()=>{\r\n      container.grapheS.resetColors();\r\n      container.message=lastMessage;\r\n    },i*10000)\r\n    \r\n  }\r\n\r\n  /**\r\n   * Perform Floyd-Warshall algorithm to find all-pairs shortest paths and update messages.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  floydWarshallAlgorithm(container: any): void {\r\n    let directed = false;\r\n    if (container.typeGraphe.split(\" \")[0] === \"Directed\") {\r\n      directed = true;\r\n    }\r\n    \r\n    const cy = container.grapheS.cy;\r\n    const floydWarshall = cy.elements().floydWarshall({\r\n      weight: (edge: any) => edge.data('weight') || 1,\r\n      directed: directed\r\n    });\r\n\r\n    container.message = \"||\";\r\n    let space:string=\"     \";\r\n    cy.nodes().forEach((nodeA: any) => {\r\n      cy.nodes().forEach((nodeB: any) => {\r\n        if (nodeA.id() !== nodeB.id()) {\r\n          const distance = floydWarshall.distance(nodeA, nodeB);\r\n          const pathToNodeB = floydWarshall.path(nodeA, nodeB);\r\n          let rootNodeId=nodeA.data(\"id\");\r\n          let targetNodeId=nodeB.data(\"id\");\r\n          if (distance !== Infinity) {\r\n            const pathNodes = pathToNodeB.nodes().map((node: any) => node.data('id'));\r\n            const pathString = pathNodes.join(' -> ');\r\n            container.message += this.translate.instant(\"algoS.msg5\", { rootNodeId, targetNodeId, distance, pathString });\r\n          } else {\r\n            container.message += this.translate.instant(\"algoS.msg6\",{rootNodeId, targetNodeId});\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the selected algorithm and update the container's message.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  changeAlgorithm(container:any):void{\r\n    if(container.typeGraphe!=\"\" && container.grapheS.cy.nodes().length){\r\n      //DRY\r\n      container.changeSelect=\"\";\r\n      container.remove=\"\";\r\n      container.buttonClicked=\"\";\r\n      container.saveUpload = \"\";\r\n      container.containerHeight=50;\r\n      container.selectedNode=[];\r\n      //\r\n      container.grapheS.resetColors();\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      container.grapheS.position=\"\";\r\n      container.message=this.translate.instant(\"algoS.msg7\",{algorithm:container.algorithm});\r\n      if(container.algorithm==\"floydWarshall\"){\r\n        this.floydWarshallAlgorithm(container);\r\n      }else if((container.algorithm==\"dijkstra\" || container.algorithm==\"dijkstraAB\")&& !this.isAllEdgePositive(container)){\r\n        container.message=container.translate.instant(\"algoS.msg10\");\r\n        container.algorithm=\"\";\r\n      }else if(container.algorithm==\"kruskal\" || container.algorithm==\"prime\"){\r\n        if(this.isGraphConnected(container)==true && container.typeGraphe.split(\" \")[0]==\"Undirected\" /*&& container.typeGraphe.split(\" \")[1]==\"Weighted\"*/){\r\n          container.grapheS.resetColors();\r\n          if(container.algorithm==\"kruskal\"){\r\n            this.kruskalAnimation(container);\r\n            container.message=\"Kruskal(MST): \";\r\n          }else{\r\n            this.primeAniamantion(container);\r\n            container.message=\"Prime(MST): \";\r\n          }\r\n        }else{\r\n          if(container.algorithm==\"kruskal\"){\r\n            container.message=container.translate.instant(\"algoS.msg8\");\r\n          }else{\r\n            container.message=container.translate.instant(\"algoS.msg12\");\r\n          }\r\n        }\r\n      }\r\n    }else{\r\n      if(!container.grapheS.cy.nodes().length){\r\n        container.message=container.translate.instant(\"algoS.msg11\");\r\n      }\r\n      container.algorithm=\"\";\r\n    }\r\n  }\r\n  /**\r\n   * Perform breadth-first search (BFS) starting from a given node and mark visited nodes.\r\n   *\r\n   * @param {any} node - The starting node for BFS.\r\n   * @param {Set} visitedNodes - A set to track visited node IDs.\r\n   */\r\n  bfs(node:any,visitedNodes:any):void {\r\n    var queue = [node];\r\n    visitedNodes.add(node.id());\r\n\r\n    while (queue.length > 0) {\r\n      var currentNode = queue.shift();\r\n      var neighbors = currentNode.neighborhood().nodes();\r\n\r\n      neighbors.forEach((neighbor:any) =>{\r\n        if (!visitedNodes.has(neighbor.id())) {\r\n          visitedNodes.add(neighbor.id());\r\n          queue.push(neighbor);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the graph is connected by performing a breadth-first search (BFS) from a starting node.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   * @returns {boolean} True if the graph is connected; otherwise, false.\r\n   */\r\n  isGraphConnected(container:any):boolean{\r\n    var startNode = container.grapheS.cy.nodes().first(); \r\n    var visitedNodes = new Set();\r\n    this.bfs(startNode,visitedNodes);\r\n    return visitedNodes.size === container.grapheS.cy.nodes().size();\r\n  }\r\n\r\n  /**\r\n   * Check if all edges in the graph are positive (weight > 0).\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   * @returns {boolean} True if all edges have positive weights; otherwise, false.\r\n   */\r\n  isAllEdgePositive(container:any):boolean{\r\n    let allPositive:boolean=true;\r\n    if(container.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n      container.grapheS.cy.edges().forEach((edge:any)=>{\r\n        if(edge.data('weight')} An array of minimum spanning tree edges.\r\n   */\r\n  MinimumSpanningTreeEdges(container:any): Array {\r\n    const edges = container.grapheS.cy.edges().toArray();\r\n    edges.sort((a:any, b:any) => {\r\n      const weightA = a.data('weight') || 1;\r\n      const weightB = b.data('weight') || 1;\r\n      return weightA - weightB;\r\n    });\r\n    const treeEdges: Array = [];\r\n    const treeNodes = new Set();\r\n    for (const edge of edges) {\r\n      const sourceId:any = edge.source().id();\r\n      const targetId:any = edge.target().id();\r\n      if (!treeNodes.has(sourceId) || !treeNodes.has(targetId)) {\r\n        treeEdges.push(edge);\r\n        treeNodes.add(sourceId);\r\n        treeNodes.add(targetId);\r\n      }\r\n      if (treeEdges.length === container.grapheS.cy.nodes().length - 1) {\r\n        break; // L'arbre de poids minimal est complet\r\n      }\r\n    }\r\n    return treeEdges;\r\n  }\r\n\r\n  /**\r\n   * Animate Kruskal's algorithm by changing edge and node colors to visualize the minimum spanning tree.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  kruskalAnimation(container:any):void{\r\n    let i:number=0;\r\n    let j:number=0;\r\n    this.MinimumSpanningTreeEdges(container).forEach((edge:any)=>{\r\n      container.grapheS.changeColorEdge(edge,container.grapheS.DATA_EDGE_COLOR_ALGO,container.grapheS.COLOR_LINE_EDGE_ALGO,container.grapheS.TARGET_ARROW_COLOR_ALGO,j=++i*2000);\r\n      if(i!=container.grapheS.cy.nodes().length - 1){\r\n        setTimeout(()=>{\r\n          container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1})  ||`;\r\n        },j)\r\n      }else{\r\n        setTimeout(()=>{\r\n          container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1})`;\r\n        },j)\r\n      }\r\n    })\r\n    container.grapheS.cy.nodes().forEach((node:any)=>{\r\n      container.grapheS.changeColorNode(node, container.grapheS.BACKGROUND_COLOR_NODE_ALGO,container.grapheS.COLOR_NODE_ALGO,++i*2000);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Animate Prim's algorithm by changing edge and node colors to visualize the minimum spanning tree.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  primeAniamantion(container:any):void{\r\n    let i:number=0;\r\n    let j:number=0;\r\n    this.MinimumSpanningTreeEdges(container).forEach((edge:any)=>{\r\n      container.grapheS.changeColorNode(edge.source(), container.grapheS.BACKGROUND_COLOR_NODE_ALGO,container.grapheS.COLOR_NODE_ALGO,++i*2000);\r\n      container.grapheS.changeColorEdge(edge,container.grapheS.DATA_EDGE_COLOR_ALGO,container.grapheS.COLOR_LINE_EDGE_ALGO,container.grapheS.TARGET_ARROW_COLOR_ALGO,j=++i*2000);\r\n      if(i/2!=container.grapheS.cy.nodes().length - 1){\r\n        setTimeout(()=>{\r\n          container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1})  ||`;\r\n        },j)\r\n      }else{\r\n        container.grapheS.changeColorNode(edge.target(), container.grapheS.BACKGROUND_COLOR_NODE_ALGO,container.grapheS.COLOR_NODE_ALGO,j);\r\n        setTimeout(()=>{\r\n          container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1})`;\r\n        },j)\r\n      }\r\n    })\r\n  }\r\n  //Tarjan Strongly Component \r\n\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DarkModeService.html":{"url":"injectables/DarkModeService.html","title":"injectable - DarkModeService","body":"\n                   \n\n\n\n\n\n  Injectables\n  DarkModeService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/AllService/dark-mode.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for managing dark mode settings.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                            \n                                \n                                        Initializes a new instance of the DarkModeService class.\n            \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     toggleDarkMode\n                                \n                            \n            \n                            \n                                \n            toggleDarkMode()\n                                \n                            \n            \n                            \n                                \n                                        Toggles the dark mode setting. If dark mode is currently enabled, it will be disabled, and vice versa.Updates the isDarkMode property and stores the new state in local storage.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     isDarkMode\n                                \n                            \n                            \n                                \n                                    isDarkMode:     boolean\n            \n                                \n                            \n                            \n                                \n                                    Indicates whether dark mode is currently enabled.\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Service for managing dark mode settings.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DarkModeService {\r\n\r\n  /**\r\n   * Initializes a new instance of the DarkModeService class.\r\n   */\r\n  constructor(){}\r\n   /**\r\n   * Indicates whether dark mode is currently enabled.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n   isDarkMode:boolean = localStorage.getItem('darkMode') === 'true';\r\n  /**\r\n   * Toggles the dark mode setting. If dark mode is currently enabled, it will be disabled, and vice versa.\r\n   * Updates the `isDarkMode` property and stores the new state in local storage.\r\n   */\r\n  toggleDarkMode() {\r\n    this.isDarkMode = !this.isDarkMode;\r\n    localStorage.setItem('darkMode', this.isDarkMode.toString());\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GrapheService.html":{"url":"injectables/GrapheService.html","title":"injectable - GrapheService","body":"\n                   \n\n\n\n\n\n  Injectables\n  GrapheService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/AllService/graphe.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for managing and interacting with the Cytoscape graph.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(translate: TranslateService)\n                                \n                            \n            \n                            \n                                \n                                        Constructor for the GrapheService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                translate\n                                                                    :     TranslateService\n            \n                                                            \n                                                            \n                                                                \n            The translation service for internationalization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     changeNodeEnum\n                                \n                            \n            \n                            \n                                \n            changeNodeEnum(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the node enumeration.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeChanges\n                                \n                            \n            \n                            \n                                \n            changeChanges(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes a setting or performs an action based on the selected option(chnage colors & sizes).\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeTypeGraphe\n                                \n                            \n            \n                            \n                                \n            changeTypeGraphe(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the type of graph (e.g., Directed, Undirected, Weighted).\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     onChangeButtonClicked\n                                \n                            \n            \n                            \n                                \n            onChangeButtonClicked(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Handles button clicks and performs actions based on the selected option.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeSizeScreen\n                                \n                            \n            \n                            \n                                \n            changeSizeScreen(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the size of the screen.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeSizeScreenComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterChangeSizeScreen\n                                \n                            \n            \n                            \n                                \n            RejeterChangeSizeScreen(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the changes made to the screen size and restores the previous size.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeSizeScreenComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addWeightedEdge\n                                \n                            \n            \n                            \n                                \n            addWeightedEdge(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Adds a weighted edge between selected nodes.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     AddWeightedEdgeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterAddEdgeWeighted\n                                \n                            \n            \n                            \n                                \n            RejeterAddEdgeWeighted(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the addition of a weighted edge and resets the form.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     AddWeightedEdgeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeNodeId\n                                \n                            \n            \n                            \n                                \n            changeNodeId(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the ID of a node in the graph.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeIdNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterChangeNodeId\n                                \n                            \n            \n                            \n                                \n            RejeterChangeNodeId(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the node ID change and resets the form.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeIdNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColor\n                                \n                            \n            \n                            \n                                \n            changeColor(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the colors of nodes, edges, or the screen based on user selection.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeColorComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterChangeColor\n                                \n                            \n            \n                            \n                                \n            RejeterChangeColor(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the color changes and resets the form.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addNode\n                                \n                            \n            \n                            \n                                \n            addNode(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Adds a new node to the graph if it doesn't already exist.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     AddNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object containing the new node ID.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterAddNode\n                                \n                            \n            \n                            \n                                \n            RejeterAddNode(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the addition of a new node and resets the form.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     AddNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object containing the new node ID.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnScreenTap\n                                \n                            \n            \n                            \n                                \n            OnScreenTap(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Listens for a tap event on the screen background and adds a new node when conditions are met.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnEdgeTap\n                                \n                            \n            \n                            \n                                \n            OnEdgeTap(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Listens for a tap event on edges and removes edges when the 'remove edges' or 'remove all' action is selected.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnNodeTap\n                                \n                            \n            \n                            \n                                \n            OnNodeTap(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Listens for a tap event on nodes and handles various actions based on the container state.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnInit\n                                \n                            \n            \n                            \n                                \n            OnInit(Container: any)\n                                \n                            \n            \n                            \n                                \n                                        Initializes the graph using Cytoscape and sets up the initial style and layout.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                Container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container element for the graph.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resetColors\n                                \n                            \n            \n                            \n                                \n            resetColors()\n                                \n                            \n            \n                            \n                                \n                                        Resets the visual styles of nodes and edges in the graph to their default colors.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColorNode\n                                \n                            \n            \n                            \n                                \n            changeColorNode(node: any, bgcolor: string, color: string, time: number)\n                                \n                            \n            \n                            \n                                \n                                        Changes the background color and text color of a given node.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                node\n                                                            \n                                                            \n                                                                \n            The node to change the colors of.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                bgcolor\n                                                            \n                                                            \n                                                                \n            The new background color.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                color\n                                                            \n                                                            \n                                                                \n            The new text color.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                time\n                                                            \n                                                            \n                                                                \n            Optional. Time delay before applying the color change.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColorEdge\n                                \n                            \n            \n                            \n                                \n            changeColorEdge(edge: any, color: string, lineEdgeColor: string, targetArrowColor: string, time: number)\n                                \n                            \n            \n                            \n                                \n                                        Changes the visual styles of a given edge, including line color, data color, and target arrow color.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                edge\n                                                            \n                                                            \n                                                                \n            The edge to change the visual styles of.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                color\n                                                            \n                                                            \n                                                                \n            The new data color (used for weighted graphs).\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                lineEdgeColor\n                                                            \n                                                            \n                                                                \n            The new line color.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetArrowColor\n                                                            \n                                                            \n                                                                \n            The new target arrow color (used for directed graphs).\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                time\n                                                            \n                                                            \n                                                                \n            Optional. Time delay before applying the color change.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColorNodes\n                                \n                            \n            \n                            \n                                \n            changeColorNodes()\n                                \n                            \n            \n                            \n                                \n                                        Resets the visual styles of all nodes in the graph to their default colors.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColorEdges\n                                \n                            \n            \n                            \n                                \n            changeColorEdges()\n                                \n                            \n            \n                            \n                                \n                                        Resets the visual styles of all edges in the graph to their default colors.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     onRemoveChange\n                                \n                            \n            \n                            \n                                \n            onRemoveChange(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Handles actions related to removing elements from the graph and resetting the graph properties.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     searcheEdgeChnageBC\n                                \n                            \n            \n                            \n                                \n            searcheEdgeChnageBC(container: any, source: string, target: string, lineColor: string)\n                                \n                            \n            \n                            \n                                \n                                        Searches for an edge between two specified nodes and changes its line color.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                source\n                                                            \n                                                            \n                                                                \n            The source node ID.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                target\n                                                            \n                                                            \n                                                                \n            The target node ID.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                lineColor\n                                                            \n                                                            \n                                                                \n            The new line color for the edge.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     restoreGraphe\n                                \n                            \n            \n                            \n                                \n            restoreGraphe(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Restores the graph by adding or removing elements based on the restoreArray.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getListeOfEdge\n                                \n                            \n            \n                            \n                                \n            getListeOfEdge()\n                                \n                            \n            \n                            \n                                \n                                        Generates a formatted list of edges in the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     string\n            \n                                        \n                                            \n                                                \n            A formatted string representing the list of edges.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getListOfNode\n                                \n                            \n            \n                            \n                                \n            getListOfNode()\n                                \n                            \n            \n                            \n                                \n                                        Generates a formatted list of nodes in the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     string\n            \n                                        \n                                            \n                                                \n            A formatted string representing the list of nodes.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDestroy\n                                \n                            \n            \n                            \n                                \n            OnDestroy()\n                                \n                            \n            \n                            \n                                \n                                        Performs cleanup operations when the component is destroyed.Destroys the CytoScape instance.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     matrixAdjancy\n                                \n                            \n            \n                            \n                                \n            matrixAdjancy()\n                                \n                            \n            \n                            \n                                \n                                        Generates an adjacency matrix representation of the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                \n            A 2D array representing the adjacency matrix.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isEdgeRemove\n                                \n                            \n            \n                            \n                                \n            isEdgeRemove(node1: any, node2: any, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Checks if an edge between two nodes exists and removes it from the graph if found.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                node1\n                                                            \n                                                            \n                                                                \n            The ID of the first node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                node2\n                                                            \n                                                            \n                                                                \n            The ID of the second node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     alphabets\n                                \n                            \n                            \n                                \n                                    alphabets:     string[]\n            \n                                \n                            \n                            \n                                \n                                    Array of lowercase alphabet characters followed by '1'. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     Alphabets\n                                \n                            \n                            \n                                \n                                    Alphabets:     string[]\n            \n                                \n                            \n                            \n                                \n                                    Array of lowercase alphabet characters followed by '2'. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     alphabets0\n                                \n                            \n                            \n                                \n                                    alphabets0:     string[]\n            \n                                \n                            \n                            \n                                \n                                    Array of lowercase alphabet characters. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private BACKGROUND_COLOR_NODE\n                                \n                            \n                            \n                                \n                                    BACKGROUND_COLOR_NODE:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: black\n                                    \n                                \n                            \n                                \n                                    The background color of nodes. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private BACKGROUND_COLOR_NODE_ALGO\n                                \n                            \n                            \n                                \n                                    BACKGROUND_COLOR_NODE_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: yellow\n                                    \n                                \n                            \n                                \n                                    The background color of nodes in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private COLOR_LINE_EDGE\n                                \n                            \n                            \n                                \n                                    COLOR_LINE_EDGE:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: black\n                                    \n                                \n                            \n                                \n                                    The color of edges. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private COLOR_LINE_EDGE_ALGO\n                                \n                            \n                            \n                                \n                                    COLOR_LINE_EDGE_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: yellow\n                                    \n                                \n                            \n                                \n                                    The color of edges in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private COLOR_NODE\n                                \n                            \n                            \n                                \n                                    COLOR_NODE:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: white\n                                    \n                                \n                            \n                                \n                                    The color of nodes. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private COLOR_NODE_ALGO\n                                \n                            \n                            \n                                \n                                    COLOR_NODE_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: black\n                                    \n                                \n                            \n                                \n                                    The color of nodes in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     counter\n                                \n                            \n                            \n                                \n                                    counter:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                            \n                                \n                                    A counter variable for tracking. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public cy\n                                \n                            \n                            \n                                \n                                    cy:     any\n            \n                                \n                            \n                            \n                                \n                                    The Cytoscape instance used to manage and render the graph. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private DATA_EDGE_COLOR\n                                \n                            \n                            \n                                \n                                    DATA_EDGE_COLOR:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: red\n                                    \n                                \n                            \n                                \n                                    The color of data associated with edges. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private DATA_EDGE_COLOR_ALGO\n                                \n                            \n                            \n                                \n                                    DATA_EDGE_COLOR_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: blue\n                                    \n                                \n                            \n                                \n                                    The color of data associated with edges in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     position\n                                \n                            \n                            \n                                \n                                    position:     any\n            \n                                \n                            \n                            \n                                \n                                    The position of something (needs a description). \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private TARGET_ARROW_COLOR\n                                \n                            \n                            \n                                \n                                    TARGET_ARROW_COLOR:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: blue\n                                    \n                                \n                            \n                                \n                                    The color of the target arrow on edges. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private TARGET_ARROW_COLOR_ALGO\n                                \n                            \n                            \n                                \n                                    TARGET_ARROW_COLOR_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: black\n                                    \n                                \n                            \n                                \n                                    The color of the target arrow in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public typeGraphe\n                                \n                            \n                            \n                                \n                                    typeGraphe:     string\n            \n                                \n                            \n                            \n                                \n                                    The type of the graph (e.g., Directed, Undirected, Weighted). \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as cytoscape from 'cytoscape';\r\n\r\n/**\r\n * Service for managing and interacting with the Cytoscape graph.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GrapheService {\r\n  /** The Cytoscape instance used to manage and render the graph. */\r\n  public cy: any;\r\n\r\n  /** The type of the graph (e.g., Directed, Undirected, Weighted). */\r\n  public typeGraphe: string = \"\";\r\n\r\n  /** Array of lowercase alphabet characters. */\r\n  alphabets0: string[] = Array.from({ length: 26 }, (_, i) =>\r\n    String.fromCharCode(65 + i)\r\n  );\r\n\r\n  /** Array of lowercase alphabet characters followed by '1'. */\r\n  alphabets: string[] = this.alphabets0.concat(\r\n    this.alphabets0.map(letter => letter + '1')\r\n  );\r\n\r\n  /** Array of lowercase alphabet characters followed by '2'. */\r\n  Alphabets: string[] = this.alphabets.concat(\r\n    this.alphabets0.map(letter => letter + '2')\r\n  );\r\n\r\n  /** A counter variable for tracking. */\r\n  counter: number = 0;\r\n\r\n  /** The position of something (needs a description). */\r\n  position: any;\r\n\r\n  //----------------------------------------------------------------\r\n  // Private Constants for Colors\r\n  //----------------------------------------------------------------\r\n\r\n  /** The color of nodes. */\r\n  private COLOR_NODE: any = \"white\";\r\n\r\n  /** The background color of nodes. */\r\n  private BACKGROUND_COLOR_NODE: any = \"black\";\r\n\r\n  /** The color of edges. */\r\n  private COLOR_LINE_EDGE: any = \"black\";\r\n\r\n  /** The color of the target arrow on edges. */\r\n  private TARGET_ARROW_COLOR: any = \"blue\";\r\n\r\n  /** The color of data associated with edges. */\r\n  private DATA_EDGE_COLOR: any = \"red\";\r\n\r\n  //----------------------------------------------------------------\r\n  // Private Constants for Algorithm Colors\r\n  //----------------------------------------------------------------\r\n\r\n  /** The color of the target arrow in algorithm animations. */\r\n  private TARGET_ARROW_COLOR_ALGO: any = \"black\";\r\n\r\n  /** The color of edges in algorithm animations. */\r\n  private COLOR_LINE_EDGE_ALGO: any = \"yellow\";\r\n\r\n  /** The color of nodes in algorithm animations. */\r\n  private COLOR_NODE_ALGO: any = \"black\";\r\n\r\n  /** The background color of nodes in algorithm animations. */\r\n  private BACKGROUND_COLOR_NODE_ALGO: any = \"yellow\";\r\n\r\n  /** The color of data associated with edges in algorithm animations. */\r\n  private DATA_EDGE_COLOR_ALGO: any = \"blue\";\r\n\r\n  //----------------------------------------------------------------\r\n\r\n  /**\r\n   * Constructor for the GrapheService.\r\n   *\r\n   * @param {TranslateService} translate - The translation service for internationalization.\r\n   */\r\n  constructor(private translate: TranslateService) {\r\n    // Constructor logic here\r\n  }\r\n\r\n  /**\r\n   * Changes the node enumeration.\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  changeNodeEnum(container:any):void{\r\n    if(this.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.selectedNode=[];\r\n      container.algorithm=\"\";\r\n      container.saveUpload = \"\";\r\n      container.remove=\"\";\r\n      container.containerHeight=50;\r\n      this.resetColors();\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      container.changeSelect=\"\";\r\n      //\r\n    }else{\r\n      container.nodeName=\"numerique\";\r\n    }\r\n    \r\n  }\r\n  /**\r\n  * Changes a setting or performs an action based on the selected option(chnage colors & sizes).\r\n  *\r\n  * @param {ScreenboxComponent} container - The container object.\r\n  */\r\n  changeChanges(container:any){\r\n    //DRY\r\n    container.selectedNode=[];\r\n    container.algorithm=\"\";\r\n    container.saveUpload = \"\";\r\n    container.remove=\"\";\r\n    container.containerHeight=50;\r\n    container.buttonClicked=\"\";\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    formChangeNodeId.style.display=\"none\";\r\n    formAddEdge.style.display=\"none\";\r\n    formChangeColor.style.display=\"none\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    this.position=\"\";\r\n    this.resetColors();\r\n    //\r\n    if(container.changeSelect==\"changeColorNodes\" || container.changeSelect==\"changeColorEdges\" || container.changeSelect==\"changeColorNodesAlgo\" || container.changeSelect==\"changeColorEdgesAlgo\" || container.changeSelect==\"changeColorScreen\"){\r\n      if(container.changeSelect==\"changeColorNodes\"){\r\n        container.message=this.translate.instant(\"grapheS.msg26\")\r\n      }else if(container.changeSelect==\"changeColorEdges\") {\r\n        container.message=this.translate.instant(\"grapheS.msg27\")\r\n      }if(container.changeSelect==\"changeColorNodesAlgo\"){\r\n        container.message=this.translate.instant(\"grapheS.msg34\")\r\n      }else if(container.changeSelect==\"changeColorEdgesAlgo\") {\r\n        container.message=this.translate.instant(\"grapheS.msg35\")\r\n      }else if(container.changeSelect==\"changeColorScreen\") {\r\n        container.message=this.translate.instant(\"grapheS.msg36\")\r\n      }\r\n      formChangeColor.style.display=\"block\";\r\n    }else if(container.changeSelect==\"changeSizeScreen\"){\r\n      container.message=this.translate.instant(\"grapheS.msg39\")\r\n      formAChangeSizeScreen.style.display=\"block\";\r\n    }else if(container.changeSelect==\"changeIdNode\"){\r\n      if(this.typeGraphe && this.cy.nodes().length){\r\n        container.message=this.translate.instant(\"grapheS.msg24\")\r\n      }else{\r\n        if(this.typeGraphe==\"\"){\r\n          container.message=this.translate.instant(\"screenbox.msg23\");\r\n        }else if(this.cy.nodes().length==0){\r\n          container.message=this.translate.instant(\"grapheS.msg41\");\r\n        }\r\n        container.changeSelect=\"\";\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Changes the type of graph (e.g., Directed, Undirected, Weighted).\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  changeTypeGraphe(container:any):void{\r\n    //DRY\r\n    container.selectedNode=[];\r\n    container.buttonClicked=\"\";\r\n    container.algorithm=\"\";\r\n    container.saveUpload = \"\";\r\n    container.remove=\"\";\r\n    container.changeSelect=\"\";\r\n    this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n    this.counter=0;\r\n    //\r\n    \r\n    this.typeGraphe=container.typeGraphe;\r\n    this.resetColors();\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    formAddNode.style.display=\"none\";\r\n    formChangeNodeId.style.display=\"none\";\r\n    formAddEdge.style.display=\"none\";\r\n    this.position=\"\";\r\n    container.containerHeight=50;\r\n    container.nodeId=0;\r\n    this.cy.remove(this.cy.elements());\r\n    container.message=this.translate.instant(\"grapheS.msg1\");\r\n    if (this.typeGraphe === \"Directed Weighted\") {\r\n      this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'width': 4,\r\n              'line-color': this.COLOR_LINE_EDGE,\r\n              'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n              'target-arrow-shape': 'triangle',\r\n              'color': this.DATA_EDGE_COLOR,\r\n              'curve-style': 'bezier',\r\n              'label': \"data(weight)\",\r\n              'text-margin-y': -12\r\n          })\r\n          .update();\r\n          container.message+=this.translate.instant(\"grapheS.msg18\")+\" \"+this.translate.instant(\"grapheS.msg20\");\r\n\r\n      }else if (this.typeGraphe === \"Directed Unweighted\") {\r\n        this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'width': 4,\r\n              'line-color': this.COLOR_LINE_EDGE,\r\n              'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n              'target-arrow-shape': 'triangle',\r\n              'color': this.DATA_EDGE_COLOR,\r\n              'curve-style': 'bezier',\r\n              'label': \"\"\r\n          })\r\n          .update();\r\n          container.message+=this.translate.instant(\"grapheS.msg18\")+\" \"+this.translate.instant(\"grapheS.msg21\");\r\n      } else if (this.typeGraphe === \"Undirected Weighted\") {\r\n        this.cy.style()\r\n              .selector('edge') // Apply the style to all edges\r\n              .style({\r\n                  'width': 4,\r\n                  'line-color': this.COLOR_LINE_EDGE,\r\n                  'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n                  'target-arrow-shape': 'triangle',\r\n                  'color': this.DATA_EDGE_COLOR,\r\n                  'curve-style': 'haystack',\r\n                  'label': \"data(weight)\",\r\n                  'text-margin-y': -12\r\n              })\r\n              .update();\r\n          container.message+=this.translate.instant(\"grapheS.msg19\")+\" \"+this.translate.instant(\"grapheS.msg20\");;\r\n      } else if (this.typeGraphe === \"Undirected Unweighted\") {\r\n        this.cy.style()\r\n              .selector('edge') // Apply the style to all edges\r\n              .style({\r\n                  'width': 4,\r\n                  'line-color': this.COLOR_LINE_EDGE,\r\n                  'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n                  'target-arrow-shape': 'triangle',\r\n                  'color': this.DATA_EDGE_COLOR,\r\n                  'curve-style': 'haystack',\r\n                  'label': \"\"\r\n              })\r\n              .update();\r\n        container.message+=this.translate.instant(\"grapheS.msg19\")+\" \"+this.translate.instant(\"grapheS.msg21\");;\r\n      }\r\n  }\r\n  /**\r\n * Handles button clicks and performs actions based on the selected option.\r\n *\r\n * @param {ScreenboxComponent} container - The container object.\r\n */\r\n  onChangeButtonClicked(container:any):void{\r\n    if(this.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.changeSelect=\"\";\r\n      container.selectedNode=[];\r\n      container.algorithm=\"\";\r\n      container.saveUpload = \"\";\r\n      container.remove=\"\";\r\n      container.containerHeight=50;\r\n      //\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n      formAddNode.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      this.position=\"\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeNodeId.style.display=\"none\";\r\n    \r\n      if(container.buttonClicked==\"default\"){\r\n        container.message=this.translate.instant(\"grapheS.msg2\");\r\n        this.cy.fit();\r\n      }else if(container.buttonClicked==\"addVertices\"){\r\n        container.message=this.translate.instant(\"grapheS.msg3\");\r\n      }else if(container.buttonClicked==\"addEdges\"){\r\n        if(this.cy.nodes().length){\r\n          container.message=this.translate.instant(\"grapheS.msg4\");\r\n        }else{\r\n          container.message=this.translate.instant(\"grapheS.msg41\");\r\n          container.buttonClicked=\"\";\r\n        }\r\n      }else if(container.buttonClicked==\"restore\"){\r\n        container.message=this.translate.instant(\"grapheS.msg6\");\r\n        this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n        this.counter=0;\r\n        this.restoreGraphe(container);\r\n      }\r\n    }else{\r\n      container.buttonClicked=\"\";\r\n    }\r\n  }\r\n  /**\r\n   * Changes the size of the screen.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeSizeScreenComponent} container2 - Another container object.\r\n   */\r\n  changeSizeScreen(container:any,container2:any):void{\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    if(container2.height){\r\n      screen.style.height =container2.height+'px';\r\n      container.message=this.translate.instant(\"grapheS.msg37\",{height:container2.height});\r\n    }else{\r\n      screen.style.height =400+'px';//default value\r\n      container.message=this.translate.instant(\"grapheS.msg38\");\r\n    }\r\n    container.changeSelect=\"\";\r\n    // container2.height=null;\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Rejects the changes made to the screen size and restores the previous size.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeSizeScreenComponent} container2 - Another container object.\r\n   */\r\n  RejeterChangeSizeScreen(container:any,container2:any):void{\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    container2.height=screen.style.height.slice(0,-2);\r\n    container.changeSelect=\"\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    container.message=this.translate.instant(\"grapheS.msg40\")\r\n  }\r\n  /**\r\n   * Adds a weighted edge between selected nodes.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddWeightedEdgeComponent} container2 - Another container object.\r\n   */\r\n  addWeightedEdge(container:any,container2:any):void{\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    if(container.weight!=0){\r\n      this.isEdgeRemove(container.selectedNode[0],container.selectedNode[1],container);\r\n      let data={\r\n        source:container.selectedNode[0],\r\n        target:container.selectedNode[1],\r\n        weight:container.weight\r\n      }\r\n      let edge=this.cy.add({\r\n        data\r\n      });\r\n      //NEW CODE\r\n      let elem={status:\"add\",element:edge};\r\n      container.restoreArray.push(elem);\r\n      //\r\n      formAddEdge.style.display='none';\r\n      container.message=this.translate.instant(\"grapheS.msg7\",{selectedNode1:container.selectedNode[0],selectedNode2:container.selectedNode[1],weight:container.weight});\r\n      container.weight=null;\r\n      container2.weightForm=null;\r\n      container.selectedNode=[];\r\n      this.resetColors();\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg8\")\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the addition of a weighted edge and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddWeightedEdgeComponent} container2 - Another container object.\r\n   */\r\n  RejeterAddEdgeWeighted(container:any,container2:any):void{\r\n    container.selectedNode=[];\r\n    container.weight=null;\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    formAddEdge.style.display='none';\r\n    this.resetColors();\r\n    container.message=this.translate.instant(\"grapheS.msg9\");\r\n    container2.weightForm=null;\r\n  }\r\n  /**\r\n   * Changes the ID of a node in the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeIdNodeComponent} container2 - Another container object.\r\n   */\r\n  changeNodeId(container:any,container2:any):void{\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    let idExists=false;\r\n    this.cy.nodes().forEach((node:any)=>{\r\n      if(node.data('id')==container2.newNodeId){\r\n        container.message=this.translate.instant(\"grapheS.msg23\");\r\n        idExists=true;\r\n      }\r\n    })\r\n\r\n    if(idExists==false){\r\n      let node = this.cy.getElementById(container.selectedNode[0]);\r\n      let elem:any;\r\n      let nodeNew=this.cy.add({ group: 'nodes', data: { id: container2.newNodeId}, position: { x: node.position('x'),y: node.position('y'),}});\r\n      \r\n      this.cy.edges().forEach((edge:any)=>{\r\n        if(this.typeGraphe.split(\" \")[1]==\"Unweighted\"){\r\n            if (edge.source().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n              this.cy.add({\r\n                  group: 'edges',\r\n                  data: {\r\n                      source: nodeNew.id(),\r\n                      target: edge.target().id(),\r\n                  }\r\n              });\r\n            } else if (edge.target().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n                this.cy.add({\r\n                    group: 'edges',\r\n                    data: {\r\n                        source: edge.source().id(),\r\n                        target: nodeNew.id(),\r\n                    }\r\n                });\r\n            }\r\n        }else if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n            if (edge.source().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n              this.cy.add({\r\n                  group: 'edges',\r\n                  data: {\r\n                      source: nodeNew.id(),\r\n                      target: edge.target().id(),\r\n                      weight: edge.data('weight') \r\n                  }\r\n              });\r\n            } else if (edge.target().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n                this.cy.add({\r\n                    group: 'edges',\r\n                    data: {\r\n                        source: edge.source().id(),\r\n                        target: nodeNew.id(),\r\n                        weight: edge.data('weight') \r\n                    }\r\n                });\r\n            }\r\n        }\r\n      })\r\n      //Restore\r\n      elem={status:\"remove\",element:node};\r\n      container.restoreArray.push(elem);\r\n      this.cy.remove(node);\r\n      elem={status:\"add\",element:nodeNew};\r\n      container.restoreArray.push(elem);\r\n      //Log message \r\n      container.message=this.translate.instant(\"grapheS.msg25\",{last:container.selectedNode[0],new:container2.newNodeId});\r\n      //Initialiation\r\n      container.nodeIdChanged=container2.newNodeId;\r\n      formChangeNodeId.style.display = 'none';\r\n      container.selectedNode=[];\r\n      container2.newNodeId=null;\r\n      this.resetColors();\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the node ID change and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeIdNodeComponent} container2 - Another container object.\r\n   */\r\n  RejeterChangeNodeId(container:any,container2:any):void{\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    formChangeNodeId.style.display = 'none';\r\n    container.selectedNode=[];\r\n    container2.newNodeId=null;\r\n    this.resetColors();\r\n    container.message=this.translate.instant(\"grapheS.msg22\");\r\n  }\r\n  /**\r\n   * Changes the colors of nodes, edges, or the screen based on user selection.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeColorComponent} container2 - Another container object.\r\n   */\r\n  changeColor(container:any,container2:any){\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    if(container.changeSelect==\"changeColorNodes\"){\r\n      this.COLOR_NODE=container2.color;\r\n      this.BACKGROUND_COLOR_NODE=container2.bgColor;\r\n      this.cy.style()\r\n          .selector('node') \r\n          .style({\r\n            'background-color': this.BACKGROUND_COLOR_NODE,\r\n            'color': this.COLOR_NODE\r\n          })\r\n          .update();\r\n      this.changeColorNodes();\r\n      container.message=this.translate.instant(\"grapheS.msg30\")\r\n    }else if(container.changeSelect==\"changeColorEdges\"){\r\n      this.COLOR_LINE_EDGE=container2.bgColor;\r\n      this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'line-color': this.COLOR_LINE_EDGE,\r\n          })\r\n          .update();\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        this.DATA_EDGE_COLOR=container2.color;\r\n        this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'color': this.DATA_EDGE_COLOR\r\n          })\r\n          .update();\r\n      }\r\n      \r\n      if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n        this.TARGET_ARROW_COLOR=container2.fColor;\r\n        this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n          })\r\n          .update();\r\n      }\r\n      this.changeColorEdges();\r\n      container.message=this.translate.instant(\"grapheS.msg31\")\r\n    }else if(container.changeSelect==\"changeColorNodesAlgo\"){\r\n      this.COLOR_NODE_ALGO=container2.color;\r\n      this.BACKGROUND_COLOR_NODE_ALGO=container2.bgColor;\r\n      container.message=this.translate.instant(\"grapheS.msg32\")\r\n    }else if(container.changeSelect==\"changeColorEdgesAlgo\"){\r\n      this.COLOR_LINE_EDGE_ALGO=container2.bgColor;\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        this.DATA_EDGE_COLOR_ALGO=container2.color;\r\n      }\r\n      \r\n      if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n        this.TARGET_ARROW_COLOR_ALGO=container2.fColor;\r\n      }\r\n      container.message=this.translate.instant(\"grapheS.msg33\")\r\n    }else if(container.changeSelect==\"changeColorScreen\"){\r\n      screen.style.backgroundColor=container2.bgColor;\r\n    }\r\n    container.changeSelect=\"\";\r\n    formChangeColor.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Rejects the color changes and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  RejeterChangeColor(container:any):void {\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    if(container.changeSelect==\"changeColorNodes\"){\r\n      container.message=this.translate.instant(\"grapheS.msg28\")\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg29\")\r\n    }\r\n    container.changeSelect=\"\";\r\n    formChangeColor.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Adds a new node to the graph if it doesn't already exist.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddNodeComponent} container2 - Another container object containing the new node ID.\r\n   */\r\n  addNode(container:any,container2:any):void{\r\n    const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n    let exist:boolean=false;\r\n    if(container2.nodeId){\r\n      this.cy.nodes().forEach((node:any)=>{\r\n        if(node.data('id')==container2.nodeId){\r\n          container.message=this.translate.instant('grapheS.msg23');\r\n          exist=true;\r\n        }\r\n      })\r\n      if(!exist){\r\n        let node=this.cy.add({ group: 'nodes', data: { id: container2.nodeId}, position: this.position });\r\n        let elem={status:\"add\",element:node};\r\n        container.restoreArray.push(elem);\r\n        container.message=this.translate.instant(\"grapheS.msg10\",{nodeId:node.data('id')});\r\n        formAddNode.style.display=\"none\";\r\n        this.position=\"\";\r\n        container2.nodeId=null;\r\n      }\r\n    }else{\r\n      container.message=this.translate.instant('screenbox.msg41');\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the addition of a new node and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddNodeComponent} container2 - Another container object containing the new node ID.\r\n   */\r\n  RejeterAddNode(container:any,container2:any):void{\r\n    const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n    formAddNode.style.display=\"none\";\r\n    this.position=\"\";\r\n    container2.nodeId=null;\r\n  }\r\n  /**\r\n   * Listens for a tap event on the screen background and adds a new node when conditions are met.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnScreenTap(container:any):void{\r\n    this.cy.on('tap', (evt:any)=> {\r\n      if (evt.target === this.cy && container.buttonClicked===\"addVertices\" && this.typeGraphe!=\"\") {\r\n          let pos = evt.position || evt.cyPosition;\r\n          let node:any;\r\n          if(container.nodeName==\"numerique\"){\r\n            this.cy.nodes().forEach((node:any)=>{\r\n              if(node.data('id')==this.counter+1){\r\n                ++this.counter;\r\n              }\r\n            })\r\n            node=this.cy.add({ group: 'nodes', data: { id: ++this.counter}, position: pos });\r\n          }else if(container.nodeName==\"alphabic\"){\r\n            this.cy.nodes().forEach((node:any)=>{\r\n              if(node.data('id')==this.Alphabets[0]){\r\n                this.Alphabets.shift();\r\n              }\r\n            })\r\n            node=this.cy.add({ group: 'nodes', data: { id: this.Alphabets.shift()}, position: pos });\r\n          }else if(container.nodeName==\"customText\"){\r\n            const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n            formAddNode.style.display=\"block\";\r\n            this.position=pos;\r\n          }\r\n          if(container.nodeName!=\"customText\"){\r\n            let elem={status:\"add\",element:node};\r\n            container.restoreArray.push(elem);\r\n            container.message=this.translate.instant(\"grapheS.msg10\",{nodeId:node.data('id')});\r\n          }\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Listens for a tap event on edges and removes edges when the 'remove edges' or 'remove all' action is selected.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnEdgeTap(container:any):void{\r\n    this.cy.on('tap', 'edge',  (evt:any)=> {\r\n      var edge = evt.target;\r\n      if(container.remove==\"remove edges\" || container.remove==\"remove all\"){\r\n        this.resetColors();\r\n        container.message=this.translate.instant(\"grapheS.msg11\",{sourceId:edge.source().id(),targetId:edge.target().id()});\r\n        edge.remove();\r\n         //NEW CODE\r\n         let elem={status:\"remove\",element:edge};\r\n         container.restoreArray.push(elem);\r\n         //\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Listens for a tap event on nodes and handles various actions based on the container state.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnNodeTap(container:any):void{\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    this.cy.on('tap', 'node',  (evt:any)=> {\r\n      var node = evt.target;\r\n      if(container.remove==\"remove nodes\" || container.remove==\"remove all\"){\r\n        this.resetColors();\r\n        node.remove();\r\n        //NEW CODE\r\n        let elem={status:\"remove\",element:node};\r\n        container.restoreArray.push(elem);\r\n        //\r\n        container.message=this.translate.instant(\"grapheS.msg12\",{nodeId:node.data('id')});\r\n      }else if(container.changeSelect===\"changeIdNode\"){\r\n        if(container.selectedNode.length!=0){\r\n          container.selectedNode=[];\r\n        }\r\n        this.changeColorNode(node, this.BACKGROUND_COLOR_NODE_ALGO,this.COLOR_NODE_ALGO);\r\n        container.selectedNode.push(node.data('id'));\r\n        formChangeNodeId.style.display = 'block';\r\n      }else if(container.buttonClicked===\"addEdges\"){\r\n          this.resetColors();\r\n          if(container.selectedNode.length {\r\n      this.cy.nodes().style('background-color', this.BACKGROUND_COLOR_NODE);\r\n      this.cy.nodes().style('color', this.COLOR_NODE);\r\n      this.cy.edges().style('line-color', this.COLOR_LINE_EDGE);\r\n      this.cy.edges().style('color', this.DATA_EDGE_COLOR);\r\n      this.cy.edges().style('target-arrow-color', this.TARGET_ARROW_COLOR);\r\n    },10)\r\n  }\r\n  /**\r\n   * Changes the background color and text color of a given node.\r\n   *\r\n   * @param {any} node - The node to change the colors of.\r\n   * @param {string} bgcolor - The new background color.\r\n   * @param {string} color - The new text color.\r\n   * @param {number} time - Optional. Time delay before applying the color change.\r\n   */\r\n  changeColorNode(node:any,bgcolor:string,color:string,time:number=10): void {\r\n    setTimeout(() => {\r\n      node.style('background-color',bgcolor);\r\n      node.style('color',color);\r\n    },time);\r\n  }\r\n  /**\r\n   * Changes the visual styles of a given edge, including line color, data color, and target arrow color.\r\n   *\r\n   * @param {any} edge - The edge to change the visual styles of.\r\n   * @param {string} color - The new data color (used for weighted graphs).\r\n   * @param {string} lineEdgeColor - The new line color.\r\n   * @param {string} targetArrowColor - The new target arrow color (used for directed graphs).\r\n   * @param {number} time - Optional. Time delay before applying the color change.\r\n   */\r\n  changeColorEdge(edge:any,color:string,lineEdgeColor:string,targetArrowColor:string,time:number=10): void {\r\n    setTimeout(() => {\r\n        edge.style('line-color',lineEdgeColor);\r\n        if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n          edge.style('color',color);\r\n        }\r\n        if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n          edge.style('target-arrow-color', targetArrowColor);\r\n        }\r\n      },time)\r\n  }\r\n  /**\r\n   * Resets the visual styles of all nodes in the graph to their default colors.\r\n   */\r\n  changeColorNodes(): void {\r\n    setTimeout(() => {\r\n      this.cy.nodes().forEach((node:any)=>{\r\n        node.style('background-color',this.BACKGROUND_COLOR_NODE);\r\n        node.style('color',this.COLOR_NODE);\r\n      })\r\n    },10)\r\n  }\r\n  /**\r\n   * Resets the visual styles of all edges in the graph to their default colors.\r\n   */\r\n  changeColorEdges(): void {\r\n    setTimeout(() => {\r\n      this.cy.edges().forEach((edge:any)=>{\r\n        edge.style('line-color',this.COLOR_LINE_EDGE);\r\n        if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n          edge.style('color',this.DATA_EDGE_COLOR);\r\n        }\r\n        if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n          edge.style('target-arrow-color', this.TARGET_ARROW_COLOR);\r\n        }\r\n      })\r\n    },10)\r\n  }\r\n  /**\r\n   * Handles actions related to removing elements from the graph and resetting the graph properties.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   */\r\n  onRemoveChange(container:any):void{\r\n    if(container.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.changeSelect=\"\";\r\n      container.buttonClicked=\"\";\r\n      container.containerHeight=50;\r\n      container.selectedNode=[];\r\n      container.algorithm=\"\";\r\n      //\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      container.grapheS.position=\"\";\r\n      if(container.remove==\"reset graphe\"){\r\n        container.nodeId=0;\r\n        this.cy.remove(this.cy.elements());\r\n        container.message=this.translate.instant(\"grapheS.msg17\");\r\n      }\r\n    }else{\r\n      container.remove=\"\";\r\n    }\r\n    \r\n  }\r\n  /**\r\n   * Searches for an edge between two specified nodes and changes its line color.\r\n   *\r\n   * @param {any} container - The container object containing graph-related properties.\r\n   * @param {string} source - The source node ID.\r\n   * @param {string} target - The target node ID.\r\n   * @param {string} lineColor - The new line color for the edge.\r\n   */\r\n  searcheEdgeChnageBC(container:any,source:string,target:string,lineColor:string):void{\r\n    const edges = this.cy.elements('edge'); // Select only edges\r\n    edges.forEach((edge:any) => {\r\n        const edgeSourceId = edge.source().id();\r\n        const edgeTargetId = edge.target().id();\r\n        if (edgeSourceId === source && edgeTargetId === target) {\r\n            edge.style('line-color', lineColor);\r\n        }\r\n    });\r\n  }\r\n  /**\r\n   * Restores the graph by adding or removing elements based on the restoreArray.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   */\r\n  restoreGraphe(container:any):void{\r\n    if(container.restoreArray.length!=0){\r\n      let elem=container.restoreArray.pop();\r\n      let element=elem.element;\r\n      if(elem.status==\"add\"){\r\n        if(element.isNode() || element.isEdge()){\r\n          element.remove();\r\n        }\r\n      }else{\r\n        if(element.isNode() || element.isEdge()){\r\n          this.cy.add(element);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Generates a formatted list of edges in the graph.\r\n   *\r\n   * @returns {string} - A formatted string representing the list of edges.\r\n   */\r\n  getListeOfEdge():string {\r\n    let listOfEdge:string=\"\";\r\n    let i:number=0;\r\n    this.cy?.edges().forEach((edge:any) => {\r\n      i++;\r\n      let element:string=`(${this.translate.instant(\"info.s\")}: ${edge.source().id()},${this.translate.instant(\"info.t\")}: ${edge.target().id()}`;\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        element+=`,${this.translate.instant(\"info.w\")}: ${edge.data('weight')}) `;\r\n      }else{\r\n        element+=\") \";\r\n      }\r\n      if(i!=this.cy?.edges().length){\r\n        element+=\" --- \";\r\n      }\r\n      listOfEdge+=element;\r\n    });\r\n    return listOfEdge;\r\n  }\r\n  /**\r\n   * Generates a formatted list of nodes in the graph.\r\n   *\r\n   * @returns {string} - A formatted string representing the list of nodes.\r\n   */\r\n  getListOfNode():string{\r\n    let listOfNode:string=\"\";\r\n    let i:number=0;\r\n    this.cy?.nodes().forEach((node:any) => {\r\n      i++;\r\n      listOfNode+=`${node.data(\"id\")} `;\r\n      if(i!=this.cy?.nodes().length){\r\n        listOfNode+=\" --- \";\r\n      }\r\n    });\r\n    return listOfNode;\r\n  }\r\n  /**\r\n   * Performs cleanup operations when the component is destroyed.\r\n   * Destroys the CytoScape instance.\r\n   */\r\n  OnDestroy():void{\r\n    this.cy.destroy();\r\n  }\r\n  /**\r\n   * Generates an adjacency matrix representation of the graph.\r\n   * \r\n   * @returns {Array} - A 2D array representing the adjacency matrix.\r\n   */\r\n  matrixAdjancy():Array{\r\n    let adjacencyMatrix:Array=[];\r\n    const nodes = this.cy.nodes();\r\n    const numNodes = nodes.length;\r\n\r\n    for (let i = 0; i {\r\n        if((edge.source().id()==node1 && edge.target().id()==node2) || (edge.source().id()==node2 && edge.target().id()==node1)){\r\n          this.cy.remove(edge);\r\n          let elem={status:\"remove\",element:edge};\r\n          container.restoreArray.push(elem);\r\n        }\r\n      })\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaveUploadService.html":{"url":"injectables/SaveUploadService.html","title":"injectable - SaveUploadService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SaveUploadService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/AllService/save-upload.service.ts\n        \n\n            \n                Description\n            \n            \n                Service responsible for handling save and upload operations.It provides methods to save and upload data, and uses the TranslateService for localization.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(translate: TranslateService)\n                                \n                            \n            \n                            \n                                \n                                        Initializes a new instance of the SaveUploadService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                translate\n                                                                    :     TranslateService\n            \n                                                            \n                                                            \n                                                                \n            The TranslateService for localization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     saveJSON\n                                \n                            \n            \n                            \n                                \n            saveJSON(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves the current graph as a JSON file.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     saveJPG\n                                \n                            \n            \n                            \n                                \n            saveJPG(container: any, fullGraphe: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Saves the current graph as a JPG image.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                fullGraphe\n                                                            \n                                                            \n                                                                \n            Whether to export the full graph or just the current viewport view.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     savePNG\n                                \n                            \n            \n                            \n                                \n            savePNG(container: any, fullGraph: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Saves the current graph as a PNG image.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                fullGraph\n                                                            \n                                                            \n                                                                \n            Whether to export the full graph or just the current viewport view.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     uploadJSON\n                                \n                            \n            \n                            \n                                \n            uploadJSON(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Uploads a JSON file and updates the graph with the uploaded data.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnSaveUploadChange\n                                \n                            \n            \n                            \n                                \n            OnSaveUploadChange(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Handles the change in the save/upload option and performs the corresponding action.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n/**\r\n * Service responsible for handling save and upload operations.\r\n * It provides methods to save and upload data, and uses the TranslateService for localization.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaveUploadService {\r\n  /**\r\n   * Initializes a new instance of the SaveUploadService.\r\n   *\r\n   * @param {TranslateService} translate - The TranslateService for localization.\r\n   */\r\n  constructor(private translate: TranslateService) { }\r\n  /**\r\n   * Saves the current graph as a JSON file.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   */\r\n  saveJSON(container:any) {\r\n    // Get the Cytoscape elements in JSON format\r\n    let elementsJson = container.grapheS.cy.json();\r\n    elementsJson.typeGraphe = container.typeGraphe;\r\n    // Create a Blob from the JSON data\r\n    const blob = new Blob([JSON.stringify(elementsJson)], { type: 'application/json' });\r\n    // Create a temporary URL for the Blob\r\n    const url = URL.createObjectURL(blob);\r\n    // Create an anchor element for the download\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'graphe.json';\r\n    // Trigger the download\r\n    a.click();\r\n    container.saveUpload=\"\";\r\n    // Clean up the temporary URL\r\n    URL.revokeObjectURL(url);\r\n  }\r\n  \r\n  /**\r\n   * Saves the current graph as a JPG image.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   * @param {boolean} [fullGraphe=true] - Whether to export the full graph or just the current viewport view.\r\n   */\r\n  saveJPG(container:any,fullGraphe:boolean=true):void{\r\n  // Get a reference to the Cytoscape instance\r\n  const cy = container.grapheS.cy;\r\n  // Export the current graph view as a JPG image\r\n  const jpgPromise = cy.jpg({\r\n      output: 'blob-promise', // Use 'blob-promise' to make it non-blocking\r\n      quality: 1, // Set the quality to 1 (highest quality)\r\n      bg: 'white', // Set the background color to white (optional)\r\n      full: fullGraphe, // Export the current viewport view (change to true for full graph)\r\n      scale: 1, // Set the scale (1 for original size)\r\n      maxWidth: 900, // Maximum width (optional)\r\n      maxHeight: 800, // Maximum height (optional)\r\n  });\r\n  jpgPromise.then((blob:any) => {\r\n      // Create an anchor element for the download\r\n      const a = document.createElement('a');\r\n      a.href = URL.createObjectURL(blob);\r\n      a.download = 'graph.jpg';\r\n      // Trigger the download\r\n      a.click();\r\n      container.saveUpload=\"\";\r\n  });\r\n  }\r\n  /**\r\n   * Saves the current graph as a PNG image.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   * @param {boolean} [fullGraph=true] - Whether to export the full graph or just the current viewport view.\r\n   */\r\n  savePNG(container:any,fullGraph:boolean=true):void{\r\n    // Get a reference to the Cytoscape instance\r\n    const cy = container.grapheS.cy;\r\n      \r\n    // Export the current graph view as a PNG image\r\n    const pngPromise = cy.png({\r\n        output: 'blob-promise', // Use 'blob-promise' to make it non-blocking\r\n        bg: 'white', // Set the background color to white (optional)\r\n        full: fullGraph, // Export the current viewport view (change to true for full graph)\r\n        scale: 1, // Set the scale (1 for original size)\r\n        maxWidth: 900, // Maximum width (optional)\r\n        maxHeight: 800, // Maximum height (optional)\r\n    });\r\n    \r\n    pngPromise.then((blob: any) => {\r\n        // Create an anchor element for the download\r\n        const a = document.createElement('a');\r\n        a.href = URL.createObjectURL(blob);\r\n        a.download = 'graph.png';\r\n        \r\n        // Trigger the download\r\n        a.click();\r\n        \r\n        // Optionally, you can perform additional actions after the download\r\n        container.saveUpload = \"\";\r\n    });\r\n  }\r\n  /**\r\n   * Uploads a JSON file and updates the graph with the uploaded data.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   */\r\n  uploadJSON(container:any) {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.onchange = (event) => {\r\n      const file = (event.target as HTMLInputElement).files?.[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          try {\r\n            const json = JSON.parse(e.target?.result as string);\r\n            let largestNodeId = 0;\r\n            json.elements.nodes.forEach((node: any) => {\r\n              const nodeId = parseInt(node.data.id);\r\n              if (nodeId > largestNodeId) {\r\n                largestNodeId = nodeId;\r\n              }\r\n            });\r\n            container.nodeId=largestNodeId;\r\n            // Check if the typeGraphe property exists\r\n            if (json.typeGraphe) {\r\n              // Clear existing elements\r\n              container.grapheS.cy.elements().remove();\r\n              // Add new elements from the uploaded JSON\r\n              container.typeGraphe=json.typeGraphe;\r\n              container.grapheS.changeTypeGraphe(container);\r\n              container.grapheS.cy.add(json.elements);\r\n              // Fit the graph to the viewport\r\n              container.saveUpload=\"\";\r\n              container.message=this.translate.instant(\"saveUploadS.msg1\");\r\n              container.grapheS.cy.fit();\r\n              container.grapheS.cy.reset()\r\n            } else {\r\n              container.message=this.translate.instant(\"saveUploadS.msg2\");\r\n            }\r\n          } catch (error) {\r\n            container.message=this.translate.instant(\"saveUploadS.msg2\");\r\n          }\r\n        };\r\n        reader.readAsText(file);\r\n      }\r\n    };\r\n    input.click();\r\n  }\r\n  /**\r\n   * Handles the change in the save/upload option and performs the corresponding action.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   */\r\n  OnSaveUploadChange(container:any):void{\r\n      container.changeSelect=\"\";\r\n      container.remove=\"\";\r\n      container.buttonClicked=\"\";\r\n      container.containerHeight=50;\r\n      container.selectedNode=[];\r\n      container.algorithm=\"\";\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      container.grapheS.position=\"\";\r\n      if(container.saveUpload==\"upload\"){\r\n        this.uploadJSON(container);\r\n      }else if(container.typeGraphe!=\"\" && container.grapheS.cy.nodes().length){\r\n        if(container.saveUpload==\"save\"){\r\n          this.saveJSON(container);\r\n        }else if(container.saveUpload==\"saveJPG\"){\r\n          this.saveJPG(container);\r\n        }else if(container.saveUpload==\"saveJPGScreen\"){\r\n          this.saveJPG(container,false);\r\n        }else if(container.saveUpload==\"savePNG\"){\r\n          this.savePNG(container);\r\n        }else if(container.saveUpload==\"savePNGScreen\"){\r\n          this.savePNG(container,false);\r\n        }\r\n      }else{\r\n          if(!container.grapheS.cy.nodes().length && container.typeGraphe!=\"\"){\r\n            container.message=this.translate.instant(\"algoS.msg11\");\r\n          } \r\n          container.typeGraphe=\"\";\r\n      }\r\n  }\r\n}\r\n\r\n\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    66%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/app/AllService/algorithm.service.ts\n            \n            \n                injectable\n            \n            \n                AlgorithmService\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                src/app/AllService/dark-mode.service.ts\n            \n            \n                injectable\n            \n            \n                DarkModeService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/AllService/graphe.service.ts\n            \n            \n                injectable\n            \n            \n                GrapheService\n            \n            \n                100 %\n                (48/48)\n            \n        \n        \n            \n                src/app/AllService/save-upload.service.ts\n            \n            \n                injectable\n            \n            \n                SaveUploadService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/app/about/about.component.ts\n            \n            \n                component\n            \n            \n                AboutComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/components/add-node/add-node.component.ts\n            \n            \n                component\n            \n            \n                AddNodeComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/app/components/add-weighted-edge/add-weighted-edge.component.ts\n            \n            \n                component\n            \n            \n                AddWeightedEdgeComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/app/components/change-color/change-color.component.ts\n            \n            \n                component\n            \n            \n                ChangeColorComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/app/components/change-id-node/change-id-node.component.ts\n            \n            \n                component\n            \n            \n                ChangeIdNodeComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/app/components/change-size-screen/change-size-screen.component.ts\n            \n            \n                component\n            \n            \n                ChangeSizeScreenComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/app/components/info/info.component.ts\n            \n            \n                component\n            \n            \n                InfoComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/app/components/matrix/matrix.component.ts\n            \n            \n                component\n            \n            \n                MatrixComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/components/message/message.component.ts\n            \n            \n                component\n            \n            \n                MessageComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/app/components/screen/screen.component.ts\n            \n            \n                component\n            \n            \n                ScreenComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/app/components/select/select.component.ts\n            \n            \n                component\n            \n            \n                SelectComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/app/contact/contact.component.ts\n            \n            \n                component\n            \n            \n                ContactComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/screenbox/screenbox.component.ts\n            \n            \n                component\n            \n            \n                ScreenboxComponent\n            \n            \n                21 %\n                (4/19)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
