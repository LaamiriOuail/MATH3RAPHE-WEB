var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["16.1.4","add","angular","applic","artifact","automat","build","capabl","chang","check","choic","cli","code","command","compon","dev","develop","directive|pipe|service|class|guard|interface|enum|modul","directori","dist","e2","end","execut","file","first","further","gener","go","help","http://localhost:4200","implement","index","karma","match","more","name","navig","need","new","ng","out","overview","packag","page","pfa","platform","project","readm","refer","reload","result","run","scaffold","serv","server","sourc","store","test","unit","us","version","via"],"overview.html":["1","19","4","5","browser","compon","inject","interfac","match","modul","out","overview","reset","result","support","svg","zoom"],"modules.html":["appmodul","brows","browser","match","modul","result","support","svg"],"modules/AppModule.html":["30","addnodecompon","addweightededgecompon","adja.compon","adja/graph","algorithmservic","angular/common","angular/common/http","angular/cor","angular/form","angular/platform","angular/servic","app","app.compon","appcompon","applic","appmodul","approutingmodul","assets/i18n","bootstrap","browser","browsermodul","changecolorcompon","changeidnodecompon","changesizescreencompon","class","color.compon","color/chang","come","commonmodul","components/add","components/chang","components/enumer","components/footer/footer.compon","components/graph","components/header/header.compon","components/info/info.compon","components/matrix/matrix.compon","components/message/message.compon","components/remov","components/screen/screen.compon","components/screenbox/screenbox.compon","components/select/select.compon","darkmodeservic","declar","dep","edg","edge.compon","edge/add","edge/remov","enabl","enumerationnodecompon","export","file","first","footercompon","formsmodul","function","graphefromedgeslistcompon","graphefrommatrixadjacompon","grapheservic","grapheservice,algorithmservice,saveuploadservice,darkmodeservic","headercompon","httpclient","httpclientmodul","httploaderfactori","httploaderfactory(http","id","import","info","infocompon","isdevmod","json","list.compon","list/graph","load","loader","match","matrix","matrixcompon","messagecompon","mode.servic","modul","new","ngmodul","ngx","node.compon","node/add","node/chang","node/enumer","node/remov","out","provid","regist","registerwhenstable:30000","registrationstrategi","removeedgecompon","removenodecompon","reset","result","return","routing.modul","saveuploadservic","screen.compon","screen/chang","screenboxcompon","screencompon","second","selectcompon","services/algorithm.servic","services/dark","services/graphe.servic","services/sav","servicework","serviceworkermodul","serviceworkermodule.register('ngsw","size","soon","sourc","src/app/app.module.t","stabl","support","svg","translat","translate/cor","translate/http","translatehttpload","translatehttploader(http","translateload","translatemodul","translatemodule.forroot","upload.servic","usefactori","weight","whichev","worker","worker.j","zoom"],"components/AddNodeComponent.html":["add","addnodecompon","angular","angular/cor","app","boolean","class","compon","component,input","constructor","constructor(graph","constructor(protect","contain","container:ani","data","default","descript","event","export","fals","field","file","flag","focu","focus","focus.set","form","graph","graphes:grapheservic","grapheservic","handler","id","import","indic","info","initi","input","inputtouch","inputtouched:boolean","instanc","match","metadata","method","new","node","node.component.css","node.component.html","node.component.t","node/add","nodeid","nodeid:ani","oninputfocu","param","paramet","parent","properti","receiv","repres","result","return","selector","set","sourc","src/app/components/add","src/app/services/graphe.servic","styleurl","templateurl","this.inputtouched=tru","touch","true","type","valu","void","whether"],"components/AddWeightedEdgeComponent.html":["ad","add","addweightededgecompon","angular","angular/cor","app","chang","changes.emit","class","compon","constructor","constructor(graph","constructor(protect","contain","data","descript","edg","edge.component.css","edge.component.html","edge.component.t","edge/add","emit","emitt","enter","event","eventemitt","export","field","file","form","graph","grapheservic","handler","import","info","initi","input","instanc","match","metadata","method","new","node","nodet","onweightformchang","output","param","paramet","parent","properti","receiv","repres","result","return","selector","sourc","src/app/components/add","src/app/services/graphe.servic","styleurl","target","templateurl","this.weight.emit(this.weightform","type","us","valu","void","weight","weightform"],"components/AppComponent.html":["angular/cor","app","app.component.css","app.component.html","appcompon","class","compon","constructor","constructor(priv","constructor(transl","darkmod","darkmodes:darkmodeservic","darkmodeservic","default","export","file","implement","import","info","match","metadata","mode.servic","ngoninit","ngx","oninit","pfa","properti","result","root","selector","services/dark","sourc","src/app/app.component.t","string","styleurl","templateurl","this.translate.setdefaultlang(\"en","this.translate.use(\"ar","this.translate.use(\"en","this.translate.use(\"fr","titl","translat","translate/cor","translateservic","translateservice,protect","valu","void"],"components/ChangeColorComponent.html":["angular","angular/cor","app","background","bgcolor","case","chang","changecolorcompon","class","color","color.component.css","color.component.html","color.component.t","color/chang","compon","constructor","constructor(graph","constructor(protect","contain","data","descript","direct","edg","export","fcolor","field","file","flesh","form","graph","grapheservic","import","info","initi","input","instanc","match","metadata","new","node","param","paramet","parent","properti","receiv","repres","result","selector","sourc","src/app/components/chang","src/app/services/graphe.servic","styleurl","templateurl","type"],"components/ChangeIdNodeComponent.html":["angular","angular/cor","app","chang","changeidnodecompon","class","compon","constructor","constructor(graph","constructor(protect","contain","data","descript","export","field","file","form","graph","grapheservic","id","import","info","initi","input","instanc","last","lastnodeid","match","metadata","new","newnodeid","node","node.component.css","node.component.html","node.component.t","node/chang","param","paramet","parent","properti","receiv","repres","result","selector","sourc","src/app/components/chang","src/app/services/graphe.servic","string","styleurl","templateurl","type","us"],"components/ChangeSizeScreenComponent.html":["angular","angular/cor","app","chang","changesizescreencompon","class","compon","constructor","constructor(graph","constructor(protect","contain","data","descript","export","field","file","form","graph","grapheservic","height","import","info","initi","input","instanc","localstorage.getitem('screenheight","match","metadata","new","param","paramet","parent","properti","receiv","repres","result","screen","screen.component.css","screen.component.html","screen.component.t","screen/chang","selector","size","sourc","src/app/components/chang","src/app/services/graphe.servic","styleurl","templateurl","type"],"components/EnumerationNodeComponent.html":["angular/cor","app","class","compon","component,input","constructor","constructor(graph","constructor(protect","contain","container:ani","enumer","enumerationnodecompon","export","file","graphes:grapheservic","grapheservic","import","info","input","match","metadata","node","node.component.css","node.component.html","node.component.t","node/enumer","result","selector","sourc","src/app/components/enumer","src/app/services/graphe.servic","styleurl","templateurl","type"],"components/FooterComponent.html":["angular/cor","app","class","compon","constructor","constructor(darkmod","constructor(protect","darkmodes:darkmodeservic","darkmodeservic","export","file","footer","footer.component.css","footer.component.html","footercompon","import","info","match","metadata","mode.servic","result","selector","services/dark","sourc","src/app/components/footer/footer.component.t","styleurl","templateurl"],"components/GrapheFromEdgesListComponent.html":["against","angular/cor","app","area","array","boolean","break","charact","check","class","compon","console.log","console.log(matchundirectedweighted[1","console.log(matchundirectedweighted[2","console.log(matchundirectedweighted[3","const","constructor","constructor(graph","constructor(protect","contain","container:ani","containsinvalidcharact","containsinvalidcharacters(inputstr","containsinvalidcharacters(inputstring:str","d","defin","direct","e.g","edg","edges.push(edg","edges:array","element","error","export","express","extend","fals","file","firsttype:string=edges[0]?.typ","format","given","graph","graphefromedgeslistcompon","graphes:grapheservice,protect","grapheservic","handl","if(edge.type!=firsttyp","if(firsttyp","if(lines.length==0","if(this.issametypegraphe(this.parseextendedformat","import","info","inform","input","inputstr","instanc","interfac","invalid","invalidcharacterspattern","invalidcharacterspattern.test(inputstr","issametypegraph","issametypegraphe(edg","issametypegraphe(edges:array","issametypegraphe:boolean=tru","issametypegraphe=fals","iunweightededgetyp","iweightededgetyp","iweightededgetyped|iunweightededgetyped|nul","languag","line","line.match(/\\","list","list.component.css","list.component.html","list.component.t","list/graph","listedgetextarea","listedgetextarea:str","local","match","matchdirect","matchdirected[1].trim","matchdirected[2].trim","matchdirectedweight","matchdirectedweighted[1].trim","matchdirectedweighted[3].trim","matchundirect","matchundirected[1].trim","matchundirected[2].trim","matchundirectedweight","matchundirectedweighted[1].trim","matchundirectedweighted[3].trim","memberof","metadata","method","mismatch","ngx","node","null","number","number(matchdirectedweighted[2","number(matchundirectedweighted[2","object","ok","oper","otherwis","param","paramet","parent","pars","parseedg","parseedge(lin","parseedge(line:string):iweightededgetyped|iunweightededgetyped|nul","parseextendedformat","parseextendedformat():array","pattern","properti","regular","relat","repres","result","return","s","s*>\\","same","selector","send","sendel","sendelements():ani","singl","sourc","src/app/components/graph","src/app/services/graphe.servic","string","styleurl","target","templateurl","test","text","this.container.message=this.translate.instant(\"graphefromedgelist.msg1","this.container.message=this.translate.instant(\"graphefromedgelist.msg2","this.container.message=this.translate.instant(\"graphefromedgelist.msg3","this.containsinvalidcharacters(edge?.sourc","this.listedgetextarea.split('\\n","this.parseedge(lin","this.parseextendedformat","translat","translate/cor","translate:translateservic","translateservic","true","type","undirect","unweight","valid","weight"],"components/GrapheFromMatrixAdjaComponent.html":["0","2d","addgraphewithmatrix.style.display=\"non","addgraphewithmatrix=this.container.el.nativeelement.queryselector('.addgraphewithmatrix","adja","adja.component.css","adja.component.html","adja.component.t","adja/graph","adjac","adjacencymatrix","angular/cor","app","array","array.isarray(matrix","arraynemming=this.graphes.alphabet","arraynemming=this.graphes.numbersarray","base","boolean","buttonmanupilation.style.display=\"block","buttonmanupilation=this.container.el.nativeelement.queryselector('.buttonmanupil","can't","check","class","column","compar","compon","const","constructor","constructor(graph","constructor(protect","contain","container:ani","creat","creategraphel","creategraphelements(adjacencymatrix","each","edg","element","elements:array=this.creategraphelements(adjacencymatrix","empti","err:boolean=fals","err=tru","export","fail","fals","file","flag","format","gener","generategraph","graph","graphefrommatrixadjacompon","graphes:grapheservice,protect","grapheservic","handl","if(!err","if(adjacencymatrix","if(this.container.nodename==\"alphab","if(this.container.nodename==\"numeriqu","import","indic","info","initi","input","instanc","interfac","isdirect","issquar","issymmetr","issymmetric(matrix","issymmetric(matrix:array","isweight","isweighted(adjacencymatrix","isweighted(adjacencymatrix:array>):boolean","iunweightededg","iweightededg","languag","lead","local","match","matrix","matrix.length","matrix:ani","matrix[0].length","matrixtext","matrixtext.length","matrixtext.split('\\n","matrixtext.trim","matrixtext:str","memberof","metadata","method","newlin","ngx","node","number","numcol","numrow","object","oper","otherwis","param","paramet","pars","parseadjacencymatrix","parseadjacencymatrix(matrixtext","parseadjacencymatrix(matrixtext:string):ani","properti","provid","relat","remov","repres","result","return","row","row.trim().split(/\\s+/).map(numb","rowindex:ani","rows.length","rows.map((row:ani","screen.style.display=\"block","screen=this.container.el.nativeelement.queryselector('.screen","selector","sourc","split","squar","src/app/components/graph","src/app/services/graphe.servic","string","styleurl","symmetr","target","templateurl","text","this.container.changeselect","this.container.message=this.translate.instant(\"graphefrommatrix.msg4","this.container.message=this.translate.instant('graphefrommatrix.msg2","this.container.restorearray","this.graphes.creategraphefromadjancymatrix(elements,!this.issymmetric(adjacencymatrix),this.isweighted(adjacencymatrix),this.contain","this.issymmetric(adjacencymatrix","this.isweighted(adjacencymatrix","this.matrixtext","this.parseadjacencymatrix(this.matrixtext","trail","translat","translate/cor","translate:translateservic","translateservic","true","type","undirect","unweight","valid","valu","values.length","void","weight","weighted:boolean=fals","whitespac"],"components/HeaderComponent.html":["angular/cor","app","changelanguag","changelanguage(ev","class","compon","constructor","constructor(darkmod","constructor(protect","darkmodes:darkmodeservice,priv","darkmodeservic","export","file","header","header.component.css","header.component.html","headercompon","implement","import","info","lang","lang:str","match","metadata","method","mode.servic","ngoninit","ngx","oninit","properti","result","return","selector","services/dark","sourc","src/app/components/header/header.component.t","string","styleurl","templateurl","this.darkmodes.toggledarkmod","this.lang=\"en","this.translate.use(event.target.valu","toggledarkmod","toggledarkmode():void","translat","translate/cor","translate:translateservic","translateservic","void"],"components/InfoComponent.html":["algo","algorithm","algos:ani","angular","angular/cor","app","class","compon","constructor","contain","data","descript","display","export","file","graph","graphes:ani","import","info","info.component.css","info.component.html","infocompon","inform","initi","input","instanc","match","metadata","new","parent","properti","receiv","relat","result","selector","sourc","src/app/components/info/info.component.t","styleurl","templateurl","type"],"components/MatrixComponent.html":["angular","angular/cor","app","class","compon","constructor","constructor(el","constructor(priv","contain","container:ani","darkmod","darkmodes:darkmodeservic","darkmodeservic","descript","display","el:elementref,protect","elementref","export","file","graph","graphes:grapheservice,protect","grapheservic","import","info","initi","input","instanc","match","matrix","matrix.component.css","matrix.component.html","matrixcompon","metadata","mode.servic","new","result","selector","sourc","src/app/components/matrix/matrix.component.t","src/app/services/dark","src/app/services/graphe.servic","styleurl","templateurl","type"],"components/MessageComponent.html":["0.7","1","103","2","20","50","adjust","angular","angular/cor","app","base","box'","call","chang","class","compon","const","constructor","constructor(darkmod","constructor(protect","contain","darkmod","darkmodeservic","data","descript","display","elementref","export","file","graph","grapheservic","height","hook","implement","import","info","initi","input","instanc","length","lifecycl","match","messag","message.component.css","message.component.html","messagecompon","metadata","method","mode.servic","msgbox","msgbox.style.height","msgboxc","msgboxc.style.height","new","ngonchanges(chang","onchang","onmessagelengthchang","param","paramet","parent","properti","protect","px","receiv","repres","result","return","selector","simplechang","sourc","src/app/components/message/message.component.t","src/app/services/dark","src/app/services/graphe.servic","string","styleurl","templateurl","this.container.el.nativeelement.queryselector('#msgbox","this.container.el.nativeelement.queryselector('.msgboxc","this.message.length","this.onmessagelengthchang","type","void"],"components/RemoveEdgeComponent.html":["angular/cor","app","class","compon","constructor","constructor(graph","constructor(protect","contain","container:ani","edg","edge.component.css","edge.component.html","edge.component.t","edge/remov","export","file","graphes:grapheservic","grapheservic","import","info","input","match","metadata","properti","remov","removeedgecompon","result","selector","sourc","sourceid","src/app/components/remov","src/app/services/graphe.servic","string","styleurl","targetid","templateurl","type"],"components/RemoveNodeComponent.html":["angular/cor","app","class","compon","component,input","constructor","constructor(graph","constructor(protect","contain","container:ani","export","file","graphes:grapheservic","grapheservic","import","info","input","match","metadata","node","node.component.css","node.component.html","node.component.t","node/remov","nodeid","nodeid:str","properti","remov","removenodecompon","result","selector","sourc","src/app/components/remov","src/app/services/graphe.servic","string","styleurl","templateurl","type"],"components/ScreenComponent.html":["angular","angular/cor","app","class","compon","constructor","constructor(darkmod","constructor(protect","darkmod","darkmodeservic","descript","display","export","file","import","info","initi","instanc","main","match","metadata","mode.servic","new","param","paramet","result","screen","screen.component.css","screen.component.html","screencompon","selector","sourc","src/app/components/screen/screen.component.t","src/app/services/dark","styleurl","templateurl"],"components/ScreenboxComponent.html":["0","70","action","add","algo","algorithm","algorithm:str","algorithmservic","algos:algorithmservice,protect","angular","angular/cor","app","assign","box","button","buttonclick","buttonclicked:str","call","chang","changeselect","changeselect:str","chngetypegraph","chngetypegraphe(data","chngetypegraphe(data:str","class","click","compon","constructor","constructor(el","constructor(priv","contain","containerheight","containerheight:number=70;//height","darkmod","darkmodes:darkmodeservic","darkmodeservic","data","default","descript","destroy","edg","el","elementref","elementref,protect","event","event.target.id","export","file","generatepdfservic","get","getbuttonclickedid","getbuttonclickedid(ev","graph","graphes:grapheservice,protect","grapheservic","handl","hook","id","implement","import","info","initi","instanc","lifecycl","match","messag","message:str","metadata","method","mode.servic","msg","new","newweight","ngondestroy","ngoninit","ngx","node","nodeid","nodeid:number=0;//incr","nodeidchang","nodeidchanged:ani","nodenam","nodename:string=\"numeriqu","nodenamingmethod","nodenamingmethode:str","number","numeriqu","ondestroy","oninit","oninit,ondestroy","onweightchang","onweightchange(newweight","output","param","paramet","pdf.servic","privat","properti","relev","remov","remove:str","repres","restorearray","restorearray:array","result","return","saveupload","saveupload:str","saveuploads:saveuploadservice,protect","saveuploadservic","screen","screenbox","screenbox.component.css","screenbox.component.html","screenboxcompon","selectednod","selectednode:array","selector","services/algorithm.servic","services/dark","services/gener","services/graphe.servic","services/sav","sourc","src/app/components/screenbox/screenbox.component.t","string","styleurl","target","templateurl","this.buttonclick","this.graphes.onchangebuttonclicked(thi","this.graphes.ondestroy","this.graphes.onedgetap(thi","this.graphes.oninit(thi","this.graphes.onnodetap(thi","this.graphes.onscreentap(thi","this.graphes.resetcolor","this.typegraphe=data","this.weight=newweight","translat","translate/cor","translate:translateservice,protect","translateservic","trigger","type","typegraph","upload.servic","valu","value(app","void","weight","weight?:numb"],"components/SelectComponent.html":["angular/cor","app","class","class:str","compon","component,eventemitter,input","contain","container:ani","disablelabel","disablelabell:str","event","eventemitt","export","file","functionhandl","functionhandler:ani","import","info","input","item","items:array","match","metadata","method","new","onchang","onchange():void","output","properti","result","return","select","select.component.css","select.component.html","selectcompon","selected:eventemitt","selectednew","selectednew:str","selector","sourc","src/app/components/select/select.component.t","string","styleurl","templateurl","this.selected.emit(this.selectednew","type","void"],"injectables/AlgorithmService.html":["0","0123456789abcdef","0]==\"direct","0]==\"undirect","1","10","1]==\"weight","2","2000","a.data('weight","affich","algorithm","algorithmservic","allpositive:boolean=tru","angular/cor","anim","any,time:number=2000","array","arrow","astaranim","astaranimation(contain","astaranimation(container:any):void","b.data('weight","b:ani","background","backgroundcolor","backgroundcolor:str","bellman","bellmanford","bellmanford.distanceto(targetnod","bellmanford.pathto(targetnod","bellmanfordalgorithm","bellmanfordalgorithm(rootnodeid","bellmanfordanim","bellmanfordanimation(rootnodeid","bf","bfs(node","bfs(node:any,visitednodes:any):void","bfs:any=container.graphes.cy.elements().bf","bfsanim","bfsanimation(rootnodeid","boolean","border","breadth","break","chang","changealgorithm","changealgorithm(contain","changealgorithm(container:any):void","check","chemin","class","color","color':backgroundcolor","color:str","complet","compon","component.edges().styl","component.nodes().foreach((node:ani","component.nodes().styl","connect","const","constructor","constructor(priv","constructor(transl","contain","container'","container.algorithm","container.algorithm==\"dijkstraab","container.algorithm==\"prim","container.buttonclick","container.changeselect","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formaddnod","container.el.nativeelement.queryselector('.formchangecolor","container.el.nativeelement.queryselector('.formremoveedg","container.el.nativeelement.queryselector('.formremovenod","container.graphes.background_color_nod","container.graphes.background_color_node,container.graphes.color_nod","container.graphes.background_color_node_algo","container.graphes.background_color_node_algo,container.graphes.color_node_algo,++i*2000","container.graphes.background_color_node_algo,container.graphes.color_node_algo,i++*2000","container.graphes.background_color_node_algo,container.graphes.color_node_algo,i++*tim","container.graphes.background_color_node_algo,container.graphes.color_node_algo,j","container.graphes.changecoloredge(edge,container.graphes.data_edge_color_algo,container.graphes.color_line_edge_algo,container.graphes.target_arrow_color_algo,j=++i*2000","container.graphes.changecoloredge(pathtotarget.edges()[k],container.graphes.data_edge_color_algo,container.graphes.color_line_edge_algo,container.graphes.target_arrow_color_algo,i*2000","container.graphes.changecoloredge(pathtotarget.edges()[k],container.graphes.data_edge_color_algo,container.graphes.color_line_edge_algo,container.graphes.target_arrow_color_algo,i*tim","container.graphes.changecolornode(edge.sourc","container.graphes.changecolornode(edge.target","container.graphes.changecolornode(nod","container.graphes.changecolornode(pathtotarget.nodes()[k","container.graphes.changecolornode(targetnod","container.graphes.ci","container.graphes.color_line_edge_algo","container.graphes.color_nod","container.graphes.cy.$(`#${rootnodeid","container.graphes.cy.$(`#${targetnodeid","container.graphes.cy.edges().foreach((edge:ani","container.graphes.cy.edges().toarray","container.graphes.cy.elements().bellmanford","container.graphes.cy.elements().df","container.graphes.cy.elements().dijkstra","container.graphes.cy.nodes().first","container.graphes.cy.nodes().foreach((node:ani","container.graphes.cy.nodes().length","container.graphes.cy.nodes().s","container.graphes.data_edge_color_algo","container.graphes.posit","container.graphes.resetcolor","container.graphes.target_arrow_color_algo","container.graphes.typegraphe.split","container.messag","container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1","container.message+=messag","container.message=\"kruskal(mst","container.message=\"prime(mst","container.message=container.translate.instant(\"algos.msg10","container.message=container.translate.instant(\"algos.msg11","container.message=container.translate.instant(\"algos.msg12","container.message=container.translate.instant(\"algos.msg8","container.message=lastmessag","container.message=this.translate.instant(\"algos.msg14","container.message=this.translate.instant(\"algos.msg7\",{algorithm:container.algorithm","container.message=this.translate.instant(\"screenbox.msg23","container.remov","container.saveupload","container.selectednod","container.typegraphe.split","creat","currentnod","currentnode.neighborhood().nod","cy","cy.elements().floydwarshal","cy.nodes().foreach((nodea","cy.nodes().foreach((nodeb","d'anim","de","delay","depth","depth:ani","descript","df","dfsanim","dfsanimation(rootnodeid","dijkstra","dijkstra'","dijkstra.distanceto(container.graphes.cy.$(`#${targetnodeid","dijkstra.distanceto(targetnod","dijkstra.pathto(container.graphes.cy.$(`#${targetnodeid","dijkstra.pathto(targetnod","dijkstraalgorithm","dijkstraalgorithm(rootnodeid","dijkstraanim","dijkstraanimation(rootnodeid","direct","directed:direct","directed=fals","directed=tru","distanc","distancetotarget","dri","délai","e","e.style('color","e.style('lin","e.style('target","e:ani","edg","edge.data('weight","edge.data('weight')||1","edge.source().id","edge.target().id","edge:ani","edges.sort((a:ani","est","export","fals","file","find","first","fleshcolor","fleshcolor:string=this.getrandomcolor","floyd","floydwarshal","floydwarshall.distance(nodea","floydwarshall.path(nodea","floydwarshallalgorithm","floydwarshallalgorithm(contain","for(i=0;i","for(let","ford","formachangesizescreen","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","formaddnod","formaddnode.style.display=\"non","format","formchangecolor","formchangecolor.style.display=\"non","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","formremoveedg","formremoveedge.style.display=\"non","formremovenod","formremovenode.style.display=\"non","function","gener","getrandomcolor","getrandomcolor():str","given","graph","hexadecim","i*2000","i*20000","i*tim","i:ani","i:number=0","i:number=0;i","i=0","id","if(!container.graphes.cy.nodes().length","if((container.algorithm==\"dijkstra","if(container.algorithm==\"bf","if(container.algorithm==\"df","if(container.algorithm==\"floydwarshal","if(container.algorithm==\"krusk","if(container.algorithm==\"tarjan","if(container.graphes.cy?.nodes().length","if(container.typegraph","if(container.typegraphe.split","if(edge.data('weight","if(i!=components.length","if(i!=container.graphes.cy.nodes().length","if(i/2!=container.graphes.cy.nodes().length","if(k!=pathtotarget.nodes().length","if(this.isgraphconnected(container)==tru","import","infin","info","inject","instanc","isalledgeposit","isalledgepositive(contain","isalledgepositive(container:any):boolean","isgraphconnect","isgraphconnected(contain","isgraphconnected(container:any):boolean","j","j:number=0","j=i","k:number=0;k","kruskal'","kruskalanim","kruskalanimation(contain","kruskalanimation(container:any):void","l'arbr","lastmessag","lastmessage:str","le","letters:str","line","lorsqu","mark","match","messag","message+=node.data('id","message.length","message=message.substring(0","message=this.translate.instant(\"algos.msg13\",{index:++i","method","minim","minimum","minimumspanningtreeedg","minimumspanningtreeedges(contain","minimumspanningtreeedges(container:ani","neighbor","neighbors.foreach((neighbor:ani","new","ngx","node","node.data('id","node.id","nodea.id","nodeb","nodeb.id","nodeid","number","nœud","object","otherwis","pair","param","paramet","path","path:str","path[v.id","pathnod","pathnodes.join","pathstr","pathtonodeb","pathtonodeb.nodes().map((nod","pathtotarget","pathtotarget.nodes().map((nod","pathtotarget.nodes().map((node:ani","perform","poid","posit","pour","prim'","primeaniamant","primeaniamantion(contain","primeaniamantion(container:any):void","print","printpath","printpath(rootnodeid","provid","providedin","queue","queue.length","queue.push(neighbor","queue.shift","random","randomli","result","return","root","rootnodeid","rootnodeid,targetnodeid,pathstring,distancetotarget","rootnodeid=nodea.data(\"id","screenboxcompon","search","select","servic","set","settimeout","shortest","sont","sourc","sourceid:ani","space:str","span","src/app/services/algorithm.service.t","start","startnod","stocker","store","string","string,container:ani","strongli","style","target","targetid:ani","targetnod","targetnodeid","targetnodeid=nodeb.data(\"id","tarjan'","tarjanstronglycomponentanim","tarjanstronglycomponentanimation(contain","this.bfs(startnode,visitednod","this.floydwarshallalgorithm(contain","this.getrandomcolor","this.isalledgepositive(contain","this.kruskalanimation(contain","this.minimumspanningtreeedges(container).foreach((edge:ani","this.primeaniamantion(contain","this.printpath(rootnodeid","this.tarjanstronglycomponentanimation(contain","this.translate.instant(\"algos.msg3\",{rootnodeid,targetnodeid,pathstring,distancetotarget","this.translate.instant(\"algos.msg5","this.translate.instant(\"algos.msg6\",{rootnodeid","this.translate.instant('algos.msg1","this.translate.instant('algos.msg2","this.translate.instant('algos.msg4","time","tou","track","translat","translate/cor","translateservic","tree","treeedg","treeedges.length","treeedges.push(edg","treenod","treenodes.add(sourceid","treenodes.add(targetid","treenodes.has(sourceid","treenodes.has(targetid","true","u","u.id","u.style('background","u.style('color","u:ani","updat","us","v","v.id","v.id(),contain","v.style('background","v.style('color',container.graphes.color_node_algo","v:ani","var","visit","visited.length","visited.push(v.id","visited:array","visitednod","visitednodes.add(neighbor.id","visitednodes.add(node.id","visitednodes.has(neighbor.id","visitednodes.s","visité","visual","void","warshal","weight","weighta","weightb"],"injectables/DarkModeService.html":["angular/cor","boolean","class","constructor","current","dark","darkmodeservic","descript","disabl","enabl","export","file","import","indic","info","initi","inject","instanc","isdarkmod","isdarkmode:boolean","local","localstorage.getitem('darkmod","localstorage.setitem('darkmod","manag","match","method","mode","mode.service.t","new","properti","providedin","result","return","root","servic","set","sourc","src/app/services/dark","state","storag","store","this.isdarkmod","this.isdarkmode.tostr","toggl","toggledarkmod","true","type","updat","versa","versa.upd","vice","void","whether"],"injectables/GrapheService.html":["0","0]!=\"direct","0]==\"direct","0]==\"undirect","1","10","105},{x","106","108","1154","12","121.28128725008331","1221","1227","133},{x","144},{x","165},{x","173},{x","174","174},{x","178},{x","1]==\"unweight","1]==\"weight","2","2)||400","2*this.cy.edges().length)/(this.cy.nodes().length*(this.cy.nodes().length","200},{x","211},{x","217},{x","227},{x","239},{x","23},{x","241","24},{x","26","261","263.51311061937736","264},{x","274},{x","276","287},{x","295","299},{x","2d","3","301","314},{x","319","323","323},{x","350","351","353},{x","378","380","382","4","400+'px';//default","41},{x","43},{x","46},{x","47},{x","48","493","49},{x","530","533","541","577","592","5},{x","617","702","719","73","736","739","772","82","835","845","875","87},{x","88","885","887","919","958","970","98","_","action","ad","add","addgraphefromedgeslist.style.display=\"block","addgraphefromedgeslist.style.display=\"non","addgraphefromedgeslist=container.el.nativeelement.queryselector('.addgraphefromedgeslist","addgraphewithmatrix.style.display=\"block","addgraphewithmatrix.style.display=\"non","addgraphewithmatrix=container.el.nativeelement.queryselector('.addgraphewithmatrix","addit","addnod","addnode(contain","addnode(container:any,container2:any):void","addnodecompon","addweightededg","addweightededge(contain","addweightededge(container:any,container2:any):void","addweightededgecompon","adjac","adjacencylist","adjacencylist.push(adjacencylistentri","adjacencylist:array","adjacencylistentri","adjacencymatrix:array","adjacentnod","adjanstr","adjanstring+=`${adjnode[i","adjanstring+=`${elements[i","adjanstring:str","adjnod","adjnode.filter(item","adjnode.length","adjnode:array=outgoingedges.map((edge:ani","algorithm","alphabet","alphabets0","alreadi","angular/cor","anim","anoth","appli","array","array.from","array.from(array(200","arrow","associ","background","background_color_nod","background_color_node_algo","base","befor","between","bezier","bgcolor","black","block","blue","boolean","boolean=fals","break","button","buttonmanupilation.style.display=\"block","buttonmanupilation.style.display=\"non","buttonmanupilation=container.el.nativeelement.queryselector('.buttonmanupil","calcul","case","cell","chang","changechang","changechanges(contain","changechanges(container:ani","changecolor","changecolor(contain","changecolor(container:any,container2:ani","changecolorcompon","changecoloredg","changecoloredge(edg","changecoloredge(edge:any,color:string,lineedgecolor:string,targetarrowcolor:string,time:number=10","changecolornod","changecolornode(nod","changecolornode(node:any,bgcolor:string,color:string,time:number=10","changeidnodecompon","changenodeenum","changenodeenum(contain","changenodeenum(container:any):void","changenodeid","changenodeid(contain","changenodeid(container:any,container2:any):void","changesizescreen","changesizescreen(contain","changesizescreen(container:any,container2:any):void","changesizescreencompon","changestylegraph","changestylegraphe(typegraph","changestylegraphe(typegraphe:string):void","changetypegraph","changetypegraphe(contain","changetypegraphe(container:any):void","charact","check","class","cleanup","click","code","color","color',bgcolor","color',lineedgecolor","color',this.background_color_nod","color',this.color_line_edg","color_line_edg","color_line_edge_algo","color_nod","color_node_algo","column","compon","condit","const","constant","constructor","constructor(priv","constructor(transl","contain","container.algorithm","container.buttonclick","container.buttonclicked===\"addvertic","container.changeselect","container.changeselect==\"changecoloredg","container.changeselect==\"changecoloredgesalgo","container.changeselect==\"changecolornodesalgo","container.changeselect==\"changecolorscreen","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formaddnod","container.el.nativeelement.queryselector('.formchangecolor","container.el.nativeelement.queryselector('.formremoveedg","container.el.nativeelement.queryselector('.formremovenod","container.graphes.posit","container.message+=this.translate.instant(\"graphes.msg18","container.message+=this.translate.instant(\"graphes.msg19","container.message=this.translate.instant(\"graphefromedgelist.msg1","container.message=this.translate.instant(\"graphefromedgelist.msg6\");///////chang","container.message=this.translate.instant(\"graphefromedgelist.msg7","container.message=this.translate.instant(\"graphefrommatrix.msg5","container.message=this.translate.instant(\"graphefrommatrix.msg6","container.message=this.translate.instant(\"graphefrommatrix.msg6\");///////////////////////chng","container.message=this.translate.instant(\"graphes.msg1","container.message=this.translate.instant(\"graphes.msg10\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg11\",{sourceid:edge.source().id(),targetid:edge.target().id","container.message=this.translate.instant(\"graphes.msg12\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg17","container.message=this.translate.instant(\"graphes.msg2","container.message=this.translate.instant(\"graphes.msg22","container.message=this.translate.instant(\"graphes.msg23","container.message=this.translate.instant(\"graphes.msg24","container.message=this.translate.instant(\"graphes.msg25\",{last:container.selectednode[0],new:container2.newnodeid","container.message=this.translate.instant(\"graphes.msg26","container.message=this.translate.instant(\"graphes.msg27","container.message=this.translate.instant(\"graphes.msg28","container.message=this.translate.instant(\"graphes.msg29","container.message=this.translate.instant(\"graphes.msg3","container.message=this.translate.instant(\"graphes.msg30","container.message=this.translate.instant(\"graphes.msg31","container.message=this.translate.instant(\"graphes.msg32","container.message=this.translate.instant(\"graphes.msg33","container.message=this.translate.instant(\"graphes.msg34","container.message=this.translate.instant(\"graphes.msg35","container.message=this.translate.instant(\"graphes.msg36","container.message=this.translate.instant(\"graphes.msg37\",{height:container2.height","container.message=this.translate.instant(\"graphes.msg38","container.message=this.translate.instant(\"graphes.msg39","container.message=this.translate.instant(\"graphes.msg4","container.message=this.translate.instant(\"graphes.msg40","container.message=this.translate.instant(\"graphes.msg41","container.message=this.translate.instant(\"graphes.msg43","container.message=this.translate.instant(\"graphes.msg44","container.message=this.translate.instant(\"graphes.msg45","container.message=this.translate.instant(\"graphes.msg46","container.message=this.translate.instant(\"graphes.msg47\",{source:container2.sourceid,target:container2.targetid","container.message=this.translate.instant(\"graphes.msg48\",{source:container2.sourceid,target:container2.targetid","container.message=this.translate.instant(\"graphes.msg49","container.message=this.translate.instant(\"graphes.msg50","container.message=this.translate.instant(\"graphes.msg51","container.message=this.translate.instant(\"graphes.msg52\",{nodeid:container2.nodeid","container.message=this.translate.instant(\"graphes.msg53\",{nodeid:container2.nodeid","container.message=this.translate.instant(\"graphes.msg54\",{nodeid:element.data('id","container.message=this.translate.instant(\"graphes.msg55\",{nodeid:element.data('id","container.message=this.translate.instant(\"graphes.msg56\",{source:element.source().id(),target:element.target().id","container.message=this.translate.instant(\"graphes.msg57\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight","container.message=this.translate.instant(\"graphes.msg58\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight","container.message=this.translate.instant(\"graphes.msg59\",{source:element.source().id(),target:element.target().id","container.message=this.translate.instant(\"graphes.msg60","container.message=this.translate.instant(\"graphes.msg7\",{selectednode1:container.selectednode[0],selectednode2:container.selectednode[1],weight:container.weight","container.message=this.translate.instant(\"graphes.msg8","container.message=this.translate.instant(\"graphes.msg9","container.message=this.translate.instant(\"screenbox.msg23","container.message=this.translate.instant('graphes.msg23","container.message=this.translate.instant('screenbox.msg41","container.nodeidchanged=container2.newnodeid","container.nodename=\"numeriqu","container.remov","container.remove==\"remov","container.restorearray","container.restorearray.push(elem","container.saveupload","container.selectednod","container.selectednode.push(node.data('id","container.typegraphe=this.typegraphe=\"direct","container.typegraphe=this.typegraphe=\"undirect","container.typegraphe=this.typegraphe=cytyp","container.typegraphe=this.typegraphe=typegraph","container.weight=nul","container2","container2.height+'px","container2.height=screen.style.height","container2.height=screen.style.height.slice(0","container2.listedgetextarea","container2.matrixtext","container2.newnodeid","container2.newnodeid=nul","container2.nodeid","container2.nodeid=nul","container2.sourceid","container2.targetid","container2.weightform=nul","correspond","counter","creat","creategraphefromadjancymatrix","creategraphefromadjancymatrix(el","creategraphefromadjancymatrix(elements:any,directed:boolean,weighted:boolean,container:any):void","creategraphefromlistedg","creategraphefromlistedges(contain","creategraphefromlistedges(container:any,container2:any):void","curv","cy","cyelements:any=this.cy.el","cytoscap","cytype:string=this.typegraph","data","data(weight","data_edge_color","data_edge_color_algo","default","degre","degree:node.degre","delay","delet","densiti","descript","destroy","destroyed.destroy","direct","doesn't","dri","e.g","edg","edge.data(\"weight","edge.data(\"weight\")==element.weight","edge.data('weight","edge.remov","edge.sourc","edge.source().id","edge.source().id()==container2.targetid","edge.source().id()==node2","edge.source().id()},${this.translate.instant(\"info.t","edge.style('color',color","edge.style('color',this.data_edge_color","edge.style('lin","edge.style('target","edge.target","edge.target().id","edge.target().id()==container2.targetid","edge.target().id()==container2.targetid)||(edge.target().id()==container2.sourceid","edge.target().id()==element.sourc","edge.target().id()==node1","edge.target().id()==node2","edge:ani","edge=el","edge=this.cy.add","edgei:ani","edgei=edg","edges.foreach((edge:ani","edges.push(edgetext","edges:array","edgesourceid","edgetargetid","edgetext:str","edgetext=`${edge.source().id","elem:ani","elem=container.restorearray.pop","elem={status:\"add\",element:edg","elem={status:\"add\",element:nod","elem={status:\"add\",element:nodenew","elem={status:\"remove\",element:edg","elem={status:\"remove\",element:edgei","elem={status:\"remove\",element:nod","element","element+=`,${this.translate.instant(\"info.w","element.id","element.isedg","element.remov","element.sourc","element.source().id()==node.id","element.target","element.target().id()==node.id","element.weight","element:string=`(${this.translate.instant(\"info.","element=elem.el","elements.filter(item","elements.foreach((element:ani","elements:any=container2.sendel","elements:array=incomersedges.map((edge:ani","elements[i","empti","enumer","err:boolean=fals","err=tru","event","evt.cyposit","evt.posit","evt.target","evt:ani","exist","exist:boolean=fals","exist:boolean=node.isnod","exist=tru","export","file","find","first","follow","for(let","form","formachangesizescreen","formachangesizescreen.style.display=\"block","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","formaddedge.style.display='non","formaddnod","formaddnode.style.display=\"block","formaddnode.style.display=\"non","formaddnode=container.el.nativeelement.queryselector('.formaddnod","format","formchangecolor","formchangecolor.style.display=\"block","formchangecolor.style.display=\"non","formchangenodeid.style.display","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","formremoveedg","formremoveedge.style.display=\"block","formremoveedge.style.display=\"non","formremovenod","formremovenode.style.display=\"block","formremovenode.style.display=\"non","found","gener","getadjancylist","getadjancylist():array","getdegreenod","getdegreenodes():array","getdensityofgraph","getdensityofgraphe():numb","getedgeid","getedgeids():array","getlisteofedg","getlisteofedge():str","getlistofnod","getlistofnode():str","getnodeid","getnodeids():array","given","graph","graphefromedgeslistcompon","graphefrommatrixadjacompon","grapheservic","group","handl","haystack","here","i:number=0","i:number=0;i","id","id:node.data('id","idexists=fals","idexists=tru","if(!container.restorearray.length","if(!err","if(!exist","if(!nodeexist","if(!nodeexists1","if((edge.source().id()==container2.sourceid","if((edge.source().id()==node1","if(adjanstr","if(adjanstring.slic","if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixadjancy\"&&container.algorithm!=\"matrixincident\"&&container.algorithm!=\"listeadj","if(container.buttonclicked==\"addedg","if(container.buttonclicked==\"addvertic","if(container.buttonclicked==\"default","if(container.buttonclicked==\"restor","if(container.buttonclicked===\"addedg","if(container.changeselect==\"addgraphefromedgeslist","if(container.changeselect==\"addgraphefrommatrix","if(container.changeselect==\"changecoloredg","if(container.changeselect==\"changecoloredgesalgo","if(container.changeselect==\"changecolornod","if(container.changeselect==\"changecolornodesalgo","if(container.changeselect==\"changecolorscreen","if(container.changeselect==\"changeidnod","if(container.changeselect==\"changesizescreen","if(container.changeselect===\"changeidnod","if(container.nodename!=\"customtext","if(container.nodename==\"alphab","if(container.nodename==\"customtext","if(container.nodename==\"numeriqu","if(container.remove==\"remov","if(container.remove==\"reset","if(container.remove==\"speci","if(container.restorearray.length!=0","if(container.selectednode.length","if(container.selectednode.length!=0","if(container.typegraph","if(container.weight!=0","if(container2.height","if(container2.nodeid","if(direct","if(edge.source().id()==container2.sourceid","if(edge.source().id()==element.target","if(el","if(elem.status==\"add","if(element.id","if(element.isnod","if(element.sourc","if(element.source().id()==adjnode[i","if(element.target","if(element.target().id()==adjnode[i","if(exist","if(i!=adjnode.length","if(i!=elements.length","if(i!=this.cy?.edges().length","if(i!=this.cy?.nodes().length","if(i==0","if(idexists==fals","if(node.data('id')==container2.newnodeid","if(node.data('id')==container2.nodeid","if(node.data('id')==this.alphabets[0","if(node.data('id')==this.counter+1","if(sourceindex==targetindex","if(this.cy.nodes().length","if(this.cy.nodes().length==0","if(this.typegraph","if(this.typegraphe.split","if(typegraphe.split","if(typegraphe==\"direct","if(typegraphe==\"undirect","if(weight","import","incid","incidencematrix","incidencematrix():array","incidencematrix:array","incidencematrix[sourceindex][edgeindex","incidencematrix[targetindex][edgeindex","includ","incomersedg","indegree:node.indegre","indic","info","initi","initiali","inject","instanc","interact","interfac","internation","iposit","isedgeremov","isedgeremove(node1","item","label","layout","length","letter","line","linecolor","lineedgecolor","list","listen","listofedg","listofedge+=el","listofedge:str","listofnod","listofnode+=`${node.data(\"id","listofnode:str","localstorage.setitem(\"screencolor\",screen.style.backgroundcolor.tostr","localstorage.setitem('screenheight","log","logic","lowercas","made","manag","margin","match","matrix","matrixadj","matrixadjancy():array","messag","met","method","name","need","new","ngx","node","node.id","node.incom","node.outgo","node.position('i","node.position('x'),i","node.remov","node.style('background","node.style('color',color","node.style('color',this.color_nod","node1","node2","node:ani","node:any=this.cy.getelementbyid(container2.nodeid","node=this.cy.add","nodeexist","nodeexists1","nodenew.id","nodenew=this.cy.add","nodes.indexof(sourcenod","nodes.indexof(targetnod","nodes.length","nodes.push(node.data('id","nodes:array","nodesdegr","nodesdegre.push(obj","nodesdegre:array","none","null","number","numbersarray","numbersarray:numb","numnod","obj","obj:ani","object","onchangebuttonclick","onchangebuttonclicked(contain","onchangebuttonclicked(container:any):void","ondestroy","ondestroy():void","onedgetap","onedgetap(contain","onedgetap(container:any):void","oninit","oninit(contain","onnodetap","onnodetap(contain","onnodetap(container:any):void","onremovechang","onremovechange(contain","onremovechange(container:any):void","onscreentap","onscreentap(contain","onscreentap(container:any):void","oper","option","option(chnag","out","outdegree:node.outdegre","outgoingedg","param","paramet","perform","po","posit","positions:iposit","possil","previou","privat","properti","providedin","public","red","reject","rejeteraddedgeweight","rejeteraddedgeweighted(contain","rejeteraddedgeweighted(container:any,container2:any):void","rejeteraddnod","rejeteraddnode(contain","rejeteraddnode(container:any,container2:any):void","rejeterchangecolor","rejeterchangecolor(contain","rejeterchangecolor(container:any):void","rejeterchangenodeid","rejeterchangenodeid(contain","rejeterchangenodeid(container:any,container2:any):void","rejeterchangesizescreen","rejeterchangesizescreen(contain","rejeterchangesizescreen(container:any,container2:any):void","rejetergenerategraphfromlistedg","rejetergenerategraphfromlistedges(contain","rejetergenerategraphfromlistedges(container:any,container2:any):void","rejetergenerategraphfrommatrixadj","rejetergenerategraphfrommatrixadjancy(contain","rejetergenerategraphfrommatrixadjancy(container:any,container2:any):void","rejeterremoveedg","rejeterremoveedge(contain","rejeterremoveedge(container:any,container2:any):void","rejeterremovenod","rejeterremovenode(contain","rejeterremovenode(container:any,container2:any):void","relat","remov","removeedg","removeedge(contain","removeedge(container:any,container2:any):void","removeedgecompon","removenod","removenode(contain","removenode(container:any,container2:any):void","removenodecompon","render","repres","represent","reset","resetcolor","restor","restorearray","restoregraph","restoregraphe(contain","restoregraphe(container:any):void","result","return","root","row","screen","screen.style.backgroundcolor=container2.bgcolor","screen.style.display=\"block","screen.style.display=\"non","screen.style.height","screen.style.height.tostr","screen=container.el.nativeelement.queryselector('.scr","screen=container.el.nativeelement.queryselector('.screen","screenboxcompon","search","searcheedgechnagebc","searcheedgechnagebc(contain","searcheedgechnagebc(container:any,source:string,target:string,color:string,lineedgecolor:string,targetarrowcolor:string,time:number=10):void","second","select","selector('edg","selector('nod","servic","set","settimeout","shape","size","someth","sourc","source:container.selectednode[0","sourceindex","sourcenod","specifi","src/app/services/graphe.service.t","state","string","string.fromcharcode(65","style","tap","target","target:container.selectednode[1","target_arrow_color","target_arrow_color_algo","targetarrowcolor","targetindex","targetnod","text","this.alphabets.concat","this.alphabets.shift","this.alphabets0.concat","this.alphabets0.map(lett","this.alphabets=this.alphabets.concat(this.alphabets0.map(lett","this.background_color_nod","this.background_color_node=container2.bgcolor","this.background_color_node_algo,this.color_node_algo","this.background_color_node_algo=container2.bgcolor","this.changecoloredg","this.changecoloredge(edge,color,lineedgecolor,targetarrowcolor,tim","this.changecolornod","this.changecolornode(nod","this.changestylegraphe(this.typegraph","this.changestylegraphe(typegraph","this.ci","this.color_line_edg","this.color_line_edge=container2.bgcolor","this.color_line_edge_algo=container2.bgcolor","this.color_nod","this.color_node=container2.color","this.color_node_algo=container2.color","this.count","this.counter=0","this.cy.add","this.cy.add(cyel","this.cy.add(el","this.cy.add({data","this.cy.destroy","this.cy.edg","this.cy.edges().foreach((edge:ani","this.cy.edges().length/(this.cy.nodes().length*(this.cy.nodes().length","this.cy.edges().style('color","this.cy.edges().style('lin","this.cy.edges().style('target","this.cy.elements('edg","this.cy.elements().remov","this.cy.fit","this.cy.getelementbyid(container.selectednode[0","this.cy.getelementbyid(element.source).nonempti","this.cy.getelementbyid(element.target).nonempti","this.cy.nod","this.cy.nodes().foreach((node:ani","this.cy.nodes().length","this.cy.nodes().style('background","this.cy.nodes().style('color","this.cy.on('tap","this.cy.remove(edg","this.cy.remove(edgei","this.cy.remove(nod","this.cy.remove(this.cy.el","this.cy.styl","this.cy?.edges().foreach((edge:ani","this.cy?.nodes().foreach((node:ani","this.data_edge_color","this.data_edge_color=container2.color","this.data_edge_color_algo=container2.color","this.isedgeremove(container.selectednode[0],container.selectednode[1],contain","this.posit","this.position=nul","this.position=po","this.positions[i","this.resetcolor","this.restoregraphe(contain","this.target_arrow_color","this.target_arrow_color=container2.fcolor","this.target_arrow_color_algo=container2.fcolor","this.translate.instant(\"graphes.msg20","this.translate.instant(\"graphes.msg21","this.typegraph","this.typegraphe=container.typegraph","time","track","translat","translate/cor","translateservic","triangl","two","type","typegraph","typegraphe:string=elements[0].typ","undefin","undirect","unweight","up","updat","us","user","valu","var","variabl","variou","visual","void","weight","weight:container.weight","whether","white","width","x","x:number","y","y:number","yellow"],"injectables/SaveUploadService.html":["0","0);//black","0);//red","1","20","25","30","300","505.276","595.276","800","900","a.click","a.download","a.href","action","add","addit","address","anchor","angular/cor","application/json","apr","array","arraystring:str","arraystring=text.split","aug","background","bg","blob","blob([json.stringify(elementsjson","block","boolean","break","catch","chang","check","class","clean","clear","color","compon","const","constructor","constructor(priv","constructor(transl","contain","container.algorithm","container.buttonclick","container.changeselect","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formaddnod","container.el.nativeelement.queryselector('.formchangecolor","container.el.nativeelement.queryselector('.formremoveedg","container.el.nativeelement.queryselector('.formremovenod","container.graphes.changetypegraphe(contain","container.graphes.ci","container.graphes.cy.add(json.el","container.graphes.cy.elements().remov","container.graphes.cy.fit","container.graphes.cy.json","container.graphes.cy.nodes().length","container.graphes.cy.reset","container.graphes.posit","container.message=this.translate.instant(\"algos.msg11","container.message=this.translate.instant(\"saveuploads.msg1","container.message=this.translate.instant(\"saveuploads.msg2","container.message=this.translate.instant(\"screenbox.msg23","container.nodeid=largestnodeid","container.remov","container.restorearray","container.saveupload","container.selectednod","container.typegraph","container.typegraphe=json.typegraph","correspond","creat","current","currentd","currentdate.getd","currentdate.getfullyear","currentdate.gethour","currentdate.getminut","currentdate.getsecond","cy","cy.jpg","cy.png","cytoscap","data","date","datetim","day:numb","dec","default","defin","descript","desir","digit","doc","doc:ani","docnam","docnamearray:str","docnamearray=docname.split","document","document.createelement('a","document.createelement('input","download","e","element","elementsjson","elementsjson.typegraph","email","emailus","error","event","event.target","exist","export","famili","feb","file","fileread","fit","font","for(let","formachangesizescreen","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","formaddnod","formaddnode.style.display=\"non","format","formchangecolor","formchangecolor.style.display=\"non","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","formremoveedg","formremoveedge.style.display=\"non","formremovenod","formremovenode.style.display=\"non","full","fullgraph","fullgraph=tru","fullgraphe=tru","generatepdf(container:any,docname:string,username:string,emailuser:string,urlsite:string):void","getdatatim","graph","graph.jpg","graph.png","graphe.json","handl","height","here","highest","hours:numb","htmlinputelement).files?.[0","i505.276","i:number=0","if(!container.graphes.cy.nodes().length","if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixadjancy\"&&container.algorithm!=\"matrixincident\"&&container.algorithm!=\"listeadj","if(container.saveupload==\"sav","if(container.saveupload==\"savejpg","if(container.saveupload==\"savejpgscreen","if(container.saveupload==\"savepng","if(container.saveupload==\"savepngscreen","if(container.saveupload==\"upload","if(container.typegraph","if(key==\"urlsit","if(key==\"usernam","if(this.lastelementheight>750","if(valu","if(widthinpoints>575.276","if(widthinpoints>595.276","imag","import","increas","incrementlastelementheight(increment:number):void","individu","info","infodoc(docname:string,username:string,emailuser:string,urlsite:string):void","infographedoc(container:any,lastheight:number):void","inform","initi","inject","input","input.click","input.onchang","input.typ","instanc","isthelastofpageaddnewpage():void","jan","jpg","jpgpromis","jpgpromise.then((blob:ani","json","json.elements.nodes.foreach((nod","json.parse(e.target?.result","json.typegraph","jspdf","jul","jun","key","largestnodeid","lastelementheight","lastelementheight:number=0","lastheight","lastheight+=10","lastheight+=30","latex","lead","line","local","loop","make","mar","match","maxheight","maximum","maxwidth","method","minut","minutes:number|str","month","month:str","months[currentdate.getmonth","name","new","next","ngx","node","nodeid","non","nov","number","object","object.entries(userdata","oct","onsaveuploadchang","onsaveuploadchange(contain","onsaveuploadchange(container:any):void","oper","operations.it","option","origin","output","param","paramet","parseint(node.data.id","pdf","perform","png","pngpromis","pngpromise.then((blob","posit","promis","properti","provid","providedin","qualiti","reader","reader.onload","reader.readastext(fil","refer","replac","respons","result","return","root","save","save/upload","savejpg","savejpg(contain","savejpg(container:any,fullgraphe:boolean=true):void","savejson","savejson(contain","savejson(container:ani","savepng","savepng(contain","savepng(container:any,fullgraph:boolean=true):void","saveuploadservic","scale","screenboxcompon","second","seconds:number|str","sep","servic","set","singl","size","sourc","specifi","src/app/services/sav","string","temporari","text","text:string=\"graph","text=`list","text=container.graphes.getlistofnod","this.doc.addpag","this.doc.getfonts","this.doc.getstringunitwidth(`gener","this.doc.getstringunitwidth(docnam","this.doc.getstringunitwidth(text","this.doc.getstringunitwidth(valu","this.doc.save('sample.pdf","this.doc.setfont(\"helvetica","this.doc.setfontsize(12","this.doc.setfontsize(14","this.doc.setfontsize(22","this.doc.setfontsize(24","this.doc.settextcolor(0","this.doc.settextcolor(255","this.doc.text(`${valu","this.doc.text(`gener","this.doc.text(docnam","this.doc.text(text","this.getdatatim","this.incrementlastelementheight(yposition+this.doc.getfonts","this.infodoc(docname,username,emailuser,urlsit","this.infographedoc(container,50","this.lastelementheight+=10","this.lastelementheight+=incr","this.lastelementheight=50","this.savejpg(contain","this.savejpg(container,fals","this.savejson(contain","this.savepng(contain","this.savepng(container,fals","this.testandadddocname(docname,docnamearray,yposit","this.uploadjson(contain","through","time","titl","translat","translate/cor","translateservic","tri","trigger","true","type","typegraph","up","updat","upload","upload.service.t","uploadjson","uploadjson(contain","uploadjson(container:ani","url","url.createobjecturl(blob","url.revokeobjecturl(url","urlsit","us","user","user'","userdata","useremail","usernam","valu","vertic","view","viewport","void","whether","while(arraystring.length","while(docnamearray.length","white","width","widthinpoint","widthinpoints)/2","widthinpoints:numb","year","yposit","yposition+=30","yposition:numb","zero"],"interfaces/IPosition.html":["0","0]!=\"direct","0]==\"direct","0]==\"undirect","1","10","105},{x","106","108","1154","12","121.28128725008331","1221","1227","133},{x","144},{x","165},{x","173},{x","174","174},{x","178},{x","1]==\"unweight","1]==\"weight","2","2)||400","2*this.cy.edges().length)/(this.cy.nodes().length*(this.cy.nodes().length","200},{x","211},{x","217},{x","227},{x","239},{x","23},{x","241","24},{x","26","261","263.51311061937736","264},{x","274},{x","276","287},{x","295","299},{x","2d","3","301","314},{x","319","323","323},{x","350","351","353},{x","378","380","382","4","400+'px';//default","41},{x","43},{x","46},{x","47},{x","48","493","49},{x","530","533","541","577","592","5},{x","617","702","719","73","736","739","772","82","835","845","875","87},{x","88","885","887","919","958","970","98","_","action","ad","add","addgraphefromedgeslist.style.display=\"block","addgraphefromedgeslist.style.display=\"non","addgraphefromedgeslist=container.el.nativeelement.queryselector('.addgraphefromedgeslist","addgraphewithmatrix.style.display=\"block","addgraphewithmatrix.style.display=\"non","addgraphewithmatrix=container.el.nativeelement.queryselector('.addgraphewithmatrix","addit","addnode(container:any,container2:any):void","addnodecompon","addweightededge(container:any,container2:any):void","addweightededgecompon","adjac","adjacencylist","adjacencylist.push(adjacencylistentri","adjacencylist:array","adjacencylistentri","adjacencymatrix:array","adjacentnod","adjanstr","adjanstring+=`${adjnode[i","adjanstring+=`${elements[i","adjanstring:str","adjnod","adjnode.filter(item","adjnode.length","adjnode:array=outgoingedges.map((edge:ani","algorithm","alphabet","alphabets0","alreadi","angular/cor","anim","anoth","appli","array","array.from","array.from(array(200","arrow","associ","background","background_color_nod","background_color_node_algo","base","befor","between","bezier","bgcolor","black","block","blue","boolean","boolean=fals","break","button","buttonmanupilation.style.display=\"block","buttonmanupilation.style.display=\"non","buttonmanupilation=container.el.nativeelement.queryselector('.buttonmanupil","calcul","case","cell","chang","changechanges(container:ani","changecolor(container:any,container2:ani","changecolorcompon","changecoloredg","changecoloredge(edge:any,color:string,lineedgecolor:string,targetarrowcolor:string,time:number=10","changecolornod","changecolornode(node:any,bgcolor:string,color:string,time:number=10","changeidnodecompon","changenodeenum(container:any):void","changenodeid(container:any,container2:any):void","changesizescreen(container:any,container2:any):void","changesizescreencompon","changestylegraphe(typegraphe:string):void","changetypegraphe(container:any):void","charact","class","cleanup","click","code","color","color',bgcolor","color',lineedgecolor","color',this.background_color_nod","color',this.color_line_edg","color_line_edg","color_line_edge_algo","color_nod","color_node_algo","column","compon","condit","const","constant","constructor","constructor(priv","contain","container.algorithm","container.buttonclick","container.buttonclicked===\"addvertic","container.changeselect","container.changeselect==\"changecoloredg","container.changeselect==\"changecoloredgesalgo","container.changeselect==\"changecolornodesalgo","container.changeselect==\"changecolorscreen","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formaddnod","container.el.nativeelement.queryselector('.formchangecolor","container.el.nativeelement.queryselector('.formremoveedg","container.el.nativeelement.queryselector('.formremovenod","container.graphes.posit","container.message+=this.translate.instant(\"graphes.msg18","container.message+=this.translate.instant(\"graphes.msg19","container.message=this.translate.instant(\"graphefromedgelist.msg1","container.message=this.translate.instant(\"graphefromedgelist.msg6\");///////chang","container.message=this.translate.instant(\"graphefromedgelist.msg7","container.message=this.translate.instant(\"graphefrommatrix.msg5","container.message=this.translate.instant(\"graphefrommatrix.msg6","container.message=this.translate.instant(\"graphefrommatrix.msg6\");///////////////////////chng","container.message=this.translate.instant(\"graphes.msg1","container.message=this.translate.instant(\"graphes.msg10\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg11\",{sourceid:edge.source().id(),targetid:edge.target().id","container.message=this.translate.instant(\"graphes.msg12\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg17","container.message=this.translate.instant(\"graphes.msg2","container.message=this.translate.instant(\"graphes.msg22","container.message=this.translate.instant(\"graphes.msg23","container.message=this.translate.instant(\"graphes.msg24","container.message=this.translate.instant(\"graphes.msg25\",{last:container.selectednode[0],new:container2.newnodeid","container.message=this.translate.instant(\"graphes.msg26","container.message=this.translate.instant(\"graphes.msg27","container.message=this.translate.instant(\"graphes.msg28","container.message=this.translate.instant(\"graphes.msg29","container.message=this.translate.instant(\"graphes.msg3","container.message=this.translate.instant(\"graphes.msg30","container.message=this.translate.instant(\"graphes.msg31","container.message=this.translate.instant(\"graphes.msg32","container.message=this.translate.instant(\"graphes.msg33","container.message=this.translate.instant(\"graphes.msg34","container.message=this.translate.instant(\"graphes.msg35","container.message=this.translate.instant(\"graphes.msg36","container.message=this.translate.instant(\"graphes.msg37\",{height:container2.height","container.message=this.translate.instant(\"graphes.msg38","container.message=this.translate.instant(\"graphes.msg39","container.message=this.translate.instant(\"graphes.msg4","container.message=this.translate.instant(\"graphes.msg40","container.message=this.translate.instant(\"graphes.msg41","container.message=this.translate.instant(\"graphes.msg43","container.message=this.translate.instant(\"graphes.msg44","container.message=this.translate.instant(\"graphes.msg45","container.message=this.translate.instant(\"graphes.msg46","container.message=this.translate.instant(\"graphes.msg47\",{source:container2.sourceid,target:container2.targetid","container.message=this.translate.instant(\"graphes.msg48\",{source:container2.sourceid,target:container2.targetid","container.message=this.translate.instant(\"graphes.msg49","container.message=this.translate.instant(\"graphes.msg50","container.message=this.translate.instant(\"graphes.msg51","container.message=this.translate.instant(\"graphes.msg52\",{nodeid:container2.nodeid","container.message=this.translate.instant(\"graphes.msg53\",{nodeid:container2.nodeid","container.message=this.translate.instant(\"graphes.msg54\",{nodeid:element.data('id","container.message=this.translate.instant(\"graphes.msg55\",{nodeid:element.data('id","container.message=this.translate.instant(\"graphes.msg56\",{source:element.source().id(),target:element.target().id","container.message=this.translate.instant(\"graphes.msg57\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight","container.message=this.translate.instant(\"graphes.msg58\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight","container.message=this.translate.instant(\"graphes.msg59\",{source:element.source().id(),target:element.target().id","container.message=this.translate.instant(\"graphes.msg60","container.message=this.translate.instant(\"graphes.msg7\",{selectednode1:container.selectednode[0],selectednode2:container.selectednode[1],weight:container.weight","container.message=this.translate.instant(\"graphes.msg8","container.message=this.translate.instant(\"graphes.msg9","container.message=this.translate.instant(\"screenbox.msg23","container.message=this.translate.instant('graphes.msg23","container.message=this.translate.instant('screenbox.msg41","container.nodeidchanged=container2.newnodeid","container.nodename=\"numeriqu","container.remov","container.remove==\"remov","container.restorearray","container.restorearray.push(elem","container.saveupload","container.selectednod","container.selectednode.push(node.data('id","container.typegraphe=this.typegraphe=\"direct","container.typegraphe=this.typegraphe=\"undirect","container.typegraphe=this.typegraphe=cytyp","container.typegraphe=this.typegraphe=typegraph","container.weight=nul","container2","container2.height+'px","container2.height=screen.style.height","container2.height=screen.style.height.slice(0","container2.listedgetextarea","container2.matrixtext","container2.newnodeid","container2.newnodeid=nul","container2.nodeid","container2.nodeid=nul","container2.sourceid","container2.targetid","container2.weightform=nul","correspond","counter","creat","creategraphefromadjancymatrix(elements:any,directed:boolean,weighted:boolean,container:any):void","creategraphefromlistedges(container:any,container2:any):void","curv","cy","cyelements:any=this.cy.el","cytoscap","cytype:string=this.typegraph","data","data(weight","data_edge_color","data_edge_color_algo","default","degre","degree:node.degre","delay","delet","densiti","descript","destroy","direct","doesn't","dri","e.g","edg","edge.data(\"weight","edge.data(\"weight\")==element.weight","edge.data('weight","edge.remov","edge.sourc","edge.source().id","edge.source().id()==container2.targetid","edge.source().id()==node2","edge.source().id()},${this.translate.instant(\"info.t","edge.style('color',color","edge.style('color',this.data_edge_color","edge.style('lin","edge.style('target","edge.target","edge.target().id","edge.target().id()==container2.targetid","edge.target().id()==container2.targetid)||(edge.target().id()==container2.sourceid","edge.target().id()==element.sourc","edge.target().id()==node1","edge.target().id()==node2","edge:ani","edge=el","edge=this.cy.add","edgei:ani","edgei=edg","edges.foreach((edge:ani","edges.push(edgetext","edges:array","edgesourceid","edgetargetid","edgetext:str","edgetext=`${edge.source().id","elem:ani","elem=container.restorearray.pop","elem={status:\"add\",element:edg","elem={status:\"add\",element:nod","elem={status:\"add\",element:nodenew","elem={status:\"remove\",element:edg","elem={status:\"remove\",element:edgei","elem={status:\"remove\",element:nod","element","element+=`,${this.translate.instant(\"info.w","element.id","element.isedg","element.remov","element.sourc","element.source().id()==node.id","element.target","element.target().id()==node.id","element.weight","element:string=`(${this.translate.instant(\"info.","element=elem.el","elements.filter(item","elements.foreach((element:ani","elements:any=container2.sendel","elements:array=incomersedges.map((edge:ani","elements[i","empti","enumer","err:boolean=fals","err=tru","event","evt.cyposit","evt.posit","evt.target","evt:ani","exist","exist:boolean=fals","exist:boolean=node.isnod","exist=tru","export","file","find","follow","for(let","form","formachangesizescreen","formachangesizescreen.style.display=\"block","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","formaddedge.style.display='non","formaddnod","formaddnode.style.display=\"block","formaddnode.style.display=\"non","formaddnode=container.el.nativeelement.queryselector('.formaddnod","format","formchangecolor","formchangecolor.style.display=\"block","formchangecolor.style.display=\"non","formchangenodeid.style.display","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","formremoveedg","formremoveedge.style.display=\"block","formremoveedge.style.display=\"non","formremovenod","formremovenode.style.display=\"block","formremovenode.style.display=\"non","gener","getadjancylist():array","getdegreenodes():array","getdensityofgraphe():numb","getedgeids():array","getlisteofedge():str","getlistofnode():str","getnodeids():array","given","graph","graphefromedgeslistcompon","graphefrommatrixadjacompon","grapheservic","group","handl","haystack","here","i:number=0","i:number=0;i","id","id:node.data('id","idexists=fals","idexists=tru","if(!container.restorearray.length","if(!err","if(!exist","if(!nodeexist","if(!nodeexists1","if((edge.source().id()==container2.sourceid","if((edge.source().id()==node1","if(adjanstr","if(adjanstring.slic","if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixadjancy\"&&container.algorithm!=\"matrixincident\"&&container.algorithm!=\"listeadj","if(container.buttonclicked==\"addedg","if(container.buttonclicked==\"addvertic","if(container.buttonclicked==\"default","if(container.buttonclicked==\"restor","if(container.buttonclicked===\"addedg","if(container.changeselect==\"addgraphefromedgeslist","if(container.changeselect==\"addgraphefrommatrix","if(container.changeselect==\"changecoloredg","if(container.changeselect==\"changecoloredgesalgo","if(container.changeselect==\"changecolornod","if(container.changeselect==\"changecolornodesalgo","if(container.changeselect==\"changecolorscreen","if(container.changeselect==\"changeidnod","if(container.changeselect==\"changesizescreen","if(container.changeselect===\"changeidnod","if(container.nodename!=\"customtext","if(container.nodename==\"alphab","if(container.nodename==\"customtext","if(container.nodename==\"numeriqu","if(container.remove==\"remov","if(container.remove==\"reset","if(container.remove==\"speci","if(container.restorearray.length!=0","if(container.selectednode.length","if(container.selectednode.length!=0","if(container.typegraph","if(container.weight!=0","if(container2.height","if(container2.nodeid","if(direct","if(edge.source().id()==container2.sourceid","if(edge.source().id()==element.target","if(el","if(elem.status==\"add","if(element.id","if(element.isnod","if(element.sourc","if(element.source().id()==adjnode[i","if(element.target","if(element.target().id()==adjnode[i","if(exist","if(i!=adjnode.length","if(i!=elements.length","if(i!=this.cy?.edges().length","if(i!=this.cy?.nodes().length","if(i==0","if(idexists==fals","if(node.data('id')==container2.newnodeid","if(node.data('id')==container2.nodeid","if(node.data('id')==this.alphabets[0","if(node.data('id')==this.counter+1","if(sourceindex==targetindex","if(this.cy.nodes().length","if(this.cy.nodes().length==0","if(this.typegraph","if(this.typegraphe.split","if(typegraphe.split","if(typegraphe==\"direct","if(typegraphe==\"undirect","if(weight","import","incid","incidencematrix","incidencematrix():array","incidencematrix:array","incidencematrix[sourceindex][edgeindex","incidencematrix[targetindex][edgeindex","includ","incomersedg","indegree:node.indegre","indic","info","initi","initiali","inject","instanc","interact","interfac","internation","iposit","item","label","length","letter","line","linecolor","lineedgecolor","list","listen","listofedg","listofedge+=el","listofedge:str","listofnod","listofnode+=`${node.data(\"id","listofnode:str","localstorage.setitem(\"screencolor\",screen.style.backgroundcolor.tostr","localstorage.setitem('screenheight","log","logic","lowercas","made","manag","margin","match","matrix","matrixadjancy():array","messag","met","name","need","new","ngx","node","node.id","node.incom","node.outgo","node.position('i","node.position('x'),i","node.remov","node.style('background","node.style('color',color","node.style('color',this.color_nod","node:ani","node:any=this.cy.getelementbyid(container2.nodeid","node=this.cy.add","nodeexist","nodeexists1","nodenew.id","nodenew=this.cy.add","nodes.indexof(sourcenod","nodes.indexof(targetnod","nodes.length","nodes.push(node.data('id","nodes:array","nodesdegr","nodesdegre.push(obj","nodesdegre:array","none","null","number","numbersarray:numb","numnod","obj","obj:ani","object","onchangebuttonclicked(container:any):void","ondestroy():void","onedgetap(container:any):void","onnodetap(container:any):void","onremovechange(container:any):void","onscreentap(container:any):void","oper","option","option(chnag","out","outdegree:node.outdegre","outgoingedg","param","perform","po","posit","positions:iposit","possil","previou","privat","properti","providedin","public","red","reject","rejeteraddedgeweighted(container:any,container2:any):void","rejeteraddnode(container:any,container2:any):void","rejeterchangecolor(container:any):void","rejeterchangenodeid(container:any,container2:any):void","rejeterchangesizescreen(container:any,container2:any):void","rejetergenerategraphfromlistedges(container:any,container2:any):void","rejetergenerategraphfrommatrixadjancy(container:any,container2:any):void","rejeterremoveedge(container:any,container2:any):void","rejeterremovenode(container:any,container2:any):void","relat","remov","removeedge(container:any,container2:any):void","removeedgecompon","removenode(container:any,container2:any):void","removenodecompon","render","repres","represent","reset","restor","restorearray","restoregraphe(container:any):void","result","return","root","row","screen","screen.style.backgroundcolor=container2.bgcolor","screen.style.display=\"block","screen.style.display=\"non","screen.style.height","screen.style.height.tostr","screen=container.el.nativeelement.queryselector('.scr","screen=container.el.nativeelement.queryselector('.screen","screenboxcompon","search","searcheedgechnagebc(container:any,source:string,target:string,color:string,lineedgecolor:string,targetarrowcolor:string,time:number=10):void","select","selector('edg","selector('nod","servic","set","settimeout","shape","size","someth","sourc","source:container.selectednode[0","sourceindex","sourcenod","specifi","src/app/services/graphe.service.t","state","string","string.fromcharcode(65","style","tap","target","target:container.selectednode[1","target_arrow_color","target_arrow_color_algo","targetarrowcolor","targetindex","targetnod","text","this.alphabets.concat","this.alphabets.shift","this.alphabets0.concat","this.alphabets0.map(lett","this.alphabets=this.alphabets.concat(this.alphabets0.map(lett","this.background_color_nod","this.background_color_node=container2.bgcolor","this.background_color_node_algo,this.color_node_algo","this.background_color_node_algo=container2.bgcolor","this.changecoloredg","this.changecoloredge(edge,color,lineedgecolor,targetarrowcolor,tim","this.changecolornod","this.changecolornode(nod","this.changestylegraphe(this.typegraph","this.changestylegraphe(typegraph","this.ci","this.color_line_edg","this.color_line_edge=container2.bgcolor","this.color_line_edge_algo=container2.bgcolor","this.color_nod","this.color_node=container2.color","this.color_node_algo=container2.color","this.count","this.counter=0","this.cy.add","this.cy.add(cyel","this.cy.add(el","this.cy.add({data","this.cy.destroy","this.cy.edg","this.cy.edges().foreach((edge:ani","this.cy.edges().length/(this.cy.nodes().length*(this.cy.nodes().length","this.cy.edges().style('color","this.cy.edges().style('lin","this.cy.edges().style('target","this.cy.elements('edg","this.cy.elements().remov","this.cy.fit","this.cy.getelementbyid(container.selectednode[0","this.cy.getelementbyid(element.source).nonempti","this.cy.getelementbyid(element.target).nonempti","this.cy.nod","this.cy.nodes().foreach((node:ani","this.cy.nodes().length","this.cy.nodes().style('background","this.cy.nodes().style('color","this.cy.on('tap","this.cy.remove(edg","this.cy.remove(edgei","this.cy.remove(nod","this.cy.remove(this.cy.el","this.cy.styl","this.cy?.edges().foreach((edge:ani","this.cy?.nodes().foreach((node:ani","this.data_edge_color","this.data_edge_color=container2.color","this.data_edge_color_algo=container2.color","this.isedgeremove(container.selectednode[0],container.selectednode[1],contain","this.posit","this.position=nul","this.position=po","this.positions[i","this.resetcolor","this.restoregraphe(contain","this.target_arrow_color","this.target_arrow_color=container2.fcolor","this.target_arrow_color_algo=container2.fcolor","this.translate.instant(\"graphes.msg20","this.translate.instant(\"graphes.msg21","this.typegraph","this.typegraphe=container.typegraph","time","track","translat","translate/cor","translateservic","triangl","two","type","typegraph","typegraphe:string=elements[0].typ","undefin","undirect","unweight","updat","us","user","valu","var","variabl","variou","visual","void","weight","weight:container.weight","whether","white","width","x","x:number","y","y:number","yellow"],"interfaces/IUnweightedEdge.html":["0","2d","addgraphewithmatrix.style.display=\"non","addgraphewithmatrix=this.container.el.nativeelement.queryselector('.addgraphewithmatrix","adja","adja.component.css","adja.component.html","adja.component.t","adja/graph","adjac","adjacencymatrix","angular/cor","app","array","array.isarray(matrix","arraynemming=this.graphes.alphabet","arraynemming=this.graphes.numbersarray","base","boolean","buttonmanupilation.style.display=\"block","buttonmanupilation=this.container.el.nativeelement.queryselector('.buttonmanupil","can't","check","class","column","compar","compon","const","constructor","constructor(protect","contain","container:ani","creat","creategraphelements(adjacencymatrix","descript","each","edg","element","elements:array=this.creategraphelements(adjacencymatrix","empti","err:boolean=fals","err=tru","export","fail","fals","file","flag","format","gener","generategraph","graph","graphefrommatrixadjacompon","graphes:grapheservice,protect","grapheservic","handl","if(!err","if(adjacencymatrix","if(this.container.nodename==\"alphab","if(this.container.nodename==\"numeriqu","import","indic","info","initi","input","instanc","interfac","isdirect","issquar","issymmetric(matrix:array","isweight","isweighted(adjacencymatrix:array>):boolean","iunweightededg","iweightededg","languag","lead","local","match","matrix","matrix.length","matrix:ani","matrix[0].length","matrixtext","matrixtext.length","matrixtext.split('\\n","matrixtext.trim","matrixtext:str","memberof","newlin","ngx","node","number","numcol","numrow","object","oper","otherwis","param","pars","parseadjacencymatrix(matrixtext:string):ani","properti","provid","relat","remov","repres","result","return","row","row.trim().split(/\\s+/).map(numb","rowindex:ani","rows.length","rows.map((row:ani","screen.style.display=\"block","screen=this.container.el.nativeelement.queryselector('.screen","selector","sourc","split","squar","src/app/components/graph","src/app/services/graphe.servic","string","styleurl","symmetr","target","templateurl","text","this.container.changeselect","this.container.message=this.translate.instant(\"graphefrommatrix.msg4","this.container.message=this.translate.instant('graphefrommatrix.msg2","this.container.restorearray","this.graphes.creategraphefromadjancymatrix(elements,!this.issymmetric(adjacencymatrix),this.isweighted(adjacencymatrix),this.contain","this.issymmetric(adjacencymatrix","this.isweighted(adjacencymatrix","this.matrixtext","this.parseadjacencymatrix(this.matrixtext","trail","translat","translate/cor","translate:translateservic","translateservic","true","type","undirect","unweight","valid","valu","values.length","weight","weighted:boolean=fals","whitespac"],"interfaces/IUnweightedEdgeTyped.html":["against","angular/cor","app","area","array","boolean","break","charact","check","class","compon","console.log","console.log(matchundirectedweighted[1","console.log(matchundirectedweighted[2","console.log(matchundirectedweighted[3","const","constructor","constructor(protect","contain","container:ani","containsinvalidcharacters(inputstring:str","d","defin","descript","direct","e.g","edg","edges.push(edg","edges:array","element","error","export","express","extend","fals","file","firsttype:string=edges[0]?.typ","format","given","graph","graphefromedgeslistcompon","graphes:grapheservice,protect","grapheservic","handl","if(edge.type!=firsttyp","if(firsttyp","if(lines.length==0","if(this.issametypegraphe(this.parseextendedformat","import","info","inform","input","inputstr","instanc","interfac","invalid","invalidcharacterspattern","invalidcharacterspattern.test(inputstr","issametypegraph","issametypegraphe(edges:array","issametypegraphe:boolean=tru","issametypegraphe=fals","iunweightededgetyp","iweightededgetyp","iweightededgetyped|iunweightededgetyped|nul","languag","line","line.match(/\\","list","list.component.css","list.component.html","list.component.t","list/graph","listedgetextarea:str","local","match","matchdirect","matchdirected[1].trim","matchdirected[2].trim","matchdirectedweight","matchdirectedweighted[1].trim","matchdirectedweighted[3].trim","matchundirect","matchundirected[1].trim","matchundirected[2].trim","matchundirectedweight","matchundirectedweighted[1].trim","matchundirectedweighted[3].trim","memberof","mismatch","ngx","node","null","number","number(matchdirectedweighted[2","number(matchundirectedweighted[2","object","ok","oper","otherwis","param","parent","pars","parseedge(line:string):iweightededgetyped|iunweightededgetyped|nul","parseextendedformat():array","pattern","properti","regular","relat","repres","result","return","s","s*>\\","same","selector","send","sendelements():ani","singl","sourc","src/app/components/graph","src/app/services/graphe.servic","string","styleurl","target","templateurl","test","text","this.container.message=this.translate.instant(\"graphefromedgelist.msg1","this.container.message=this.translate.instant(\"graphefromedgelist.msg2","this.container.message=this.translate.instant(\"graphefromedgelist.msg3","this.containsinvalidcharacters(edge?.sourc","this.listedgetextarea.split('\\n","this.parseedge(lin","this.parseextendedformat","translat","translate/cor","translate:translateservic","translateservic","true","type","undirect","unweight","valid","weight"],"interfaces/IWeightedEdge.html":["0","2d","addgraphewithmatrix.style.display=\"non","addgraphewithmatrix=this.container.el.nativeelement.queryselector('.addgraphewithmatrix","adja","adja.component.css","adja.component.html","adja.component.t","adja/graph","adjac","adjacencymatrix","angular/cor","app","array","array.isarray(matrix","arraynemming=this.graphes.alphabet","arraynemming=this.graphes.numbersarray","base","boolean","buttonmanupilation.style.display=\"block","buttonmanupilation=this.container.el.nativeelement.queryselector('.buttonmanupil","can't","check","class","column","compar","compon","const","constructor","constructor(protect","contain","container:ani","creat","creategraphelements(adjacencymatrix","descript","each","edg","element","elements:array=this.creategraphelements(adjacencymatrix","empti","err:boolean=fals","err=tru","export","fail","fals","file","flag","format","gener","generategraph","graph","graphefrommatrixadjacompon","graphes:grapheservice,protect","grapheservic","handl","if(!err","if(adjacencymatrix","if(this.container.nodename==\"alphab","if(this.container.nodename==\"numeriqu","import","indic","info","initi","input","instanc","interfac","isdirect","issquar","issymmetric(matrix:array","isweight","isweighted(adjacencymatrix:array>):boolean","iunweightededg","iweightededg","languag","lead","local","match","matrix","matrix.length","matrix:ani","matrix[0].length","matrixtext","matrixtext.length","matrixtext.split('\\n","matrixtext.trim","matrixtext:str","memberof","newlin","ngx","node","number","numcol","numrow","object","oper","otherwis","param","pars","parseadjacencymatrix(matrixtext:string):ani","properti","provid","relat","remov","repres","result","return","row","row.trim().split(/\\s+/).map(numb","rowindex:ani","rows.length","rows.map((row:ani","screen.style.display=\"block","screen=this.container.el.nativeelement.queryselector('.screen","selector","sourc","split","squar","src/app/components/graph","src/app/services/graphe.servic","string","styleurl","symmetr","target","templateurl","text","this.container.changeselect","this.container.message=this.translate.instant(\"graphefrommatrix.msg4","this.container.message=this.translate.instant('graphefrommatrix.msg2","this.container.restorearray","this.graphes.creategraphefromadjancymatrix(elements,!this.issymmetric(adjacencymatrix),this.isweighted(adjacencymatrix),this.contain","this.issymmetric(adjacencymatrix","this.isweighted(adjacencymatrix","this.matrixtext","this.parseadjacencymatrix(this.matrixtext","trail","translat","translate/cor","translate:translateservic","translateservic","true","type","undirect","unweight","valid","valu","values.length","weight","weighted:boolean=fals","whitespac"],"interfaces/IWeightedEdgeTyped.html":["against","angular/cor","app","area","array","boolean","break","charact","check","class","compon","console.log","console.log(matchundirectedweighted[1","console.log(matchundirectedweighted[2","console.log(matchundirectedweighted[3","const","constructor","constructor(protect","contain","container:ani","containsinvalidcharacters(inputstring:str","d","defin","descript","direct","e.g","edg","edges.push(edg","edges:array","element","error","export","express","extend","fals","file","firsttype:string=edges[0]?.typ","format","given","graph","graphefromedgeslistcompon","graphes:grapheservice,protect","grapheservic","handl","if(edge.type!=firsttyp","if(firsttyp","if(lines.length==0","if(this.issametypegraphe(this.parseextendedformat","import","info","inform","input","inputstr","instanc","interfac","invalid","invalidcharacterspattern","invalidcharacterspattern.test(inputstr","issametypegraph","issametypegraphe(edges:array","issametypegraphe:boolean=tru","issametypegraphe=fals","iunweightededgetyp","iweightededgetyp","iweightededgetyped|iunweightededgetyped|nul","languag","line","line.match(/\\","list","list.component.css","list.component.html","list.component.t","list/graph","listedgetextarea:str","local","match","matchdirect","matchdirected[1].trim","matchdirected[2].trim","matchdirectedweight","matchdirectedweighted[1].trim","matchdirectedweighted[3].trim","matchundirect","matchundirected[1].trim","matchundirected[2].trim","matchundirectedweight","matchundirectedweighted[1].trim","matchundirectedweighted[3].trim","memberof","mismatch","ngx","node","null","number","number(matchdirectedweighted[2","number(matchundirectedweighted[2","object","ok","oper","otherwis","param","parent","pars","parseedge(line:string):iweightededgetyped|iunweightededgetyped|nul","parseextendedformat():array","pattern","properti","regular","relat","repres","result","return","s","s*>\\","same","selector","send","sendelements():ani","singl","sourc","src/app/components/graph","src/app/services/graphe.servic","string","styleurl","target","templateurl","test","text","this.container.message=this.translate.instant(\"graphefromedgelist.msg1","this.container.message=this.translate.instant(\"graphefromedgelist.msg2","this.container.message=this.translate.instant(\"graphefromedgelist.msg3","this.containsinvalidcharacters(edge?.sourc","this.listedgetextarea.split('\\n","this.parseedge(lin","this.parseextendedformat","translat","translate/cor","translate:translateservic","translateservic","true","type","undirect","unweight","valid","weight"],"coverage.html":["0","0/1","0/2","0/3","0/4","0/9","1/1","100","17/18","2/2","2/4","21","3/3","4/19","4/4","5/5","5/7","50","63/65","64","7/7","7/8","71","87","94","96","addnodecompon","addweightededgecompon","adja.component.t","adja/graph","algorithmservic","appcompon","changecolorcompon","changeidnodecompon","changesizescreencompon","color.component.t","color/chang","compon","coverag","darkmodeservic","document","edg","edge.component.t","edge/add","edge/remov","enumerationnodecompon","file","footercompon","graphefromedgeslistcompon","graphefrommatrixadjacompon","grapheservic","headercompon","id","identifi","infocompon","inject","interfac","iposit","iunweightededg","iunweightededgetyp","iweightededg","iweightededgetyp","list.component.t","list/graph","match","matrix","matrixcompon","messagecompon","mode.service.t","node.component.t","node/add","node/chang","node/enumer","node/remov","project","removeedgecompon","removenodecompon","result","saveuploadservic","screen.component.t","screen/chang","screenboxcompon","screencompon","selectcompon","size","src/app/app.component.t","src/app/components/add","src/app/components/chang","src/app/components/enumer","src/app/components/footer/footer.component.t","src/app/components/graph","src/app/components/header/header.component.t","src/app/components/info/info.component.t","src/app/components/matrix/matrix.component.t","src/app/components/message/message.component.t","src/app/components/remov","src/app/components/screen/screen.component.t","src/app/components/screenbox/screenbox.component.t","src/app/components/select/select.component.t","src/app/services/algorithm.service.t","src/app/services/dark","src/app/services/graphe.service.t","src/app/services/sav","statement","type","upload.service.t","weight"]},"length":33},"tokenStore":{"root":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.01616161616161616},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.022222222222222223},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.021798365122615803},"coverage.html":{"ref":"coverage.html","tf":0.04}},".":{"7":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}},"docs":{}},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004225352112676056},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.065}}},"3":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02}}},"5":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}},"1":{"5":{"4":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}},"2":{"1":{"docs":{},".":{"2":{"8":{"1":{"2":{"8":{"7":{"2":{"5":{"0":{"0":{"8":{"3":{"3":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"2":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}},"3":{"3":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{}},"4":{"4":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{}},"6":{"5":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}},"docs":{}}},"docs":{}}},"7":{"3":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"4":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"8":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{},"/":{"1":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"docs":{}},"docs":{}}},"9":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.009154929577464789},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004195804195804196},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0056022408963585435}},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}}}}}}}},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"docs":{}}},"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"1":{"1":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"7":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"2":{"7":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{}},"3":{"9":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"4":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"5":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"6":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"3":{"docs":{},".":{"5":{"1":{"3":{"1":{"1":{"0":{"6":{"1":{"9":{"3":{"7":{"7":{"3":{"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"4":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"7":{"4":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"8":{"7":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{}},"9":{"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"9":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{}},"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0028011204481792717}},"d":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926}}},")":{"docs":{},"|":{"docs":{},"|":{"4":{"0":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}},"docs":{}}}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},"/":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"*":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"docs":{}}},"3":{"0":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}},"1":{"4":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"2":{"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{}},"5":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"3":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{}},"7":{"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"8":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"/":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015}}},"docs":{}}},"4":{"0":{"0":{"docs":{},"+":{"docs":{},"'":{"docs":{},"p":{"docs":{},"x":{"docs":{},"'":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}},"docs":{}},"1":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"3":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"6":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"7":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"9":{"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"/":{"1":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"docs":{}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015}}},"docs":{}}},"5":{"0":{"5":{"docs":{},".":{"2":{"7":{"6":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"coverage.html":{"ref":"coverage.html","tf":0.005}}},"3":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"4":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"7":{"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"9":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"5":{"docs":{},".":{"2":{"7":{"6":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05}},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"docs":{}}},"6":{"1":{"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"3":{"docs":{},"/":{"6":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"docs":{}},"docs":{}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"docs":{}},"7":{"0":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}},"1":{"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"3":{"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"7":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01}}},"docs":{}}},"8":{"0":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}},"docs":{}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}},"3":{"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"4":{"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"7":{"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01}},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"8":{"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"9":{"0":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}},"docs":{}},"1":{"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"5":{"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}},"7":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{},"a":{"docs":{},"d":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.05228758169934641},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":5.026143790849673},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":5.018691588785047},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0033566433566433566},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"j":{"docs":{},"a":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"coverage.html":{"ref":"coverage.html","tf":0.015}}}}}}}}}}}}}},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"coverage.html":{"ref":"coverage.html","tf":0.015}}}}}}}},"c":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.04040404040404041},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0033566433566433566},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.025},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.02452316076294278}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"+":{"docs":{},"=":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"g":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011235955056179775}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.009859154929577466},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}},"y":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.006713286713286713},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004801920768307323}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}},"p":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"l":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.00796812749004}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0199203187250996},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.029850746268656},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}}}}}}}}}},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}}},"e":{"docs":{},"a":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.014732965009208104},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.030303030303030304},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.006993006993006993},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.006402561024409764},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.025},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.012077294685990338},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.02452316076294278},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.011876484560570071}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"2":{"0":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"=":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.006402561024409764}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.020422535211267606},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003076923076923077},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.016853932584269662},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":5.002816901408451},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364}}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0033566433566433566},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}},"s":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"1":{"8":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.03773584905660377}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"modules.html":{"ref":"modules.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004225352112676056}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.011049723756906077},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.011111111111111112},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.00966183574879227},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.010899182561307902},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.009501187648456057}},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"x":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831}},"'":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.024844720496894408},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003076923076923077},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0033566433566433566},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}}}}},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.018633540372670808},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005633802816901409}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"z":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.008450704225352112}},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"b":{"docs":{},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.007856341189674524}},"(":{"docs":{},"[":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}},"s":{"docs":{},"e":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}},"l":{"docs":{},"l":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.08695652173913043},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.055944055944055944},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.07936507936507936},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011235955056179775},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00951048951048951},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.006802721088435374}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":5.024844720496894},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"1":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"1":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":5.027972027972028},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":5.031746031746032},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.01289134438305709},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.00966183574879227},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.009501187648456057}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.014732965009208104},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.00966183574879227},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.009501187648456057}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283}},"c":{"docs":{},"k":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011235955056179775},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.0196078431372549},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.018633540372670808},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.02097902097902098},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.023809523809523808},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.03409090909090909},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0410958904109589},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.041666666666666664},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.026785714285714284},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"u":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283},"overview.html":{"ref":"overview.html","tf":0.05},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":5.03921568627451},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":5.0514018691588785},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.044776119402985},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":5.043478260869565},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":5.048951048951049},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":5.055555555555555},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":5.038461538461538},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":5.073170731707317},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":5.009208103130755},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":5.006060606060606},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":5.041666666666667},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":5.079545454545454},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":5.068493150684931},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":5.035},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":5.046875},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":5.035087719298246},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":5.069444444444445},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":5.025280898876405},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":5.025974025974026},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043},"coverage.html":{"ref":"coverage.html","tf":0.095}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.11801242236024845},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.020422535211267606},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.025454545454545455},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.022008803521408563}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204}}}}}},"t":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"'":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}},",":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.01841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.024242424242424242},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.03732394366197183},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.029650349650349652},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.025813692480359147},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.04241696678671469},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.03333333333333333},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.024154589371980676},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0326975476839237},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.023752969121140142}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0055248618784530384},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.03409090909090909},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.026785714285714284},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}},"i":{"docs":{},"v":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888}}}}}}}}},"e":{"docs":{},"l":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"1":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"2":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"3":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.016574585635359115},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.04507042253521127},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.048391608391608394},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.03367003367003367},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.03321328531412565},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.00966183574879227},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.009501187648456057}},"e":{"docs":{},"r":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.013426573426573427},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.006402561024409764}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"+":{"docs":{},"'":{"docs":{},"p":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"=":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}},"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"7":{"0":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}}},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.009154929577464789},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0033566433566433566},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004801920768307323}},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"5":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004001600640256103}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"*":{"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"i":{"docs":{},"+":{"docs":{},"+":{"docs":{},"*":{"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}},"j":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"j":{"docs":{},"=":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"*":{"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"i":{"docs":{},"*":{"2":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"[":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}},"y":{"docs":{},".":{"docs":{},"$":{"docs":{},"(":{"docs":{},"`":{"docs":{},"#":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}},"d":{"docs":{},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"s":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733}},"e":{"docs":{},"+":{"docs":{},"=":{"docs":{},"`":{"docs":{},"(":{"docs":{},"s":{"docs":{},":":{"docs":{},"$":{"docs":{},"{":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},",":{"docs":{},"t":{"docs":{},":":{"docs":{},"$":{"docs":{},"{":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},",":{"docs":{},"w":{"docs":{},":":{"docs":{},"$":{"docs":{},"{":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"k":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"2":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{}},"8":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"1":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"4":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"3":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}},"docs":{}},"docs":{}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"2":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}},"docs":{}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}},"6":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}},"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"0":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}}}}}}},"1":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"2":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"4":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"5":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"7":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"3":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"4":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"4":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}},"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"4":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"6":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"5":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"2":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"5":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"9":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"6":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"7":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"2":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"8":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"9":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}},"'":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"3":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"4":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}},"e":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003916083916083916},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0056022408963585435}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004001600640256103}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804}}}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}},"c":{"docs":{},"y":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"=":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.005}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},",":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.015712682379349047}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}},"y":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.014590347923681257},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"d":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}},"c":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0044755244755244755},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}},"i":{"docs":{},"n":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.011971830985915493},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004755244755244755},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004001600640256103},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"|":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"|":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"|":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"|":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"|":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}},"l":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005633802816901409}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"$":{"docs":{},"(":{"docs":{},"`":{"docs":{},"#":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"$":{"docs":{},"(":{"docs":{},"`":{"docs":{},"#":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.07142857142857142}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.041666666666666664},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.03},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.08333333333333333},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.016853932584269662},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":5.035714285714286},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011235955056179775},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.006713286713286713},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.020202020202020204},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.008003201280512205}},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}},"e":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"y":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}},"é":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"c":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"=":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734},"coverage.html":{"ref":"coverage.html","tf":0.005}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.007856341189674524}}}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}},"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.05660377358490566}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.11538461538461539},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":5.038461538461538},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010101010101010102},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}}}}},"d":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.056074766355140186},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.037267080745341616},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0847145488029466},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.01818181818181818},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.020422535211267606},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0220979020979021},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.02040816326530612},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.030555555555555555},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.08454106280193237},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0326975476839237},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0855106888361045},"coverage.html":{"ref":"coverage.html","tf":0.03}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125}}}}}},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"coverage.html":{"ref":"coverage.html","tf":0.01}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"'":{"docs":{},")":{"docs":{},"|":{"docs":{},"|":{"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"docs":{}}}}}}}}}}}},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}},"\"":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"docs":{}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}},"}":{"docs":{},",":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},")":{"docs":{},"|":{"docs":{},"|":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}},"=":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}},"i":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"=":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"=":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.02336448598130841},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011235955056179775},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}}}}}}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047}},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"u":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},".":{"docs":{},"g":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}},"l":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00808080808080808},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0044755244755244755},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004401760704281713},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"y":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.014044943820224719}},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}},"+":{"docs":{},"=":{"docs":{},"`":{"docs":{},",":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"w":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001958041958041958},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0028011204481792717}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003076923076923077},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004401760704281713}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"`":{"docs":{},"(":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},":":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"e":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008978675645342313},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144},"coverage.html":{"ref":"coverage.html","tf":0.005}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"?":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.037267080745341616},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872}}}}},"n":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}},"u":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008978675645342313}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734}},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"e":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":5.048780487804878},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}}},"a":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.014141414141414142},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.011111111111111112},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.010899182561307902},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004001600640256103}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001958041958041958},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0028011204481792717}}}}}},"'":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003076923076923077},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004401760704281713}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001958041958041958},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004001600640256103}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}},"docs":{}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001958041958041958},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0028011204481792717}}}}}},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005633802816901409}}}},"c":{"docs":{},"u":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}},"s":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}}}}},"n":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.01289134438305709},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.01818181818181818},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005633802816901409},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.016666666666666666},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.00966183574879227},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.01634877384196185},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.009501187648456057}}}},"i":{"docs":{},"l":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"l":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.018633540372670808}}}}}}},"e":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.03773584905660377},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}},"p":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.031055900621118012},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.02097902097902098},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.023809523809523808},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.03683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.050505050505050504},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.056818181818181816},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.019662921348314606},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.022535211267605635},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.02909090909090909},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.019079685746352413},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.020008003201280513},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.03611111111111111},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.028985507246376812},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.035422343324250684},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.028503562945368172}},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":5.0073664825046045},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":5.008080808080808},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.032679738562091505},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.037267080745341616},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.04195804195804196},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.047619047619047616},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.009208103130755065},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.03},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.016853932584269662},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":5.001118881118881},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043},"coverage.html":{"ref":"coverage.html","tf":0.005}},"e":{"docs":{},",":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806}},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364}}}}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003076923076923077},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004401760704281713}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":5.027777777777778},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.05555555555555555},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.035},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"4":{"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}},"y":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"?":{"docs":{},".":{"docs":{},"[":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00808080808080808},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}},"e":{"docs":{},"r":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}},"i":{"5":{"0":{"5":{"docs":{},".":{"2":{"7":{"6":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.13147410358565736},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04477611940298507},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0055248618784530384},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.041666666666666664},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0410958904109589},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.019662921348314606},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043}}}}}},"a":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":5.002112676056338},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":5.026785714285714},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":5.000839160839161},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":5.0033670033670035},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"coverage.html":{"ref":"coverage.html","tf":0.02}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00808080808080808},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":5.000800320128051},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":5.013888888888889},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":5.01207729468599},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":5.013623978201635},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":5.01187648456057},"coverage.html":{"ref":"coverage.html","tf":0.025}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.03409090909090909},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":5.045454545454546},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"r":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.05228758169934641},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.0514018691588785},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.06832298136645963},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.06993006993006994},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.05555555555555555},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.027624309392265192},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.01616161616161616},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.07954545454545454},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0410958904109589},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.05},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.046875},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.07792207792207792},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.013888888888888888},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.01932367149758454},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.013623978201634877},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.019002375296912115}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0055248618784530384},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.018691588785046728},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.024844720496894408},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.027972027972027972},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.031746031746031744},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.03},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.05555555555555555},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.033707865168539325},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.015712682379349047},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.011049723756906077},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"[":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.0979020979020979},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.013380281690140845},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.008951048951048951},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.007603041216486595},"coverage.html":{"ref":"coverage.html","tf":0.01}},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571}},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}}}}}},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202}},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},">":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}}},"docs":{}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"!":{"docs":{},"=":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"docs":{}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"docs":{}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"=":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005034965034965035},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.007202881152460984}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},">":{"7":{"5":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"s":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"docs":{}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}},"d":{"docs":{},"f":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}},"k":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{},"&":{"docs":{},"&":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"!":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"\"":{"docs":{},"&":{"docs":{},"&":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"!":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"&":{"docs":{},"&":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"!":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},"?":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004225352112676056}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"!":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"!":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"!":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},"?":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"2":{"docs":{},"!":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"=":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"=":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}},"k":{"docs":{},"!":{"docs":{},"=":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"y":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"+":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"=":{"docs":{},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},">":{"5":{"7":{"5":{"docs":{},".":{"2":{"7":{"6":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"9":{"5":{"docs":{},".":{"2":{"7":{"6":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00808080808080808},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":5.013888888888889},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.010899182561307902},"coverage.html":{"ref":"coverage.html","tf":0.005}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.011049723756906077},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":5.0144927536231885},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.011876484560570071},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.013888888888888888},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":5.016348773841962},"coverage.html":{"ref":"coverage.html","tf":0.005}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.01289134438305709},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.014492753623188406},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":5.016627078384798},"coverage.html":{"ref":"coverage.html","tf":0.005}},"e":{"docs":{},"d":{"docs":{},"|":{"docs":{},"i":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"|":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}},"*":{"2":{"0":{"0":{"0":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},";":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}},"docs":{}}}}}}}}},"=":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"docs":{}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":5.000800320128051},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}},"docs":{}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"y":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886},"overview.html":{"ref":"overview.html","tf":0.1},"modules.html":{"ref":"modules.html","tf":0.2},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029},"coverage.html":{"ref":"coverage.html","tf":0.01}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}},"e":{"docs":{},"d":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"2":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"docs":{}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}},"e":{"docs":{},"d":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"3":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}},"e":{"docs":{},"d":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"2":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"docs":{}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}},"e":{"docs":{},"d":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"3":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.07676767676767676},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0547945205479452},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004195804195804196},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.06111111111111111},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.05994550408719346},"coverage.html":{"ref":"coverage.html","tf":0.03}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":5.054794520547945},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}}}}}}}}}}},"docs":{}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"\\":{"docs":{},"n":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776}}}},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}},"d":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}},"k":{"docs":{},"e":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}},"x":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"modules.html":{"ref":"modules.html","tf":10.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.00398406374502}}}},"e":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.07142857142857142}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"s":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.06},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":5.02},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}},"+":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}},"=":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"docs":{}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.01289134438305709},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.013888888888888888},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.016908212560386472},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.013623978201634877},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0166270783847981}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"u":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"|":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"g":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015}}}}}}}}}}}}}}},"c":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.027972027972027972},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.019662921348314606},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.006993006993006993},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0056022408963585435}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.02097902097902098}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0660377358490566}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}}},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}}},"2":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}}},"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.0392156862745098},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.024844720496894408},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.055944055944055944},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.012121212121212121},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.03309859154929577},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.024615384615384615},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.021208483393357343},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.019444444444444445},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.014492753623188406},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.01907356948228883},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.014251781472684086}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01593625498007968}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561}}}}}},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.02}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004225352112676056}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"x":{"docs":{},"'":{"docs":{},")":{"docs":{},",":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}},"docs":{}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"y":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"s":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}},"v":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.014141414141414142},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.016853932584269662},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.011111111111111112},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.01634877384196185},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.009501187648456057}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"2":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"docs":{}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"2":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00808080808080808},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.011111111111111112},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.010899182561307902}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"œ":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"overview.html":{"ref":"overview.html","tf":0.05},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.03896103896103896},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"overview.html":{"ref":"overview.html","tf":10.05}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.0196078431372549}}}}}}}}},"i":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},",":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.022099447513812154},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.02097902097902098},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.014805922368947578},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.014492753623188406},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.014251781472684086}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"k":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0055248618784530384},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010101010101010102},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00808080808080808},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}}}}}}},"c":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.009208103130755065},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.025280898876404494},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.014788732394366197},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.017062937062937062},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008978675645342313},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.024409763905562223},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.012077294685990338},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.011876484560570071}},"e":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0055248618784530384},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011235955056179775},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.011971830985915493},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00951048951048951},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"s":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.02578268876611418},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.022222222222222223},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.016666666666666666},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.016908212560386472},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.01634877384196185},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0166270783847981}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013}},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{},"i":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"|":{"docs":{},"i":{"docs":{},"u":{"docs":{},"n":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"|":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026}},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}}}},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.011267605633802818}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}},"[":{"docs":{},"v":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.005633802816901409}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}},"f":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.0196078431372549},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.03271028037383177},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.018633540372670808},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.03496503496503497},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.023809523809523808},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0055248618784530384},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.03},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.026785714285714284},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005034965034965035},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.02247191011235955},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003076923076923077},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}}}}},"m":{"docs":{},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"x":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02}}},"d":{"docs":{},"f":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.01056338028169014},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003916083916083916},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{},"i":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"u":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"e":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}},"a":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004755244755244755},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}},"e":{"docs":{},"v":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886},"overview.html":{"ref":"overview.html","tf":0.1},"modules.html":{"ref":"modules.html","tf":0.2},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029},"coverage.html":{"ref":"coverage.html","tf":0.01}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.004195804195804196},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0028011204481792717}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"3":{"0":{"0":{"0":{"0":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.09375},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.10526315789473684},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005314685314685315},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":5.03125},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":5.035087719298246},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.04419889502762431},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.028282828282828285},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.018309859154929577},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.01818181818181818},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.007603041216486595},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.022222222222222223},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.04106280193236715},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.021798365122615803},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.040380047505938245}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.026143790849673203},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.028037383177570093},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.027972027972027972},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.011111111111111112},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.010899182561307902},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008978675645342313}}}}}},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005034965034965035},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0660377358490566}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.02112676056338028},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.009859154929577466}},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926}},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"+":{"docs":{},"/":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"l":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}},"s":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.01841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.024154589371980676},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.023752969121140142}},"c":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}}}},"l":{"docs":{},"e":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.047619047619047616},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.05555555555555555},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776}}}}}},"t":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":5.01123595505618},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.018309859154929577},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.015664335664335664},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.010804321728691477},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":5.055555555555555},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}}},"i":{"docs":{},"c":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"w":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"s":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"|":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.03896103896103896},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003076923076923077},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01195219123505976},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":5.025974025974026},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"o":{"docs":{},"r":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001958041958041958},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0028011204481792717}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}},":":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004225352112676056},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.03571428571428571},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010101010101010102},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.009859154929577466},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"e":{"docs":{},"l":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"1":{"0":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.016574585635359115},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.005034965034965035},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.006002400960384154},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.022222222222222223},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.028985507246376812},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.021798365122615803},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.028503562945368172}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.046875}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}},"n":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}}},"a":{"docs":{},"g":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}},"r":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004225352112676056}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}},"t":{"docs":{},"e":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.006338028169014085},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.009203681472589036}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.03867403314917127},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.022222222222222223},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.0625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.03651685393258427},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.03896103896103896},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.021830985915492956},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.01006993006993007},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.006802721088435374},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.03611111111111111},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.05314009661835749},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.035422343324250684},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.052256532066508314}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"6":{"5":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"modules.html":{"ref":"modules.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"modules.html":{"ref":"modules.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.01122334455667789}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.014044943820224719}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.016853932584269662},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":5.004489337822672},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}},":":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}}},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},",":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.07936507936507936},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441},"coverage.html":{"ref":"coverage.html","tf":0.01}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"coverage.html":{"ref":"coverage.html","tf":0.01}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"coverage.html":{"ref":"coverage.html","tf":0.015}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.024390243902439025},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144},"coverage.html":{"ref":"coverage.html","tf":0.03}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.011363636363636364},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.01}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.006993006993006993},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"coverage.html":{"ref":"coverage.html","tf":0.01}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.013888888888888888},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{},">":{"docs":{},"\\":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926}}}}}},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00808080808080808},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004225352112676056}}}}}}}},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.05660377358490566},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.012422360248447204},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.015873015873015872},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.038461538461538464},"components/FooterComponent.html":{"ref":"components/FooterComponent.html","tf":0.04878048780487805},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.022727272727272728},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0273972602739726},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.03125},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.03508771929824561},"components/ScreenComponent.html":{"ref":"components/ScreenComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.025974025974025976},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.014141414141414142},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.011111111111111112},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.010899182561307902},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}},"=":{"docs":{},"`":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0055248618784530384},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029850746268656716},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.011049723756906077},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.012121212121212121},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.016853932584269662},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010101010101010102},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043}},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"e":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}},"c":{"docs":{},"k":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"u":{"docs":{},"e":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.010101010101010102},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.008333333333333333},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.008174386920980926},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}}}},"e":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"+":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"5":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358}}}},"e":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358}}}},"f":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"3":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"5":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"6":{"docs":{},"\"":{"docs":{},",":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}},"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}},"docs":{}},"docs":{}}}}}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"2":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"4":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}},"e":{"docs":{},"=":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.001958041958041958},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0028011204481792717}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"f":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"f":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"1":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"2":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"3":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}},"docs":{}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"4":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"#":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}}}}},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},"c":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"e":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}},"docs":{}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004001600640256103}},"(":{"docs":{},"c":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}},"{":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0020008003201280513}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"*":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}}}}}}},"?":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"\\":{"docs":{},"n":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"+":{"docs":{},"=":{"1":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"=":{"5":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"p":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.02}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008978675645342313}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"`":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"d":{"docs":{},"f":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"1":{"2":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"4":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"2":{"2":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"4":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"2":{"5":{"5":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"docs":{}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"0":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}},"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"0":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.003076923076923077},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004401760704281713}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}},"o":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"c":{"docs":{},"h":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.026785714285714284}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.018691588785046728},"components/ChangeColorComponent.html":{"ref":"components/ChangeColorComponent.html","tf":0.006211180124223602},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936},"components/EnumerationNodeComponent.html":{"ref":"components/EnumerationNodeComponent.html","tf":0.019230769230769232},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0423572744014733},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.012121212121212121},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.03409090909090909},"components/MatrixComponent.html":{"ref":"components/MatrixComponent.html","tf":0.0136986301369863},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.015625},"components/RemoveNodeComponent.html":{"ref":"components/RemoveNodeComponent.html","tf":0.017543859649122806},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.011235955056179775},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.07792207792207792},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.019444444444444445},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.06038647342995169},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.021798365122615803},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.06175771971496437},"coverage.html":{"ref":"coverage.html","tf":0.005}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.014732965009208104},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00808080808080808},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004225352112676056},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.00951048951048951},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.010804321728691477},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.019444444444444445},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.026570048309178744},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.01907356948228883},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.026128266033254157}},"i":{"docs":{},"d":{"docs":{"components/RemoveEdgeComponent.html":{"ref":"components/RemoveEdgeComponent.html","tf":0.046875}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.009154929577464789}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"1":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0013986013986013986},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{},"'":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04477611940298507},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.012345679012345678}}}},"m":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0036363636363636364},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}}}}},"w":{"docs":{},"o":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.006060606060606061},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.004830917874396135},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.004750593824228029}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.0055248618784530384},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.00966183574879227},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.02830188679245283},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"'":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}},"p":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.010101010101010102}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"coverage.html":{"ref":"coverage.html","tf":0.005}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.01267605633802817},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0022377622377622378},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"r":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}}}},"v":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009433962264150943}}}}},"a":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.018867924528301886}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.004929577464788733}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"v":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}}}},"s":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}},"é":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.02112676056338028},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0025174825174825175},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}}},"c":{"docs":{},"e":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856}}}},"e":{"docs":{},"w":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008978675645342313}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.007856341189674524}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.008426966292134831},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0033566433566433566},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.005555555555555556},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.005449591280653951},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0035211267605633804},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"o":{"docs":{},"u":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.006535947712418301},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.009345794392523364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014925373134328358},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.041666666666666664},"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.015},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.02247191011235955},"components/SelectComponent.html":{"ref":"components/SelectComponent.html","tf":0.012987012987012988},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.014084507042253521},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.01146853146853147},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"j":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.008978675645342313}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"?":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"f":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}}}}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0028169014084507044}}},"docs":{}}}}}}}}},"=":{"docs":{},"i":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}},"a":{"docs":{},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}},"p":{"docs":{},"g":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"n":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.011049723756906077},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0044755244755244755},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003201280512204882},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.007246376811594203},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.007125890736342043}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}},"t":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144},"coverage.html":{"ref":"coverage.html","tf":0.015}}}}}}}}}}}}}},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144},"coverage.html":{"ref":"coverage.html","tf":0.015}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.001841620626151013},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}}}}}}}}}}}}}},"n":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}},"o":{"docs":{},"f":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"e":{"docs":{},"+":{"docs":{},"=":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}},"e":{"docs":{},"+":{"docs":{},"=":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.016574585635359115},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0036363636363636364},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.003601440576230492},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.014492753623188406},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.014251781472684086}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.007366482504604052},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.00966183574879227},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.009501187648456057}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.005},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0056179775280898875}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},"e":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/ChangeSizeScreenComponent.html":{"ref":"components/ChangeSizeScreenComponent.html","tf":0.007936507936507936}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.008928571428571428}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}}}}}}}}},"\"":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}},"g":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"i":{"docs":{},"c":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0012004801920768306}}}}}}}},"o":{"docs":{},"p":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ChangeIdNodeComponent.html":{"ref":"components/ChangeIdNodeComponent.html","tf":0.013986013986013986}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945}},"+":{"docs":{},"=":{"1":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}},"docs":{}},"3":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156}}},"docs":{}},"docs":{}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.027777777777777776}},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.003683241252302026},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00404040404040404},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.0024154589371980675},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.0023752969121140144}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/HeaderComponent.html":{"ref":"components/HeaderComponent.html","tf":0.013888888888888888}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.002112676056338028}},"a":{"docs":{},"d":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MessageComponent.html":{"ref":"components/MessageComponent.html","tf":0.01},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0016783216783216783},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0024009603841536613}},"s":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00796812749003984},"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.102803738317757},"components/GrapheFromEdgesListComponent.html":{"ref":"components/GrapheFromEdgesListComponent.html","tf":0.016574585635359115},"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.012121212121212121},"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.02247191011235955},"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.006338028169014085},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.008391608391608392},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.008403361344537815},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.011111111111111112},"interfaces/IUnweightedEdgeTyped.html":{"ref":"interfaces/IUnweightedEdgeTyped.html","tf":0.01932367149758454},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.021798365122615803},"interfaces/IWeightedEdgeTyped.html":{"ref":"interfaces/IWeightedEdgeTyped.html","tf":0.028503562945368172},"coverage.html":{"ref":"coverage.html","tf":0.01}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AddWeightedEdgeComponent.html":{"ref":"components/AddWeightedEdgeComponent.html","tf":0.014018691588785047}}}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}},"?":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/ScreenboxComponent.html":{"ref":"components/ScreenboxComponent.html","tf":0.0028089887640449437}}}}}}}},"a":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},"b":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}},"t":{"docs":{},"e":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/GrapheFromMatrixAdjaComponent.html":{"ref":"components/GrapheFromMatrixAdjaComponent.html","tf":0.00202020202020202},"interfaces/IUnweightedEdge.html":{"ref":"interfaces/IUnweightedEdge.html","tf":0.002777777777777778},"interfaces/IWeightedEdge.html":{"ref":"interfaces/IWeightedEdge.html","tf":0.0027247956403269754}}}}}}}},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AddNodeComponent.html":{"ref":"components/AddNodeComponent.html","tf":0.013071895424836602},"injectables/DarkModeService.html":{"ref":"injectables/DarkModeService.html","tf":0.017857142857142856},"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}},".":{"docs":{},"j":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.00398406374501992}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0014084507042253522}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.002244668911335578},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.001600640256102441}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.005611672278338945}},"s":{"docs":{},")":{"docs":{},"/":{"2":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734}}},"docs":{}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/AlgorithmService.html":{"ref":"injectables/AlgorithmService.html","tf":0.0007042253521126761}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.003367003367003367}}}}}}}}},"_":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0005594405594405594},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}},"x":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.004801920768307323}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}}},"y":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.01090909090909091},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.01640656262505002}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0002797202797202797},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.00040016006402561027}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/GrapheService.html":{"ref":"injectables/GrapheService.html","tf":0.0011188811188811189},"interfaces/IPosition.html":{"ref":"interfaces/IPosition.html","tf":0.0008003201280512205}}}}}},"a":{"docs":{},"r":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.006734006734006734}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"+":{"docs":{},"=":{"3":{"0":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.004489337822671156}}},"docs":{}},"docs":{}}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/SaveUploadService.html":{"ref":"injectables/SaveUploadService.html","tf":0.001122334455667789}}}}}}}}}}}}}}}}},"length":4687},"corpusTokens":["0","0);//black","0);//red","0.7","0/1","0/2","0/3","0/4","0/9","0123456789abcdef","0]!=\"direct","0]==\"direct","0]==\"undirect","1","1/1","10","100","103","105},{x","106","108","1154","12","121.28128725008331","1221","1227","133},{x","144},{x","16.1.4","165},{x","17/18","173},{x","174","174},{x","178},{x","19","1]==\"unweight","1]==\"weight","2","2)||400","2*this.cy.edges().length)/(this.cy.nodes().length*(this.cy.nodes().length","2/2","2/4","20","2000","200},{x","21","211},{x","217},{x","227},{x","239},{x","23},{x","241","24},{x","25","26","261","263.51311061937736","264},{x","274},{x","276","287},{x","295","299},{x","2d","3","3/3","30","300","301","314},{x","319","323","323},{x","350","351","353},{x","378","380","382","4","4/19","4/4","400+'px';//default","41},{x","43},{x","46},{x","47},{x","48","493","49},{x","5","5/5","5/7","50","505.276","530","533","541","577","592","595.276","5},{x","617","63/65","64","7/7","7/8","70","702","71","719","73","736","739","772","800","82","835","845","87","875","87},{x","88","885","887","900","919","94","958","96","970","98","_","a.click","a.data('weight","a.download","a.href","action","ad","add","addgraphefromedgeslist.style.display=\"block","addgraphefromedgeslist.style.display=\"non","addgraphefromedgeslist=container.el.nativeelement.queryselector('.addgraphefromedgeslist","addgraphewithmatrix.style.display=\"block","addgraphewithmatrix.style.display=\"non","addgraphewithmatrix=container.el.nativeelement.queryselector('.addgraphewithmatrix","addgraphewithmatrix=this.container.el.nativeelement.queryselector('.addgraphewithmatrix","addit","addnod","addnode(contain","addnode(container:any,container2:any):void","addnodecompon","address","addweightededg","addweightededge(contain","addweightededge(container:any,container2:any):void","addweightededgecompon","adja","adja.compon","adja.component.css","adja.component.html","adja.component.t","adja/graph","adjac","adjacencylist","adjacencylist.push(adjacencylistentri","adjacencylist:array","adjacencylistentri","adjacencymatrix","adjacencymatrix:array","adjacentnod","adjanstr","adjanstring+=`${adjnode[i","adjanstring+=`${elements[i","adjanstring:str","adjnod","adjnode.filter(item","adjnode.length","adjnode:array=outgoingedges.map((edge:ani","adjust","affich","against","algo","algorithm","algorithm:str","algorithmservic","algos:algorithmservice,protect","algos:ani","allpositive:boolean=tru","alphabet","alphabets0","alreadi","anchor","angular","angular/common","angular/common/http","angular/cor","angular/form","angular/platform","angular/servic","anim","anoth","any,time:number=2000","app","app.compon","app.component.css","app.component.html","appcompon","appli","applic","application/json","appmodul","approutingmodul","apr","area","array","array.from","array.from(array(200","array.isarray(matrix","arraynemming=this.graphes.alphabet","arraynemming=this.graphes.numbersarray","arraystring:str","arraystring=text.split","arrow","artifact","assets/i18n","assign","associ","astaranim","astaranimation(contain","astaranimation(container:any):void","aug","automat","b.data('weight","b:ani","background","background_color_nod","background_color_node_algo","backgroundcolor","backgroundcolor:str","base","befor","bellman","bellmanford","bellmanford.distanceto(targetnod","bellmanford.pathto(targetnod","bellmanfordalgorithm","bellmanfordalgorithm(rootnodeid","bellmanfordanim","bellmanfordanimation(rootnodeid","between","bezier","bf","bfs(node","bfs(node:any,visitednodes:any):void","bfs:any=container.graphes.cy.elements().bf","bfsanim","bfsanimation(rootnodeid","bg","bgcolor","black","blob","blob([json.stringify(elementsjson","block","blue","boolean","boolean=fals","bootstrap","border","box","box'","breadth","break","brows","browser","browsermodul","build","button","buttonclick","buttonclicked:str","buttonmanupilation.style.display=\"block","buttonmanupilation.style.display=\"non","buttonmanupilation=container.el.nativeelement.queryselector('.buttonmanupil","buttonmanupilation=this.container.el.nativeelement.queryselector('.buttonmanupil","calcul","call","can't","capabl","case","catch","cell","chang","changealgorithm","changealgorithm(contain","changealgorithm(container:any):void","changechang","changechanges(contain","changechanges(container:ani","changecolor","changecolor(contain","changecolor(container:any,container2:ani","changecolorcompon","changecoloredg","changecoloredge(edg","changecoloredge(edge:any,color:string,lineedgecolor:string,targetarrowcolor:string,time:number=10","changecolornod","changecolornode(nod","changecolornode(node:any,bgcolor:string,color:string,time:number=10","changeidnodecompon","changelanguag","changelanguage(ev","changenodeenum","changenodeenum(contain","changenodeenum(container:any):void","changenodeid","changenodeid(contain","changenodeid(container:any,container2:any):void","changes.emit","changeselect","changeselect:str","changesizescreen","changesizescreen(contain","changesizescreen(container:any,container2:any):void","changesizescreencompon","changestylegraph","changestylegraphe(typegraph","changestylegraphe(typegraphe:string):void","changetypegraph","changetypegraphe(contain","changetypegraphe(container:any):void","charact","check","chemin","chngetypegraph","chngetypegraphe(data","chngetypegraphe(data:str","choic","class","class:str","clean","cleanup","clear","cli","click","code","color","color',bgcolor","color',lineedgecolor","color',this.background_color_nod","color',this.color_line_edg","color':backgroundcolor","color.compon","color.component.css","color.component.html","color.component.t","color/chang","color:str","color_line_edg","color_line_edge_algo","color_nod","color_node_algo","column","come","command","commonmodul","compar","complet","compon","component,eventemitter,input","component,input","component.edges().styl","component.nodes().foreach((node:ani","component.nodes().styl","components/add","components/chang","components/enumer","components/footer/footer.compon","components/graph","components/header/header.compon","components/info/info.compon","components/matrix/matrix.compon","components/message/message.compon","components/remov","components/screen/screen.compon","components/screenbox/screenbox.compon","components/select/select.compon","condit","connect","console.log","console.log(matchundirectedweighted[1","console.log(matchundirectedweighted[2","console.log(matchundirectedweighted[3","const","constant","constructor","constructor(darkmod","constructor(el","constructor(graph","constructor(priv","constructor(protect","constructor(transl","contain","container'","container.algorithm","container.algorithm==\"dijkstraab","container.algorithm==\"prim","container.buttonclick","container.buttonclicked===\"addvertic","container.changeselect","container.changeselect==\"changecoloredg","container.changeselect==\"changecoloredgesalgo","container.changeselect==\"changecolornodesalgo","container.changeselect==\"changecolorscreen","container.containerheight=50","container.el.nativeelement.queryselector('.formachangesizescreen","container.el.nativeelement.queryselector('.formaddedg","container.el.nativeelement.queryselector('.formaddnod","container.el.nativeelement.queryselector('.formchangecolor","container.el.nativeelement.queryselector('.formremoveedg","container.el.nativeelement.queryselector('.formremovenod","container.graphes.background_color_nod","container.graphes.background_color_node,container.graphes.color_nod","container.graphes.background_color_node_algo","container.graphes.background_color_node_algo,container.graphes.color_node_algo,++i*2000","container.graphes.background_color_node_algo,container.graphes.color_node_algo,i++*2000","container.graphes.background_color_node_algo,container.graphes.color_node_algo,i++*tim","container.graphes.background_color_node_algo,container.graphes.color_node_algo,j","container.graphes.changecoloredge(edge,container.graphes.data_edge_color_algo,container.graphes.color_line_edge_algo,container.graphes.target_arrow_color_algo,j=++i*2000","container.graphes.changecoloredge(pathtotarget.edges()[k],container.graphes.data_edge_color_algo,container.graphes.color_line_edge_algo,container.graphes.target_arrow_color_algo,i*2000","container.graphes.changecoloredge(pathtotarget.edges()[k],container.graphes.data_edge_color_algo,container.graphes.color_line_edge_algo,container.graphes.target_arrow_color_algo,i*tim","container.graphes.changecolornode(edge.sourc","container.graphes.changecolornode(edge.target","container.graphes.changecolornode(nod","container.graphes.changecolornode(pathtotarget.nodes()[k","container.graphes.changecolornode(targetnod","container.graphes.changetypegraphe(contain","container.graphes.ci","container.graphes.color_line_edge_algo","container.graphes.color_nod","container.graphes.cy.$(`#${rootnodeid","container.graphes.cy.$(`#${targetnodeid","container.graphes.cy.add(json.el","container.graphes.cy.edges().foreach((edge:ani","container.graphes.cy.edges().toarray","container.graphes.cy.elements().bellmanford","container.graphes.cy.elements().df","container.graphes.cy.elements().dijkstra","container.graphes.cy.elements().remov","container.graphes.cy.fit","container.graphes.cy.json","container.graphes.cy.nodes().first","container.graphes.cy.nodes().foreach((node:ani","container.graphes.cy.nodes().length","container.graphes.cy.nodes().s","container.graphes.cy.reset","container.graphes.data_edge_color_algo","container.graphes.posit","container.graphes.resetcolor","container.graphes.target_arrow_color_algo","container.graphes.typegraphe.split","container.messag","container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1","container.message+=messag","container.message+=this.translate.instant(\"graphes.msg18","container.message+=this.translate.instant(\"graphes.msg19","container.message=\"kruskal(mst","container.message=\"prime(mst","container.message=container.translate.instant(\"algos.msg10","container.message=container.translate.instant(\"algos.msg11","container.message=container.translate.instant(\"algos.msg12","container.message=container.translate.instant(\"algos.msg8","container.message=lastmessag","container.message=this.translate.instant(\"algos.msg11","container.message=this.translate.instant(\"algos.msg14","container.message=this.translate.instant(\"algos.msg7\",{algorithm:container.algorithm","container.message=this.translate.instant(\"graphefromedgelist.msg1","container.message=this.translate.instant(\"graphefromedgelist.msg6\");///////chang","container.message=this.translate.instant(\"graphefromedgelist.msg7","container.message=this.translate.instant(\"graphefrommatrix.msg5","container.message=this.translate.instant(\"graphefrommatrix.msg6","container.message=this.translate.instant(\"graphefrommatrix.msg6\");///////////////////////chng","container.message=this.translate.instant(\"graphes.msg1","container.message=this.translate.instant(\"graphes.msg10\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg11\",{sourceid:edge.source().id(),targetid:edge.target().id","container.message=this.translate.instant(\"graphes.msg12\",{nodeid:node.data('id","container.message=this.translate.instant(\"graphes.msg17","container.message=this.translate.instant(\"graphes.msg2","container.message=this.translate.instant(\"graphes.msg22","container.message=this.translate.instant(\"graphes.msg23","container.message=this.translate.instant(\"graphes.msg24","container.message=this.translate.instant(\"graphes.msg25\",{last:container.selectednode[0],new:container2.newnodeid","container.message=this.translate.instant(\"graphes.msg26","container.message=this.translate.instant(\"graphes.msg27","container.message=this.translate.instant(\"graphes.msg28","container.message=this.translate.instant(\"graphes.msg29","container.message=this.translate.instant(\"graphes.msg3","container.message=this.translate.instant(\"graphes.msg30","container.message=this.translate.instant(\"graphes.msg31","container.message=this.translate.instant(\"graphes.msg32","container.message=this.translate.instant(\"graphes.msg33","container.message=this.translate.instant(\"graphes.msg34","container.message=this.translate.instant(\"graphes.msg35","container.message=this.translate.instant(\"graphes.msg36","container.message=this.translate.instant(\"graphes.msg37\",{height:container2.height","container.message=this.translate.instant(\"graphes.msg38","container.message=this.translate.instant(\"graphes.msg39","container.message=this.translate.instant(\"graphes.msg4","container.message=this.translate.instant(\"graphes.msg40","container.message=this.translate.instant(\"graphes.msg41","container.message=this.translate.instant(\"graphes.msg43","container.message=this.translate.instant(\"graphes.msg44","container.message=this.translate.instant(\"graphes.msg45","container.message=this.translate.instant(\"graphes.msg46","container.message=this.translate.instant(\"graphes.msg47\",{source:container2.sourceid,target:container2.targetid","container.message=this.translate.instant(\"graphes.msg48\",{source:container2.sourceid,target:container2.targetid","container.message=this.translate.instant(\"graphes.msg49","container.message=this.translate.instant(\"graphes.msg50","container.message=this.translate.instant(\"graphes.msg51","container.message=this.translate.instant(\"graphes.msg52\",{nodeid:container2.nodeid","container.message=this.translate.instant(\"graphes.msg53\",{nodeid:container2.nodeid","container.message=this.translate.instant(\"graphes.msg54\",{nodeid:element.data('id","container.message=this.translate.instant(\"graphes.msg55\",{nodeid:element.data('id","container.message=this.translate.instant(\"graphes.msg56\",{source:element.source().id(),target:element.target().id","container.message=this.translate.instant(\"graphes.msg57\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight","container.message=this.translate.instant(\"graphes.msg58\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight","container.message=this.translate.instant(\"graphes.msg59\",{source:element.source().id(),target:element.target().id","container.message=this.translate.instant(\"graphes.msg60","container.message=this.translate.instant(\"graphes.msg7\",{selectednode1:container.selectednode[0],selectednode2:container.selectednode[1],weight:container.weight","container.message=this.translate.instant(\"graphes.msg8","container.message=this.translate.instant(\"graphes.msg9","container.message=this.translate.instant(\"saveuploads.msg1","container.message=this.translate.instant(\"saveuploads.msg2","container.message=this.translate.instant(\"screenbox.msg23","container.message=this.translate.instant('graphes.msg23","container.message=this.translate.instant('screenbox.msg41","container.nodeid=largestnodeid","container.nodeidchanged=container2.newnodeid","container.nodename=\"numeriqu","container.remov","container.remove==\"remov","container.restorearray","container.restorearray.push(elem","container.saveupload","container.selectednod","container.selectednode.push(node.data('id","container.typegraph","container.typegraphe.split","container.typegraphe=json.typegraph","container.typegraphe=this.typegraphe=\"direct","container.typegraphe=this.typegraphe=\"undirect","container.typegraphe=this.typegraphe=cytyp","container.typegraphe=this.typegraphe=typegraph","container.weight=nul","container2","container2.height+'px","container2.height=screen.style.height","container2.height=screen.style.height.slice(0","container2.listedgetextarea","container2.matrixtext","container2.newnodeid","container2.newnodeid=nul","container2.nodeid","container2.nodeid=nul","container2.sourceid","container2.targetid","container2.weightform=nul","container:ani","containerheight","containerheight:number=70;//height","containsinvalidcharact","containsinvalidcharacters(inputstr","containsinvalidcharacters(inputstring:str","correspond","counter","coverag","creat","creategraphefromadjancymatrix","creategraphefromadjancymatrix(el","creategraphefromadjancymatrix(elements:any,directed:boolean,weighted:boolean,container:any):void","creategraphefromlistedg","creategraphefromlistedges(contain","creategraphefromlistedges(container:any,container2:any):void","creategraphel","creategraphelements(adjacencymatrix","current","currentd","currentdate.getd","currentdate.getfullyear","currentdate.gethour","currentdate.getminut","currentdate.getsecond","currentnod","currentnode.neighborhood().nod","curv","cy","cy.elements().floydwarshal","cy.jpg","cy.nodes().foreach((nodea","cy.nodes().foreach((nodeb","cy.png","cyelements:any=this.cy.el","cytoscap","cytype:string=this.typegraph","d","d'anim","dark","darkmod","darkmodes:darkmodeservic","darkmodes:darkmodeservice,priv","darkmodeservic","data","data(weight","data_edge_color","data_edge_color_algo","date","datetim","day:numb","de","dec","declar","default","defin","degre","degree:node.degre","delay","delet","densiti","dep","depth","depth:ani","descript","desir","destroy","destroyed.destroy","dev","develop","df","dfsanim","dfsanimation(rootnodeid","digit","dijkstra","dijkstra'","dijkstra.distanceto(container.graphes.cy.$(`#${targetnodeid","dijkstra.distanceto(targetnod","dijkstra.pathto(container.graphes.cy.$(`#${targetnodeid","dijkstra.pathto(targetnod","dijkstraalgorithm","dijkstraalgorithm(rootnodeid","dijkstraanim","dijkstraanimation(rootnodeid","direct","directed:direct","directed=fals","directed=tru","directive|pipe|service|class|guard|interface|enum|modul","directori","disabl","disablelabel","disablelabell:str","display","dist","distanc","distancetotarget","doc","doc:ani","docnam","docnamearray:str","docnamearray=docname.split","document","document.createelement('a","document.createelement('input","doesn't","download","dri","délai","e","e.g","e.style('color","e.style('lin","e.style('target","e2","e:ani","each","edg","edge.compon","edge.component.css","edge.component.html","edge.component.t","edge.data(\"weight","edge.data(\"weight\")==element.weight","edge.data('weight","edge.data('weight')||1","edge.remov","edge.sourc","edge.source().id","edge.source().id()==container2.targetid","edge.source().id()==node2","edge.source().id()},${this.translate.instant(\"info.t","edge.style('color',color","edge.style('color',this.data_edge_color","edge.style('lin","edge.style('target","edge.target","edge.target().id","edge.target().id()==container2.targetid","edge.target().id()==container2.targetid)||(edge.target().id()==container2.sourceid","edge.target().id()==element.sourc","edge.target().id()==node1","edge.target().id()==node2","edge/add","edge/remov","edge:ani","edge=el","edge=this.cy.add","edgei:ani","edgei=edg","edges.foreach((edge:ani","edges.push(edg","edges.push(edgetext","edges.sort((a:ani","edges:array","edgesourceid","edgetargetid","edgetext:str","edgetext=`${edge.source().id","el","el:elementref,protect","elem:ani","elem=container.restorearray.pop","elem={status:\"add\",element:edg","elem={status:\"add\",element:nod","elem={status:\"add\",element:nodenew","elem={status:\"remove\",element:edg","elem={status:\"remove\",element:edgei","elem={status:\"remove\",element:nod","element","element+=`,${this.translate.instant(\"info.w","element.id","element.isedg","element.remov","element.sourc","element.source().id()==node.id","element.target","element.target().id()==node.id","element.weight","element:string=`(${this.translate.instant(\"info.","element=elem.el","elementref","elementref,protect","elements.filter(item","elements.foreach((element:ani","elements:any=container2.sendel","elements:array=incomersedges.map((edge:ani","elements:array=this.creategraphelements(adjacencymatrix","elements[i","elementsjson","elementsjson.typegraph","email","emailus","emit","emitt","empti","enabl","end","enter","enumer","enumerationnodecompon","err:boolean=fals","err=tru","error","est","event","event.target","event.target.id","eventemitt","evt.cyposit","evt.posit","evt.target","evt:ani","execut","exist","exist:boolean=fals","exist:boolean=node.isnod","exist=tru","export","express","extend","fail","fals","famili","fcolor","feb","field","file","fileread","find","first","firsttype:string=edges[0]?.typ","fit","flag","flesh","fleshcolor","fleshcolor:string=this.getrandomcolor","floyd","floydwarshal","floydwarshall.distance(nodea","floydwarshall.path(nodea","floydwarshallalgorithm","floydwarshallalgorithm(contain","focu","focus","focus.set","follow","font","footer","footer.component.css","footer.component.html","footercompon","for(i=0;i","for(let","ford","form","formachangesizescreen","formachangesizescreen.style.display=\"block","formachangesizescreen.style.display=\"non","formaddedg","formaddedge.style.display=\"non","formaddedge.style.display='non","formaddnod","formaddnode.style.display=\"block","formaddnode.style.display=\"non","formaddnode=container.el.nativeelement.queryselector('.formaddnod","format","formchangecolor","formchangecolor.style.display=\"block","formchangecolor.style.display=\"non","formchangenodeid.style.display","formchangenodeid.style.display=\"non","formchangenodeid=container.el.nativeelement.queryselector('.formchangenodeid","formremoveedg","formremoveedge.style.display=\"block","formremoveedge.style.display=\"non","formremovenod","formremovenode.style.display=\"block","formremovenode.style.display=\"non","formsmodul","found","full","fullgraph","fullgraph=tru","fullgraphe=tru","function","functionhandl","functionhandler:ani","further","gener","generategraph","generatepdf(container:any,docname:string,username:string,emailuser:string,urlsite:string):void","generatepdfservic","get","getadjancylist","getadjancylist():array","getbuttonclickedid","getbuttonclickedid(ev","getdatatim","getdegreenod","getdegreenodes():array","getdensityofgraph","getdensityofgraphe():numb","getedgeid","getedgeids():array","getlisteofedg","getlisteofedge():str","getlistofnod","getlistofnode():str","getnodeid","getnodeids():array","getrandomcolor","getrandomcolor():str","given","go","graph","graph.jpg","graph.png","graphe.json","graphefromedgeslistcompon","graphefrommatrixadjacompon","graphes:ani","graphes:grapheservic","graphes:grapheservice,protect","grapheservic","grapheservice,algorithmservice,saveuploadservice,darkmodeservic","group","handl","handler","haystack","header","header.component.css","header.component.html","headercompon","height","help","here","hexadecim","highest","hook","hours:numb","htmlinputelement).files?.[0","http://localhost:4200","httpclient","httpclientmodul","httploaderfactori","httploaderfactory(http","i*2000","i*20000","i*tim","i505.276","i:ani","i:number=0","i:number=0;i","i=0","id","id:node.data('id","identifi","idexists=fals","idexists=tru","if(!container.graphes.cy.nodes().length","if(!container.restorearray.length","if(!err","if(!exist","if(!nodeexist","if(!nodeexists1","if((container.algorithm==\"dijkstra","if((edge.source().id()==container2.sourceid","if((edge.source().id()==node1","if(adjacencymatrix","if(adjanstr","if(adjanstring.slic","if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixadjancy\"&&container.algorithm!=\"matrixincident\"&&container.algorithm!=\"listeadj","if(container.algorithm==\"bf","if(container.algorithm==\"df","if(container.algorithm==\"floydwarshal","if(container.algorithm==\"krusk","if(container.algorithm==\"tarjan","if(container.buttonclicked==\"addedg","if(container.buttonclicked==\"addvertic","if(container.buttonclicked==\"default","if(container.buttonclicked==\"restor","if(container.buttonclicked===\"addedg","if(container.changeselect==\"addgraphefromedgeslist","if(container.changeselect==\"addgraphefrommatrix","if(container.changeselect==\"changecoloredg","if(container.changeselect==\"changecoloredgesalgo","if(container.changeselect==\"changecolornod","if(container.changeselect==\"changecolornodesalgo","if(container.changeselect==\"changecolorscreen","if(container.changeselect==\"changeidnod","if(container.changeselect==\"changesizescreen","if(container.changeselect===\"changeidnod","if(container.graphes.cy?.nodes().length","if(container.nodename!=\"customtext","if(container.nodename==\"alphab","if(container.nodename==\"customtext","if(container.nodename==\"numeriqu","if(container.remove==\"remov","if(container.remove==\"reset","if(container.remove==\"speci","if(container.restorearray.length!=0","if(container.saveupload==\"sav","if(container.saveupload==\"savejpg","if(container.saveupload==\"savejpgscreen","if(container.saveupload==\"savepng","if(container.saveupload==\"savepngscreen","if(container.saveupload==\"upload","if(container.selectednode.length","if(container.selectednode.length!=0","if(container.typegraph","if(container.typegraphe.split","if(container.weight!=0","if(container2.height","if(container2.nodeid","if(direct","if(edge.data('weight","if(edge.source().id()==container2.sourceid","if(edge.source().id()==element.target","if(edge.type!=firsttyp","if(el","if(elem.status==\"add","if(element.id","if(element.isnod","if(element.sourc","if(element.source().id()==adjnode[i","if(element.target","if(element.target().id()==adjnode[i","if(exist","if(firsttyp","if(i!=adjnode.length","if(i!=components.length","if(i!=container.graphes.cy.nodes().length","if(i!=elements.length","if(i!=this.cy?.edges().length","if(i!=this.cy?.nodes().length","if(i/2!=container.graphes.cy.nodes().length","if(i==0","if(idexists==fals","if(k!=pathtotarget.nodes().length","if(key==\"urlsit","if(key==\"usernam","if(lines.length==0","if(node.data('id')==container2.newnodeid","if(node.data('id')==container2.nodeid","if(node.data('id')==this.alphabets[0","if(node.data('id')==this.counter+1","if(sourceindex==targetindex","if(this.container.nodename==\"alphab","if(this.container.nodename==\"numeriqu","if(this.cy.nodes().length","if(this.cy.nodes().length==0","if(this.isgraphconnected(container)==tru","if(this.issametypegraphe(this.parseextendedformat","if(this.lastelementheight>750","if(this.typegraph","if(this.typegraphe.split","if(typegraphe.split","if(typegraphe==\"direct","if(typegraphe==\"undirect","if(valu","if(weight","if(widthinpoints>575.276","if(widthinpoints>595.276","imag","implement","import","incid","incidencematrix","incidencematrix():array","incidencematrix:array","incidencematrix[sourceindex][edgeindex","incidencematrix[targetindex][edgeindex","includ","incomersedg","increas","incrementlastelementheight(increment:number):void","indegree:node.indegre","index","indic","individu","infin","info","info.component.css","info.component.html","infocompon","infodoc(docname:string,username:string,emailuser:string,urlsite:string):void","infographedoc(container:any,lastheight:number):void","inform","initi","initiali","inject","input","input.click","input.onchang","input.typ","inputstr","inputtouch","inputtouched:boolean","instanc","interact","interfac","internation","invalid","invalidcharacterspattern","invalidcharacterspattern.test(inputstr","iposit","isalledgeposit","isalledgepositive(contain","isalledgepositive(container:any):boolean","isdarkmod","isdarkmode:boolean","isdevmod","isdirect","isedgeremov","isedgeremove(node1","isgraphconnect","isgraphconnected(contain","isgraphconnected(container:any):boolean","issametypegraph","issametypegraphe(edg","issametypegraphe(edges:array","issametypegraphe:boolean=tru","issametypegraphe=fals","issquar","issymmetr","issymmetric(matrix","issymmetric(matrix:array","isthelastofpageaddnewpage():void","isweight","isweighted(adjacencymatrix","isweighted(adjacencymatrix:array>):boolean","item","items:array","iunweightededg","iunweightededgetyp","iweightededg","iweightededgetyp","iweightededgetyped|iunweightededgetyped|nul","j","j:number=0","j=i","jan","jpg","jpgpromis","jpgpromise.then((blob:ani","json","json.elements.nodes.foreach((nod","json.parse(e.target?.result","json.typegraph","jspdf","jul","jun","k:number=0;k","karma","key","kruskal'","kruskalanim","kruskalanimation(contain","kruskalanimation(container:any):void","l'arbr","label","lang","lang:str","languag","largestnodeid","last","lastelementheight","lastelementheight:number=0","lastheight","lastheight+=10","lastheight+=30","lastmessag","lastmessage:str","lastnodeid","latex","layout","le","lead","length","letter","letters:str","lifecycl","line","line.match(/\\","linecolor","lineedgecolor","list","list.compon","list.component.css","list.component.html","list.component.t","list/graph","listedgetextarea","listedgetextarea:str","listen","listofedg","listofedge+=el","listofedge:str","listofnod","listofnode+=`${node.data(\"id","listofnode:str","load","loader","local","localstorage.getitem('darkmod","localstorage.getitem('screenheight","localstorage.setitem(\"screencolor\",screen.style.backgroundcolor.tostr","localstorage.setitem('darkmod","localstorage.setitem('screenheight","log","logic","loop","lorsqu","lowercas","made","main","make","manag","mar","margin","mark","match","matchdirect","matchdirected[1].trim","matchdirected[2].trim","matchdirectedweight","matchdirectedweighted[1].trim","matchdirectedweighted[3].trim","matchundirect","matchundirected[1].trim","matchundirected[2].trim","matchundirectedweight","matchundirectedweighted[1].trim","matchundirectedweighted[3].trim","matrix","matrix.component.css","matrix.component.html","matrix.length","matrix:ani","matrix[0].length","matrixadj","matrixadjancy():array","matrixcompon","matrixtext","matrixtext.length","matrixtext.split('\\n","matrixtext.trim","matrixtext:str","maxheight","maximum","maxwidth","memberof","messag","message+=node.data('id","message.component.css","message.component.html","message.length","message:str","message=message.substring(0","message=this.translate.instant(\"algos.msg13\",{index:++i","messagecompon","met","metadata","method","minim","minimum","minimumspanningtreeedg","minimumspanningtreeedges(contain","minimumspanningtreeedges(container:ani","minut","minutes:number|str","mismatch","mode","mode.servic","mode.service.t","modul","month","month:str","months[currentdate.getmonth","more","msg","msgbox","msgbox.style.height","msgboxc","msgboxc.style.height","name","navig","need","neighbor","neighbors.foreach((neighbor:ani","new","newlin","newnodeid","newweight","next","ng","ngmodul","ngonchanges(chang","ngondestroy","ngoninit","ngx","node","node.compon","node.component.css","node.component.html","node.component.t","node.data('id","node.id","node.incom","node.outgo","node.position('i","node.position('x'),i","node.remov","node.style('background","node.style('color',color","node.style('color',this.color_nod","node/add","node/chang","node/enumer","node/remov","node1","node2","node:ani","node:any=this.cy.getelementbyid(container2.nodeid","node=this.cy.add","nodea.id","nodeb","nodeb.id","nodeexist","nodeexists1","nodeid","nodeid:ani","nodeid:number=0;//incr","nodeid:str","nodeidchang","nodeidchanged:ani","nodenam","nodename:string=\"numeriqu","nodenamingmethod","nodenamingmethode:str","nodenew.id","nodenew=this.cy.add","nodes.indexof(sourcenod","nodes.indexof(targetnod","nodes.length","nodes.push(node.data('id","nodes:array","nodesdegr","nodesdegre.push(obj","nodesdegre:array","nodet","non","none","nov","null","number","number(matchdirectedweighted[2","number(matchundirectedweighted[2","numbersarray","numbersarray:numb","numcol","numeriqu","numnod","numrow","nœud","obj","obj:ani","object","object.entries(userdata","oct","ok","onchang","onchange():void","onchangebuttonclick","onchangebuttonclicked(contain","onchangebuttonclicked(container:any):void","ondestroy","ondestroy():void","onedgetap","onedgetap(contain","onedgetap(container:any):void","oninit","oninit(contain","oninit,ondestroy","oninputfocu","onmessagelengthchang","onnodetap","onnodetap(contain","onnodetap(container:any):void","onremovechang","onremovechange(contain","onremovechange(container:any):void","onsaveuploadchang","onsaveuploadchange(contain","onsaveuploadchange(container:any):void","onscreentap","onscreentap(contain","onscreentap(container:any):void","onweightchang","onweightchange(newweight","onweightformchang","oper","operations.it","option","option(chnag","origin","otherwis","out","outdegree:node.outdegre","outgoingedg","output","overview","packag","page","pair","param","paramet","parent","pars","parseadjacencymatrix","parseadjacencymatrix(matrixtext","parseadjacencymatrix(matrixtext:string):ani","parseedg","parseedge(lin","parseedge(line:string):iweightededgetyped|iunweightededgetyped|nul","parseextendedformat","parseextendedformat():array","parseint(node.data.id","path","path:str","path[v.id","pathnod","pathnodes.join","pathstr","pathtonodeb","pathtonodeb.nodes().map((nod","pathtotarget","pathtotarget.nodes().map((nod","pathtotarget.nodes().map((node:ani","pattern","pdf","pdf.servic","perform","pfa","platform","png","pngpromis","pngpromise.then((blob","po","poid","posit","positions:iposit","possil","pour","previou","prim'","primeaniamant","primeaniamantion(contain","primeaniamantion(container:any):void","print","printpath","printpath(rootnodeid","privat","project","promis","properti","protect","provid","providedin","public","px","qualiti","queue","queue.length","queue.push(neighbor","queue.shift","random","randomli","reader","reader.onload","reader.readastext(fil","readm","receiv","red","refer","regist","registerwhenstable:30000","registrationstrategi","regular","reject","rejeteraddedgeweight","rejeteraddedgeweighted(contain","rejeteraddedgeweighted(container:any,container2:any):void","rejeteraddnod","rejeteraddnode(contain","rejeteraddnode(container:any,container2:any):void","rejeterchangecolor","rejeterchangecolor(contain","rejeterchangecolor(container:any):void","rejeterchangenodeid","rejeterchangenodeid(contain","rejeterchangenodeid(container:any,container2:any):void","rejeterchangesizescreen","rejeterchangesizescreen(contain","rejeterchangesizescreen(container:any,container2:any):void","rejetergenerategraphfromlistedg","rejetergenerategraphfromlistedges(contain","rejetergenerategraphfromlistedges(container:any,container2:any):void","rejetergenerategraphfrommatrixadj","rejetergenerategraphfrommatrixadjancy(contain","rejetergenerategraphfrommatrixadjancy(container:any,container2:any):void","rejeterremoveedg","rejeterremoveedge(contain","rejeterremoveedge(container:any,container2:any):void","rejeterremovenod","rejeterremovenode(contain","rejeterremovenode(container:any,container2:any):void","relat","relev","reload","remov","remove:str","removeedg","removeedge(contain","removeedge(container:any,container2:any):void","removeedgecompon","removenod","removenode(contain","removenode(container:any,container2:any):void","removenodecompon","render","replac","repres","represent","reset","resetcolor","respons","restor","restorearray","restorearray:array","restoregraph","restoregraphe(contain","restoregraphe(container:any):void","result","return","root","rootnodeid","rootnodeid,targetnodeid,pathstring,distancetotarget","rootnodeid=nodea.data(\"id","routing.modul","row","row.trim().split(/\\s+/).map(numb","rowindex:ani","rows.length","rows.map((row:ani","run","s","s*>\\","same","save","save/upload","savejpg","savejpg(contain","savejpg(container:any,fullgraphe:boolean=true):void","savejson","savejson(contain","savejson(container:ani","savepng","savepng(contain","savepng(container:any,fullgraph:boolean=true):void","saveupload","saveupload:str","saveuploads:saveuploadservice,protect","saveuploadservic","scaffold","scale","screen","screen.compon","screen.component.css","screen.component.html","screen.component.t","screen.style.backgroundcolor=container2.bgcolor","screen.style.display=\"block","screen.style.display=\"non","screen.style.height","screen.style.height.tostr","screen/chang","screen=container.el.nativeelement.queryselector('.scr","screen=container.el.nativeelement.queryselector('.screen","screen=this.container.el.nativeelement.queryselector('.screen","screenbox","screenbox.component.css","screenbox.component.html","screenboxcompon","screencompon","search","searcheedgechnagebc","searcheedgechnagebc(contain","searcheedgechnagebc(container:any,source:string,target:string,color:string,lineedgecolor:string,targetarrowcolor:string,time:number=10):void","second","seconds:number|str","select","select.component.css","select.component.html","selectcompon","selected:eventemitt","selectednew","selectednew:str","selectednod","selectednode:array","selector","selector('edg","selector('nod","send","sendel","sendelements():ani","sep","serv","server","servic","services/algorithm.servic","services/dark","services/gener","services/graphe.servic","services/sav","servicework","serviceworkermodul","serviceworkermodule.register('ngsw","set","settimeout","shape","shortest","simplechang","singl","size","someth","sont","soon","sourc","source:container.selectednode[0","sourceid","sourceid:ani","sourceindex","sourcenod","space:str","span","specifi","split","squar","src/app/app.component.t","src/app/app.module.t","src/app/components/add","src/app/components/chang","src/app/components/enumer","src/app/components/footer/footer.component.t","src/app/components/graph","src/app/components/header/header.component.t","src/app/components/info/info.component.t","src/app/components/matrix/matrix.component.t","src/app/components/message/message.component.t","src/app/components/remov","src/app/components/screen/screen.component.t","src/app/components/screenbox/screenbox.component.t","src/app/components/select/select.component.t","src/app/services/algorithm.service.t","src/app/services/dark","src/app/services/graphe.servic","src/app/services/graphe.service.t","src/app/services/sav","stabl","start","startnod","state","statement","stocker","storag","store","string","string,container:ani","string.fromcharcode(65","strongli","style","styleurl","support","svg","symmetr","tap","target","target:container.selectednode[1","target_arrow_color","target_arrow_color_algo","targetarrowcolor","targetid","targetid:ani","targetindex","targetnod","targetnodeid","targetnodeid=nodeb.data(\"id","tarjan'","tarjanstronglycomponentanim","tarjanstronglycomponentanimation(contain","templateurl","temporari","test","text","text:string=\"graph","text=`list","text=container.graphes.getlistofnod","this.alphabets.concat","this.alphabets.shift","this.alphabets0.concat","this.alphabets0.map(lett","this.alphabets=this.alphabets.concat(this.alphabets0.map(lett","this.background_color_nod","this.background_color_node=container2.bgcolor","this.background_color_node_algo,this.color_node_algo","this.background_color_node_algo=container2.bgcolor","this.bfs(startnode,visitednod","this.buttonclick","this.changecoloredg","this.changecoloredge(edge,color,lineedgecolor,targetarrowcolor,tim","this.changecolornod","this.changecolornode(nod","this.changestylegraphe(this.typegraph","this.changestylegraphe(typegraph","this.ci","this.color_line_edg","this.color_line_edge=container2.bgcolor","this.color_line_edge_algo=container2.bgcolor","this.color_nod","this.color_node=container2.color","this.color_node_algo=container2.color","this.container.changeselect","this.container.el.nativeelement.queryselector('#msgbox","this.container.el.nativeelement.queryselector('.msgboxc","this.container.message=this.translate.instant(\"graphefromedgelist.msg1","this.container.message=this.translate.instant(\"graphefromedgelist.msg2","this.container.message=this.translate.instant(\"graphefromedgelist.msg3","this.container.message=this.translate.instant(\"graphefrommatrix.msg4","this.container.message=this.translate.instant('graphefrommatrix.msg2","this.container.restorearray","this.containsinvalidcharacters(edge?.sourc","this.count","this.counter=0","this.cy.add","this.cy.add(cyel","this.cy.add(el","this.cy.add({data","this.cy.destroy","this.cy.edg","this.cy.edges().foreach((edge:ani","this.cy.edges().length/(this.cy.nodes().length*(this.cy.nodes().length","this.cy.edges().style('color","this.cy.edges().style('lin","this.cy.edges().style('target","this.cy.elements('edg","this.cy.elements().remov","this.cy.fit","this.cy.getelementbyid(container.selectednode[0","this.cy.getelementbyid(element.source).nonempti","this.cy.getelementbyid(element.target).nonempti","this.cy.nod","this.cy.nodes().foreach((node:ani","this.cy.nodes().length","this.cy.nodes().style('background","this.cy.nodes().style('color","this.cy.on('tap","this.cy.remove(edg","this.cy.remove(edgei","this.cy.remove(nod","this.cy.remove(this.cy.el","this.cy.styl","this.cy?.edges().foreach((edge:ani","this.cy?.nodes().foreach((node:ani","this.darkmodes.toggledarkmod","this.data_edge_color","this.data_edge_color=container2.color","this.data_edge_color_algo=container2.color","this.doc.addpag","this.doc.getfonts","this.doc.getstringunitwidth(`gener","this.doc.getstringunitwidth(docnam","this.doc.getstringunitwidth(text","this.doc.getstringunitwidth(valu","this.doc.save('sample.pdf","this.doc.setfont(\"helvetica","this.doc.setfontsize(12","this.doc.setfontsize(14","this.doc.setfontsize(22","this.doc.setfontsize(24","this.doc.settextcolor(0","this.doc.settextcolor(255","this.doc.text(`${valu","this.doc.text(`gener","this.doc.text(docnam","this.doc.text(text","this.floydwarshallalgorithm(contain","this.getdatatim","this.getrandomcolor","this.graphes.creategraphefromadjancymatrix(elements,!this.issymmetric(adjacencymatrix),this.isweighted(adjacencymatrix),this.contain","this.graphes.onchangebuttonclicked(thi","this.graphes.ondestroy","this.graphes.onedgetap(thi","this.graphes.oninit(thi","this.graphes.onnodetap(thi","this.graphes.onscreentap(thi","this.graphes.resetcolor","this.incrementlastelementheight(yposition+this.doc.getfonts","this.infodoc(docname,username,emailuser,urlsit","this.infographedoc(container,50","this.inputtouched=tru","this.isalledgepositive(contain","this.isdarkmod","this.isdarkmode.tostr","this.isedgeremove(container.selectednode[0],container.selectednode[1],contain","this.issymmetric(adjacencymatrix","this.isweighted(adjacencymatrix","this.kruskalanimation(contain","this.lang=\"en","this.lastelementheight+=10","this.lastelementheight+=incr","this.lastelementheight=50","this.listedgetextarea.split('\\n","this.matrixtext","this.message.length","this.minimumspanningtreeedges(container).foreach((edge:ani","this.onmessagelengthchang","this.parseadjacencymatrix(this.matrixtext","this.parseedge(lin","this.parseextendedformat","this.posit","this.position=nul","this.position=po","this.positions[i","this.primeaniamantion(contain","this.printpath(rootnodeid","this.resetcolor","this.restoregraphe(contain","this.savejpg(contain","this.savejpg(container,fals","this.savejson(contain","this.savepng(contain","this.savepng(container,fals","this.selected.emit(this.selectednew","this.target_arrow_color","this.target_arrow_color=container2.fcolor","this.target_arrow_color_algo=container2.fcolor","this.tarjanstronglycomponentanimation(contain","this.testandadddocname(docname,docnamearray,yposit","this.translate.instant(\"algos.msg3\",{rootnodeid,targetnodeid,pathstring,distancetotarget","this.translate.instant(\"algos.msg5","this.translate.instant(\"algos.msg6\",{rootnodeid","this.translate.instant(\"graphes.msg20","this.translate.instant(\"graphes.msg21","this.translate.instant('algos.msg1","this.translate.instant('algos.msg2","this.translate.instant('algos.msg4","this.translate.setdefaultlang(\"en","this.translate.use(\"ar","this.translate.use(\"en","this.translate.use(\"fr","this.translate.use(event.target.valu","this.typegraph","this.typegraphe=container.typegraph","this.typegraphe=data","this.uploadjson(contain","this.weight.emit(this.weightform","this.weight=newweight","through","time","titl","toggl","toggledarkmod","toggledarkmode():void","tou","touch","track","trail","translat","translate/cor","translate/http","translate:translateservic","translate:translateservice,protect","translatehttpload","translatehttploader(http","translateload","translatemodul","translatemodule.forroot","translateservic","translateservice,protect","tree","treeedg","treeedges.length","treeedges.push(edg","treenod","treenodes.add(sourceid","treenodes.add(targetid","treenodes.has(sourceid","treenodes.has(targetid","tri","triangl","trigger","true","two","type","typegraph","typegraphe:string=elements[0].typ","u","u.id","u.style('background","u.style('color","u:ani","undefin","undirect","unit","unweight","up","updat","upload","upload.servic","upload.service.t","uploadjson","uploadjson(contain","uploadjson(container:ani","url","url.createobjecturl(blob","url.revokeobjecturl(url","urlsit","us","usefactori","user","user'","userdata","useremail","usernam","v","v.id","v.id(),contain","v.style('background","v.style('color',container.graphes.color_node_algo","v:ani","valid","valu","value(app","values.length","var","variabl","variou","versa","versa.upd","version","vertic","via","vice","view","viewport","visit","visited.length","visited.push(v.id","visited:array","visitednod","visitednodes.add(neighbor.id","visitednodes.add(node.id","visitednodes.has(neighbor.id","visitednodes.s","visité","visual","void","warshal","weight","weight:container.weight","weight?:numb","weighta","weightb","weighted:boolean=fals","weightform","whether","whichev","while(arraystring.length","while(docnamearray.length","white","whitespac","width","widthinpoint","widthinpoints)/2","widthinpoints:numb","worker","worker.j","x","x:number","y","y:number","year","yellow","yposit","yposition+=30","yposition:numb","zero","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nPfa\nThis project was generated with Angular CLI version 16.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        19 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    AppModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n  Modules\n  AppModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                ScreenboxComponent\n                            \n                            \n                                FooterComponent\n                            \n                            \n                                InfoComponent\n                            \n                            \n                                MessageComponent\n                            \n                            \n                                ScreenComponent\n                            \n                            \n                                AddWeightedEdgeComponent\n                            \n                            \n                                MatrixComponent\n                            \n                            \n                                SelectComponent\n                            \n                            \n                                ChangeIdNodeComponent\n                            \n                            \n                                ChangeColorComponent\n                            \n                            \n                                AddNodeComponent\n                            \n                            \n                                ChangeSizeScreenComponent\n                            \n                            \n                                GrapheFromMatrixAdjaComponent\n                            \n                            \n                                GrapheFromEdgesListComponent\n                            \n                            \n                                RemoveEdgeComponent\n                            \n                            \n                                RemoveNodeComponent\n                            \n                            \n                                EnumerationNodeComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                GrapheService\n                            \n                            \n                                AlgorithmService\n                            \n                            \n                                SaveUploadService\n                            \n                            \n                                DarkModeService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule, isDevMode } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { ScreenboxComponent } from './components/screenbox/screenbox.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { GrapheService } from './Services/graphe.service';\r\nimport { AlgorithmService } from './Services/algorithm.service';\r\nimport { SaveUploadService } from './Services/save-upload.service';\r\nimport { InfoComponent } from './components/info/info.component';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MessageComponent } from './components/message/message.component';\r\nimport { ScreenComponent } from './components/screen/screen.component';\r\nimport { AddWeightedEdgeComponent } from './components/add-weighted-edge/add-weighted-edge.component';\r\nimport { MatrixComponent } from './components/matrix/matrix.component';\r\nimport { SelectComponent } from './components/select/select.component';\r\nimport { ChangeIdNodeComponent } from './components/change-id-node/change-id-node.component';\r\nimport { ChangeColorComponent } from './components/change-color/change-color.component';\r\nimport { AddNodeComponent } from './components/add-node/add-node.component';\r\nimport { ChangeSizeScreenComponent } from './components/change-size-screen/change-size-screen.component';\r\nimport { DarkModeService } from './Services/dark-mode.service';\r\nimport { GrapheFromMatrixAdjaComponent } from './components/graphe-from-matrix-adja/graphe-from-matrix-adja.component';\r\nimport { GrapheFromEdgesListComponent } from './components/graphe-from-edges-list/graphe-from-edges-list.component';\r\nimport { RemoveEdgeComponent } from './components/remove-edge/remove-edge.component';\r\nimport { RemoveNodeComponent } from './components/remove-node/remove-node.component';\r\nimport { EnumerationNodeComponent } from './components/enumeration-node/enumeration-node.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\n\r\n\r\n// Function to load translations\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ScreenboxComponent,\r\n    FooterComponent,\r\n    InfoComponent,\r\n    MessageComponent,\r\n    ScreenComponent,\r\n    AddWeightedEdgeComponent,\r\n    MatrixComponent,\r\n    SelectComponent,\r\n    ChangeIdNodeComponent,\r\n    ChangeColorComponent,\r\n    AddNodeComponent,\r\n    ChangeSizeScreenComponent,\r\n    GrapheFromMatrixAdjaComponent,\r\n    GrapheFromEdgesListComponent,\r\n    RemoveEdgeComponent,\r\n    RemoveNodeComponent,\r\n    EnumerationNodeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    CommonModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: !isDevMode(),\r\n      // Register the ServiceWorker as soon as the application is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    })\r\n    \r\n  ],\r\n  providers: [GrapheService,AlgorithmService,SaveUploadService,DarkModeService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddNodeComponent.html":{"url":"components/AddNodeComponent.html","title":"component - AddNodeComponent","body":"\n                   \n\n\n\n  Components\n  AddNodeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/add-node/add-node.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the add node form.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-node\n            \n\n            \n                styleUrls\n                add-node.component.css\n            \n\n\n\n            \n                templateUrl\n                add-node.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the AddNodeComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             onInputFocus\n                        \n                    \n    \n                    \n                        \n    onInputFocus()\n                        \n                    \n    \n                    \n                        \n                                Event handler for when the input field receives focus.Sets the inputTouched flag to true.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             inputTouched\n                        \n                    \n                    \n                        \n                            inputTouched:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                    \n                        \n                            Indicates whether the input field has been touched or focused.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nodeId\n                        \n                    \n                    \n                        \n                            nodeId:     any\n    \n                        \n                    \n                    \n                        \n                            The ID of the new node.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component,Input } from '@angular/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n/**\r\n * Angular component representing the add node form.\r\n */\r\n@Component({\r\n  selector: 'app-add-node',\r\n  templateUrl: './add-node.component.html',\r\n  styleUrls: ['./add-node.component.css']\r\n})\r\nexport class AddNodeComponent {\r\n  /**\r\n   * The ID of the new node.\r\n   */\r\n  nodeId:any;\r\n  /**\r\n   * Indicates whether the input field has been touched or focused.\r\n   */\r\n  inputTouched:boolean = false;\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container:any;\r\n  /**\r\n   * Initializes a new instance of the AddNodeComponent class.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected grapheS:GrapheService){\r\n\r\n  }\r\n  /**\r\n   * Event handler for when the input field receives focus.\r\n   * Sets the `inputTouched` flag to true.\r\n   */\r\n  onInputFocus(){\r\n    this.inputTouched=true;\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddWeightedEdgeComponent.html":{"url":"components/AddWeightedEdgeComponent.html","title":"component - AddWeightedEdgeComponent","body":"\n                   \n\n\n\n  Components\n  AddWeightedEdgeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/add-weighted-edge/add-weighted-edge.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the form for adding a weighted edge.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-weighted-edge\n            \n\n            \n                styleUrls\n                add-weighted-edge.component.css\n            \n\n\n\n            \n                templateUrl\n                add-weighted-edge.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            nodeS\n                        \n                        \n                            Input property representing the source node for the edge.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            nodeT\n                        \n                        \n                            Input property representing the target node for the edge.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            weight\n                        \n                        \n                            Event emitter for emitting the weight of the edge to the parent component.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the AddWeightedEdgeComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             onWeightFormChange\n                        \n                    \n    \n                    \n                        \n    onWeightFormChange()\n                        \n                    \n    \n                    \n                        \n                                Event handler for when the weight form changes.Emits the weight value to the parent component using the weight EventEmitter.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             weightForm\n                        \n                    \n                    \n                        \n                            weightForm:     any\n    \n                        \n                    \n                    \n                        \n                            The form field for entering the edge weight.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n/**\r\n * Angular component representing the form for adding a weighted edge.\r\n */\r\n@Component({\r\n  selector: 'app-add-weighted-edge',\r\n  templateUrl: './add-weighted-edge.component.html',\r\n  styleUrls: ['./add-weighted-edge.component.css']\r\n})\r\nexport class AddWeightedEdgeComponent {\r\n  /**\r\n   * Input property representing the source node for the edge.\r\n   */\r\n  @Input() nodeS: any;\r\n\r\n  /**\r\n   * Input property representing the target node for the edge.\r\n   */\r\n  @Input() nodeT: any;\r\n\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container: any;\r\n\r\n  /**\r\n   * Event emitter for emitting the weight of the edge to the parent component.\r\n   */\r\n  @Output() weight: EventEmitter = new EventEmitter();\r\n\r\n  /**\r\n   * The form field for entering the edge weight.\r\n   */\r\n  weightForm: any;\r\n\r\n  /**\r\n   * Initializes a new instance of the AddWeightedEdgeComponent class.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected grapheS: GrapheService) {}\r\n\r\n  /**\r\n   * Event handler for when the weight form changes.\r\n   * Emits the weight value to the parent component using the `weight` EventEmitter.\r\n   */\r\n  onWeightFormChange(): void {\r\n    this.weight.emit(this.weightForm);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(translate: TranslateService, darkModeS: DarkModeService)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: pfa\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DarkModeService } from './Services/dark-mode.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'pfa';\r\n  constructor(private translate: TranslateService,protected darkModeS:DarkModeService) {\r\n  }\r\n  ngOnInit(): void {\r\n    // this.translate.setDefaultLang(\"en\");\r\n    this.translate.use(\"fr\");\r\n    this.translate.use(\"ar\");\r\n    this.translate.use(\"en\");\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeColorComponent.html":{"url":"components/ChangeColorComponent.html","title":"component - ChangeColorComponent","body":"\n                   \n\n\n\n  Components\n  ChangeColorComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/change-color/change-color.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the color change form.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-color\n            \n\n            \n                styleUrls\n                change-color.component.css\n            \n\n\n\n            \n                templateUrl\n                change-color.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ChangeColorComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             bgColor\n                        \n                    \n                    \n                        \n                            bgColor:     any\n    \n                        \n                    \n                    \n                        \n                            The background color input field for changing node or edge background colors.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             color\n                        \n                    \n                    \n                        \n                            color:     any\n    \n                        \n                    \n                    \n                        \n                            The color input field for changing node or edge colors.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fColor\n                        \n                    \n                    \n                        \n                            fColor:     any\n    \n                        \n                    \n                    \n                        \n                            The flesh color input field for changing edge colors in case of a directed graph.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n/**\r\n * Angular component representing the color change form.\r\n */\r\n@Component({\r\n  selector: 'app-change-color',\r\n  templateUrl: './change-color.component.html',\r\n  styleUrls: ['./change-color.component.css']\r\n})\r\nexport class ChangeColorComponent {\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container: any;\r\n\r\n  /**\r\n   * The color input field for changing node or edge colors.\r\n   */\r\n  color: any;\r\n\r\n  /**\r\n   * The background color input field for changing node or edge background colors.\r\n   */\r\n  bgColor: any;\r\n\r\n  /**\r\n   * The flesh color input field for changing edge colors in case of a directed graph.\r\n   */\r\n  fColor: any;\r\n\r\n  /**\r\n   * Initializes a new instance of the ChangeColorComponent class.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected grapheS: GrapheService) {}\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeIdNodeComponent.html":{"url":"components/ChangeIdNodeComponent.html","title":"component - ChangeIdNodeComponent","body":"\n                   \n\n\n\n  Components\n  ChangeIdNodeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/change-id-node/change-id-node.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the form for changing the ID of a node.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-id-node\n            \n\n            \n                styleUrls\n                change-id-node.component.css\n            \n\n\n\n            \n                templateUrl\n                change-id-node.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            lastNodeId\n                        \n                        \n                            Input property representing the last used node ID.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ChangeIdNodeComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             newNodeId\n                        \n                    \n                    \n                        \n                            newNodeId:     string\n    \n                        \n                    \n                    \n                        \n                            The new node ID input field.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n/**\r\n * Angular component representing the form for changing the ID of a node.\r\n */\r\n@Component({\r\n  selector: 'app-change-id-node',\r\n  templateUrl: './change-id-node.component.html',\r\n  styleUrls: ['./change-id-node.component.css']\r\n})\r\nexport class ChangeIdNodeComponent {\r\n  /**\r\n   * Input property representing the last used node ID.\r\n   */\r\n  @Input() lastNodeId: any;\r\n\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container: any;\r\n\r\n  /**\r\n   * The new node ID input field.\r\n   */\r\n  newNodeId: string = \"\";\r\n\r\n  /**\r\n   * Initializes a new instance of the ChangeIdNodeComponent class.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected grapheS: GrapheService) {}\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeSizeScreenComponent.html":{"url":"components/ChangeSizeScreenComponent.html","title":"component - ChangeSizeScreenComponent","body":"\n                   \n\n\n\n  Components\n  ChangeSizeScreenComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/change-size-screen/change-size-screen.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the form for changing the size of the screen.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-size-screen\n            \n\n            \n                styleUrls\n                change-size-screen.component.css\n            \n\n\n\n            \n                templateUrl\n                change-size-screen.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ChangeSizeScreenComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             height\n                        \n                    \n                    \n                        \n                            height:     any\n    \n                        \n                    \n                    \n                        \n                            The height input field for changing the screen height.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n/**\r\n * Angular component representing the form for changing the size of the screen.\r\n */\r\n@Component({\r\n  selector: 'app-change-size-screen',\r\n  templateUrl: './change-size-screen.component.html',\r\n  styleUrls: ['./change-size-screen.component.css']\r\n})\r\nexport class ChangeSizeScreenComponent {\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container: any;\r\n\r\n  /**\r\n   * The height input field for changing the screen height.\r\n   */\r\n  height: any = localStorage.getItem('screenHeight');\r\n\r\n  /**\r\n   * Initializes a new instance of the ChangeSizeScreenComponent class.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected grapheS: GrapheService) {}\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EnumerationNodeComponent.html":{"url":"components/EnumerationNodeComponent.html","title":"component - EnumerationNodeComponent","body":"\n                   \n\n\n\n  Components\n  EnumerationNodeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/enumeration-node/enumeration-node.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-enumeration-node\n            \n\n            \n                styleUrls\n                enumeration-node.component.css\n            \n\n\n\n            \n                templateUrl\n                enumeration-node.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component,Input } from '@angular/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n@Component({\r\n  selector: 'app-enumeration-node',\r\n  templateUrl: './enumeration-node.component.html',\r\n  styleUrls: ['./enumeration-node.component.css']\r\n})\r\nexport class EnumerationNodeComponent {\r\n  @Input() container:any;\r\n  constructor(protected grapheS:GrapheService){\r\n    \r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n  Components\n  FooterComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.css\n            \n\n\n\n            \n                templateUrl\n                footer.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(darkModeS: DarkModeService)\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component } from '@angular/core';\r\nimport { DarkModeService } from '../../Services/dark-mode.service';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n  constructor(protected darkModeS:DarkModeService){\r\n    \r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GrapheFromEdgesListComponent.html":{"url":"components/GrapheFromEdgesListComponent.html","title":"component - GrapheFromEdgesListComponent","body":"\n                   \n\n\n\n  Components\n  GrapheFromEdgesListComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/graphe-from-edges-list/graphe-from-edges-list.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphe-from-edges-list\n            \n\n            \n                styleUrls\n                graphe-from-edges-list.component.css\n            \n\n\n\n            \n                templateUrl\n                graphe-from-edges-list.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input container object for handling graph-related properties.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any, translate: TranslateService)\n                        \n                    \n    \n                    \n                        \n                                Constructor for the GrapheFromEdgesListComponent.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance for handling graph operations.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        translate\n                                                            :     TranslateService\n    \n                                                    \n                                                    \n                                                        \n    The TranslateService for language localization.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             parseExtendedFormat\n                        \n                    \n    \n                    \n                        \n    parseExtendedFormat()\n                        \n                    \n    \n                    \n                        \n                                Parses the extended format list of edges and returns an array of parsed edge objects.\n    \n                                \n                                \n                                \n                                    Returns:     any[]\n    \n                                \n                                    \n                                        \n    An array of parsed edge objects.\n    \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             parseEdge\n                        \n                    \n    \n                    \n                        \n    parseEdge(line: string)\n                        \n                    \n    \n                    \n                        \n                                Parses a single edge from a line of text and returns an edge object.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        line\n                                                    \n                                                    \n                                                        \n    The input line containing edge information.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     IWeightedEdgeTyped | IUnweightedEdgeTyped\n    \n                                \n                                    \n                                        \n    The parsed edge object.\n    \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isSameTypeGraphe\n                        \n                    \n    \n                    \n                        \n    isSameTypeGraphe(edges: any[])\n                        \n                    \n    \n                    \n                        \n                                Checks if all edges have the same type of graph (e.g., Directed Weighted).>} edges - An array of edge objects to check.\n    \n                                \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        \n    true if all edges have the same type, otherwise false.\n    \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             sendElements\n                        \n                    \n    \n                    \n                        \n    sendElements()\n                        \n                    \n    \n                    \n                        \n                                Sends the parsed graph elements to the parent component.\n    \n                                \n                                \n                                \n                                    Returns:     any\n    \n                                \n                                    \n                                        \n    The parsed graph elements or false if there is a type mismatch.\n    \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             containsInvalidCharacters\n                        \n                    \n    \n                    \n                        \n    containsInvalidCharacters(inputString: string)\n                        \n                    \n    \n                    \n                        \n                                Checks if a given input string contains invalid characters.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        inputString\n                                                    \n                                                    \n                                                        \n    The input string to check for invalid characters.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        \n    true if the input contains invalid characters, otherwise false.\n    \n    \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             listEdgeTextArea\n                        \n                    \n                    \n                        \n                            listEdgeTextArea:     string\n    \n                        \n                    \n                    \n                        \n                            The text area input for the list of edges.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n/**\r\n * Represents a weighted edge in a graph.\r\n *\r\n * @interface IWeightedEdgeTyped\r\n */\r\ninterface IWeightedEdgeTyped {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The weight of the edge.\r\n   *\r\n   * @type {number}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  weight: number;\r\n\r\n  /**\r\n   * The type of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  type: string;\r\n}\r\n\r\n/**\r\n * Represents an unweighted edge in a graph.\r\n *\r\n * @interface IUnweightedEdgeTyped\r\n */\r\ninterface IUnweightedEdgeTyped {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The type of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  type: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-graphe-from-edges-list',\r\n  templateUrl: './graphe-from-edges-list.component.html',\r\n  styleUrls: ['./graphe-from-edges-list.component.css']\r\n})\r\nexport class GrapheFromEdgesListComponent {\r\n  /**\r\n   * Constructor for the GrapheFromEdgesListComponent.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance for handling graph operations.\r\n   * @param {TranslateService} translate - The TranslateService for language localization.\r\n   */\r\n  constructor(protected grapheS:GrapheService,protected translate:TranslateService){}\r\n  /**\r\n   * The text area input for the list of edges.\r\n   */\r\n  listEdgeTextArea:string=\"\";\r\n  /**\r\n   * Input container object for handling graph-related properties.\r\n   */\r\n  @Input() container:any;\r\n  /**\r\n   * Parses the extended format list of edges and returns an array of parsed edge objects.\r\n   *\r\n   * @returns {Array} - An array of parsed edge objects.\r\n   */\r\n  parseExtendedFormat():Array {\r\n    const lines = this.listEdgeTextArea.split('\\n');\r\n    const edges:Array = [];\r\n    if(lines.length==0){\r\n      this.container.message=this.translate.instant(\"grapheFromEdgeList.msg2\");\r\n    }\r\n    for (const line of lines) {\r\n      const edge = this.parseEdge(line);\r\n      if (edge && !this.containsInvalidCharacters(edge?.source) && !this.containsInvalidCharacters(edge?.source)) {\r\n        edges.push(edge);\r\n      }else{\r\n        this.container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n        break;\r\n      }\r\n    }\r\n  \r\n    return edges;\r\n  }\r\n  /**\r\n   * Parses a single edge from a line of text and returns an edge object.\r\n   *\r\n   * @param {string} line - The input line containing edge information.\r\n   * @returns {IWeightedEdgeTyped|IUnweightedEdgeTyped|null} - The parsed edge object.\r\n   */\r\n  parseEdge(line:string):IWeightedEdgeTyped|IUnweightedEdgeTyped|null {\r\n    const matchDirectedWeighted = line.match(/\\s*([^(-]*)\\s*-\\(([\\d.]+)\\)->\\s*([^(-]*)\\s*/);\r\n    const matchDirected = line.match(/\\s*([^(-]*)\\s*>\\s*([^(-]*)\\s*/);\r\n    const matchUndirectedWeighted = line.match(/\\s*([^(-]*)\\s*-\\(([\\d.]+)\\)-\\s*([^(-]*)\\s*/);\r\n    const matchUndirected = line.match(/\\s*([^(-]*)\\s*-\\s*([^(-]*)\\s*/);\r\n  \r\n    if (matchDirectedWeighted) {//OK\r\n      return {\r\n        source: matchDirectedWeighted[1].trim(),\r\n        target: matchDirectedWeighted[3].trim(),\r\n        weight: Number(matchDirectedWeighted[2]),\r\n        type: 'Directed Weighted',\r\n      };\r\n    } else if (matchDirected) {//OK\r\n      return {\r\n        source: matchDirected[1].trim(),\r\n        target: matchDirected[2].trim(),\r\n        type: 'Directed Unweighted',\r\n      };\r\n    } else if (matchUndirectedWeighted) {\r\n      console.log(matchUndirectedWeighted[2]);\r\n      console.log(matchUndirectedWeighted[1]);\r\n      console.log(matchUndirectedWeighted[3]);\r\n      return {\r\n        source: matchUndirectedWeighted[1].trim(),\r\n        target: matchUndirectedWeighted[3].trim(),\r\n        weight: Number(matchUndirectedWeighted[2]),\r\n        type: 'Undirected Weighted',\r\n      };\r\n    } else if (matchUndirected) {//OK\r\n      return {\r\n        source: matchUndirected[1].trim(),\r\n        target: matchUndirected[2].trim(),\r\n        type: 'Undirected Unweighted',\r\n      };\r\n    }\r\n  \r\n    return null;\r\n  }\r\n  /**\r\n  * Checks if all edges have the same type of graph (e.g., Directed Weighted).\r\n  *\r\n  * @param {Array} edges - An array of edge objects to check.\r\n  * @returns {boolean} - `true` if all edges have the same type, otherwise `false`.\r\n  */\r\n  isSameTypeGraphe(edges:Array): boolean {\r\n    let isSameTypeGraphe:boolean=true;\r\n    let firstType:string=edges[0]?.type;\r\n    if(firstType){\r\n      for (const edge of edges) {\r\n        if(edge.type!=firstType){\r\n          console.log(\" Type Error\")\r\n          isSameTypeGraphe=false;\r\n          break;\r\n        }\r\n      }\r\n    }else{\r\n      isSameTypeGraphe=false;\r\n    }\r\n    return isSameTypeGraphe;\r\n  }\r\n  /**\r\n   * Sends the parsed graph elements to the parent component.\r\n   *\r\n   * @returns {any} - The parsed graph elements or `false` if there is a type mismatch.\r\n   */\r\n  sendElements():any{\r\n    if(this.isSameTypeGraphe(this.parseExtendedFormat())){\r\n      return this.parseExtendedFormat();\r\n    }else{\r\n      this.container.message=this.translate.instant(\"grapheFromEdgeList.msg3\");\r\n      return false;\r\n    }\r\n  }\r\n  /**\r\n   * Checks if a given input string contains invalid characters.\r\n   *\r\n   * @param {string} inputString - The input string to check for invalid characters.\r\n   * @returns {boolean} - `true` if the input contains invalid characters, otherwise `false`.\r\n   */\r\n  containsInvalidCharacters(inputString:string) :boolean{\r\n    // Define a regular expression pattern for valid characters\r\n    const invalidCharactersPattern = /[<> ()&;:-]/;\r\n    // Test the inputString against the pattern\r\n    return invalidCharactersPattern.test(inputString);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GrapheFromMatrixAdjaComponent.html":{"url":"components/GrapheFromMatrixAdjaComponent.html","title":"component - GrapheFromMatrixAdjaComponent","body":"\n                   \n\n\n\n  Components\n  GrapheFromMatrixAdjaComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/graphe-from-matrix-adja/graphe-from-matrix-adja.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphe-from-matrix-adja\n            \n\n            \n                styleUrls\n                graphe-from-matrix-adja.component.css\n            \n\n\n\n            \n                templateUrl\n                graphe-from-matrix-adja.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input container object for handling graph-related properties.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any, translate: TranslateService)\n                        \n                    \n    \n                    \n                        \n                                Constructor for the GrapheFromMatrixAdjaComponent.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance for handling graph operations.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        translate\n                                                            :     TranslateService\n    \n                                                    \n                                                    \n                                                        \n    The TranslateService for language localization.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             generateGraph\n                        \n                    \n    \n                    \n                        \n    generateGraph()\n                        \n                    \n    \n                    \n                        \n                                Generates a graph based on the provided adjacency matrix.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             parseAdjacencyMatrix\n                        \n                    \n    \n                    \n                        \n    parseAdjacencyMatrix(matrixText: string)\n                        \n                    \n    \n                    \n                        \n                                Parses the input adjacency matrix in text format and returns a 2D array.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        matrixText\n                                                    \n                                                    \n                                                        \n    The adjacency matrix in text format.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     any\n    \n                                \n                                    \n                                        \n    The parsed 2D array representing the adjacency matrix or false if parsing fails.\n    \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createGraphElements\n                        \n                    \n    \n                    \n                        \n    createGraphElements(adjacencyMatrix: number[][])\n                        \n                    \n    \n                    \n                        \n                                Creates graph elements (nodes and edges) from the parsed adjacency matrix.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        adjacencyMatrix\n                                                            :     Array\n    \n                                                    \n                                                    \n                                                        \n    The parsed adjacency matrix.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     any[]\n    \n                                \n                                    \n                                        \n    An array of graph elements.\n    \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isWeighted\n                        \n                    \n    \n                    \n                        \n    isWeighted(adjacencyMatrix: number[][])\n                        \n                    \n    \n                    \n                        \n                                Checks if the adjacency matrix represents a weighted graph.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        adjacencyMatrix\n                                                            :     Array\n    \n                                                    \n                                                    \n                                                        \n    The adjacency matrix.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        \n    true if the graph is weighted, otherwise false.\n    \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isSymmetric\n                        \n                    \n    \n                    \n                        \n    isSymmetric(matrix: number[][])\n                        \n                    \n    \n                    \n                        \n                                Checks if the adjacency matrix is symmetric, indicating an undirected graph.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        matrix\n                                                            :     Array\n    \n                                                    \n                                                    \n                                                        \n    The adjacency matrix.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n    true if the matrix is symmetric, indicating an undirected graph, otherwise false.\n    \n    \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             matrixText\n                        \n                    \n                    \n                        \n                            matrixText:     string\n    \n                        \n                    \n                    \n                        \n                            The adjacency matrix in text format.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n/**\r\n * Represents a weighted edge in a graph.\r\n *\r\n * @interface IWeightedEdge\r\n */\r\ninterface IWeightedEdge {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The weight of the edge.\r\n   *\r\n   * @type {number}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  weight: number;\r\n}\r\n\r\n/**\r\n * Represents an unweighted edge in a graph.\r\n *\r\n * @interface IUnweightedEdge\r\n */\r\ninterface IUnweightedEdge {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdge\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdge\r\n   */\r\n  target: string;\r\n}\r\n@Component({\r\n  selector: 'app-graphe-from-matrix-adja',\r\n  templateUrl: './graphe-from-matrix-adja.component.html',\r\n  styleUrls: ['./graphe-from-matrix-adja.component.css']\r\n})\r\nexport class GrapheFromMatrixAdjaComponent {\r\n  /**\r\n   * Input container object for handling graph-related properties.\r\n   */\r\n  @Input() container:any;\r\n  /**\r\n   * The adjacency matrix in text format.\r\n   */\r\n  matrixText:string=\"\";\r\n  /**\r\n   * Constructor for the GrapheFromMatrixAdjaComponent.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance for handling graph operations.\r\n   * @param {TranslateService} translate - The TranslateService for language localization.\r\n   */\r\n  constructor(protected grapheS:GrapheService,protected translate:TranslateService){}\r\n  /**\r\n   * Generates a graph based on the provided adjacency matrix.\r\n   */\r\n  generateGraph() {\r\n    // Parse the matrix into a 2D array\r\n    const adjacencyMatrix = this.parseAdjacencyMatrix(this.matrixText);\r\n    if(adjacencyMatrix){\r\n      const elements:Array=this.createGraphElements(adjacencyMatrix);\r\n      this.grapheS.createGrapheFromAdjancyMatrix(elements,!this.isSymmetric(adjacencyMatrix),this.isWeighted(adjacencyMatrix),this.container);\r\n      const screen=this.container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=this.container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheWithMatrix=this.container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n      screen.style.display=\"block\";\r\n      buttonManupilation.style.display=\"block\";\r\n      addGrapheWithMatrix.style.display=\"none\";\r\n      this.matrixText=\"\";\r\n      this.container.message=this.translate.instant(\"grapheFromMatrix.msg4\");\r\n      this.container.changeSelect=\"\";\r\n      this.container.restoreArray=[];\r\n    }\r\n  }\r\n  /**\r\n   * Parses the input adjacency matrix in text format and returns a 2D array.\r\n   *\r\n   * @param {string} matrixText - The adjacency matrix in text format.\r\n   * @returns {any} - The parsed 2D array representing the adjacency matrix or `false` if parsing fails.\r\n   */\r\n  parseAdjacencyMatrix(matrixText:string):any {\r\n    // Remove leading and trailing whitespace\r\n    matrixText = matrixText.trim();\r\n    let err:boolean=false;\r\n    let matrix:any;\r\n    // Check if the input is empty\r\n    if (matrixText.length === 0) {\r\n        this.container.message=this.translate.instant('grapheFromMatrix.msg2');\r\n        err=true;\r\n    }\r\n    if(!err){\r\n      // Split the text by newline to get rows\r\n      const rows = matrixText.split('\\n');\r\n      const numRows = rows.length;\r\n\r\n      // Initialize a flag to check if the matrix is square\r\n      let isSquare = true;\r\n\r\n      // Parse each row into an array of numbers and validate the format\r\n      matrix = rows.map((row:any, rowIndex:any) => {\r\n          const values = row.trim().split(/\\s+/).map(Number);\r\n          // Check if the matrix is square by comparing the number of columns\r\n          if (values.length !== numRows) {\r\n              isSquare = false;\r\n          }\r\n          return values;\r\n      });\r\n      for (let i = 0; i >} adjacencyMatrix - The parsed adjacency matrix.\r\n   * @returns {Array} - An array of graph elements.\r\n   */\r\n  createGraphElements(adjacencyMatrix: Array>): Array {\r\n    let elements: Array = [];\r\n    const isDirected: boolean = !this.isSymmetric(adjacencyMatrix);\r\n    const isWeighted: boolean = this.isWeighted(adjacencyMatrix);\r\n    \r\n    // Create nodes\r\n    for (let i = 0; i =[];\r\n    if(this.container.nodeName==\"numerique\"){\r\n      arrayNemming=this.grapheS.numbersArray;\r\n    }else if(this.container.nodeName==\"alphabic\"){\r\n      arrayNemming=this.grapheS.Alphabets;\r\n    }\r\n    // Create edges based on adjacency matrix\r\n    for (let i = 0; i >} adjacencyMatrix - The adjacency matrix.\r\n   * @returns {boolean} - `true` if the graph is weighted, otherwise `false`.\r\n   */\r\n  isWeighted(adjacencyMatrix:Array>):boolean{\r\n    let weighted:boolean=false;\r\n    for (let i = 0; i >} matrix - The adjacency matrix.\r\n   * @returns {boolean} - `true` if the matrix is symmetric, indicating an undirected graph, otherwise `false`.\r\n   */\r\n  isSymmetric(matrix:Array>) {\r\n    if (!Array.isArray(matrix) || matrix.length === 0 || matrix[0].length === 0) {\r\n      return false; // Not a valid matrix\r\n    }\r\n  \r\n    const numRows = matrix.length;\r\n    const numCols = matrix[0].length;\r\n  \r\n    if (numRows !== numCols) {\r\n      return false; // Not a square matrix, so it can't be symmetric\r\n    }\r\n  \r\n    for (let i = 0; i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n  Components\n  HeaderComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                header.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(darkModeS: DarkModeService, translate: TranslateService)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             toggleDarkMode\n                        \n                    \n    \n                    \n                        \n    toggleDarkMode()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             changeLanguage\n                        \n                    \n    \n                    \n                        \n    changeLanguage(event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             lang\n                        \n                    \n                    \n                        \n                            lang:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { DarkModeService } from '../../Services/dark-mode.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit{\r\n  lang:string=\"\";\r\n  constructor(protected darkModeS:DarkModeService,private translate:TranslateService){\r\n  }\r\n  ngOnInit(): void {\r\n    this.lang=\"en\";\r\n  }\r\n  toggleDarkMode():void{\r\n    this.darkModeS.toggleDarkMode();\r\n  }\r\n  changeLanguage(event: any) {\r\n    this.translate.use(event.target.value);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n  Components\n  InfoComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/info/info.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component for displaying information about the graph and algorithms.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info\n            \n\n            \n                styleUrls\n                info.component.css\n            \n\n\n\n            \n                templateUrl\n                info.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            algoS\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component related to the graph.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            grapheS\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the InfoComponent class.\n    \n                        \n                    \n                \n            \n    \n\n\n\n        \n            import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * Angular component for displaying information about the graph and algorithms.\r\n */\r\n@Component({\r\n  selector: 'app-info',\r\n  templateUrl: './info.component.html',\r\n  styleUrls: ['./info.component.css']\r\n})\r\nexport class InfoComponent {\r\n  /**\r\n   * Input property to receive data from a parent component related to the graph.\r\n   */\r\n  @Input() container: any;\r\n  @Input() grapheS:any;\r\n  @Input() algoS:any;\r\n  /**\r\n   * Initializes a new instance of the InfoComponent class.\r\n   */\r\n  constructor() {\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatrixComponent.html":{"url":"components/MatrixComponent.html","title":"component - MatrixComponent","body":"\n                   \n\n\n\n  Components\n  MatrixComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/matrix/matrix.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component for displaying a matrix.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matrix\n            \n\n            \n                styleUrls\n                matrix.component.css\n            \n\n\n\n            \n                templateUrl\n                matrix.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Initializes a new instance of the MatrixComponent class.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(el: any, grapheS: any, darkModeS: any)\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, Input, ElementRef } from '@angular/core';\r\nimport { DarkModeService } from 'src/app/Services/dark-mode.service';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n/**\r\n * Angular component for displaying a matrix.\r\n */\r\n@Component({\r\n  selector: 'app-matrix',\r\n  templateUrl: './matrix.component.html',\r\n  styleUrls: ['./matrix.component.css']\r\n})\r\nexport class MatrixComponent {\r\n  /**\r\n   * Initializes a new instance of the MatrixComponent class.\r\n  */\r\n  @Input() container:any;\r\n  constructor(private el:ElementRef,protected grapheS:GrapheService,protected darkModeS:DarkModeService) {}\r\n  \r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageComponent.html":{"url":"components/MessageComponent.html","title":"component - MessageComponent","body":"\n                   \n\n\n\n  Components\n  MessageComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/message/message.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component for displaying messages.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message\n            \n\n            \n                styleUrls\n                message.component.css\n            \n\n\n\n            \n                templateUrl\n                message.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                            Input property to receive data from a parent component.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            message\n                        \n                        \n                            Input property representing the message to be displayed.\n\n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(darkModeS: any, grapheS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the MessageComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        darkModeS\n                                                            :     DarkModeService\n    \n                                                    \n                                                    \n                                                        \n    The DarkModeService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             OnMessageLengthChange\n                        \n                    \n    \n                    \n                        \n    OnMessageLengthChange()\n                        \n                    \n    \n                    \n                        \n                                Adjusts the message box's height based on the length of the message.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DarkModeService } from 'src/app/Services/dark-mode.service';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n/**\r\n * Angular component for displaying messages.\r\n */\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\nexport class MessageComponent implements OnChanges {\r\n  /**\r\n   * Input property representing the message to be displayed.\r\n   */\r\n  @Input() message: string = \"\";\r\n\r\n  /**\r\n   * Input property to receive data from a parent component.\r\n   */\r\n  @Input() container: any;\r\n\r\n  /**\r\n   * Initializes a new instance of the MessageComponent class.\r\n   *\r\n   * @param {DarkModeService} darkModeS - The DarkModeService instance.\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   */\r\n  constructor(protected darkModeS: DarkModeService, protected grapheS: GrapheService) {}\r\n\r\n  /**\r\n   * Angular lifecycle hook called when input properties change.\r\n   *\r\n   * @param {SimpleChanges} changes - The changes in input properties.\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.OnMessageLengthChange();\r\n  }\r\n\r\n  /**\r\n   * Adjusts the message box's height based on the length of the message.\r\n   */\r\n  OnMessageLengthChange(): void {\r\n    const msgBox = this.container.el.nativeElement.querySelector('#msgBox');\r\n    const msgBoxC = this.container.el.nativeElement.querySelector('.msgBoxC');\r\n    const height = 50;\r\n\r\n    if (this.message.length > 103) {\r\n      msgBoxC.style.height = height * (this.message.length / 103 + 0.7) + 'px';\r\n      msgBox.style.height = msgBoxC.style.height;\r\n    } else {\r\n      msgBoxC.style.height = height + 20 + 'px';\r\n      msgBox.style.height = height + 'px';\r\n    }\r\n\r\n    if (this.message.length > 103 * 2) {\r\n      msgBoxC.style.height = height * (this.message.length / 103 - 1) + 'px';\r\n      msgBox.style.height = msgBoxC.style.height;\r\n    }\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveEdgeComponent.html":{"url":"components/RemoveEdgeComponent.html","title":"component - RemoveEdgeComponent","body":"\n                   \n\n\n\n  Components\n  RemoveEdgeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/remove-edge/remove-edge.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-edge\n            \n\n            \n                styleUrls\n                remove-edge.component.css\n            \n\n\n\n            \n                templateUrl\n                remove-edge.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             sourceId\n                        \n                    \n                    \n                        \n                            sourceId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             targetId\n                        \n                    \n                    \n                        \n                            targetId:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input } from '@angular/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n@Component({\r\n  selector: 'app-remove-edge',\r\n  templateUrl: './remove-edge.component.html',\r\n  styleUrls: ['./remove-edge.component.css']\r\n})\r\nexport class RemoveEdgeComponent {\r\n  sourceId: string=\"\";\r\n  targetId: string=\"\";\r\n  @Input() container:any;\r\n  constructor(protected grapheS:GrapheService){\r\n\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveNodeComponent.html":{"url":"components/RemoveNodeComponent.html","title":"component - RemoveNodeComponent","body":"\n                   \n\n\n\n  Components\n  RemoveNodeComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/remove-node/remove-node.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-node\n            \n\n            \n                styleUrls\n                remove-node.component.css\n            \n\n\n\n            \n                templateUrl\n                remove-node.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            container\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(grapheS: any)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             nodeId\n                        \n                    \n                    \n                        \n                            nodeId:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component,Input } from '@angular/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n\r\n@Component({\r\n  selector: 'app-remove-node',\r\n  templateUrl: './remove-node.component.html',\r\n  styleUrls: ['./remove-node.component.css']\r\n})\r\nexport class RemoveNodeComponent {\r\n  @Input() container:any;\r\n  nodeId:string=\"\"\r\n  constructor(protected grapheS:GrapheService){\r\n    \r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenComponent.html":{"url":"components/ScreenComponent.html","title":"component - ScreenComponent","body":"\n                   \n\n\n\n  Components\n  ScreenComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/screen/screen.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component for displaying the main screen.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screen\n            \n\n            \n                styleUrls\n                screen.component.css\n            \n\n\n\n            \n                templateUrl\n                screen.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(darkModeS: any)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ScreenComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        darkModeS\n                                                            :     DarkModeService\n    \n                                                    \n                                                    \n                                                        \n    The DarkModeService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n        \n            import { Component } from '@angular/core';\r\nimport { DarkModeService } from 'src/app/Services/dark-mode.service';\r\n\r\n/**\r\n * Angular component for displaying the main screen.\r\n */\r\n@Component({\r\n  selector: 'app-screen',\r\n  templateUrl: './screen.component.html',\r\n  styleUrls: ['./screen.component.css']\r\n})\r\nexport class ScreenComponent {\r\n  /**\r\n   * Initializes a new instance of the ScreenComponent class.\r\n   *\r\n   * @param {DarkModeService} darkModeS - The DarkModeService instance.\r\n   */\r\n  constructor(protected darkModeS: DarkModeService) {\r\n    \r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenboxComponent.html":{"url":"components/ScreenboxComponent.html","title":"component - ScreenboxComponent","body":"\n                   \n\n\n\n  Components\n  ScreenboxComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/screenbox/screenbox.component.ts\n\n\n    \n        Description\n    \n    \n        Angular component representing the screen box.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screenbox\n            \n\n            \n                styleUrls\n                screenbox.component.css\n            \n\n\n\n            \n                templateUrl\n                screenbox.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(el: any, grapheS: GrapheService, algoS: AlgorithmService, saveUploadS: SaveUploadService, translate: TranslateService, darkModeS: DarkModeService)\n                        \n                    \n    \n                    \n                        \n                                Initializes a new instance of the ScreenboxComponent class.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        el\n                                                            :     ElementRef\n    \n                                                    \n                                                    \n                                                        \n    The ElementRef for this component.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        grapheS\n                                                            :     GrapheService\n    \n                                                    \n                                                    \n                                                        \n    The GrapheService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        algoS\n                                                            :     AlgorithmService\n    \n                                                    \n                                                    \n                                                        \n    The AlgorithmService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        saveUploadS\n                                                            :     SaveUploadService\n    \n                                                    \n                                                    \n                                                        \n    The SaveUploadService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        translate\n                                                            :     TranslateService\n    \n                                                    \n                                                    \n                                                        \n    The TranslateService instance.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        darkModeS\n                                                            :     DarkModeService\n    \n                                                    \n                                                    \n                                                        \n    The DarkModeService instance.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             getButtonClickedId\n                        \n                    \n    \n                    \n                        \n    getButtonClickedId(event: any)\n                        \n                    \n    \n                    \n                        \n                                Gets the ID of the button that was clicked and triggers relevant actions.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    The event containing the click target.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onWeightChange\n                        \n                    \n    \n                    \n                        \n    onWeightChange(newWeight: number)\n                        \n                    \n    \n                    \n                        \n                                Handles the change in weight.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        newWeight\n                                                    \n                                                    \n                                                        \n    The new weight value(app-add-weighted-edge Output).\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             chngeTypeGraphe\n                        \n                    \n    \n                    \n                        \n    chngeTypeGraphe(data: string)\n                        \n                    \n    \n                    \n                        \n                                Changes the type of the graph.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        data\n                                                    \n                                                    \n                                                        \n    The new graph type data.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             algorithm\n                        \n                    \n                    \n                        \n                            algorithm:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private buttonClicked\n                        \n                    \n                    \n                        \n                            buttonClicked:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             changeSelect\n                        \n                    \n                    \n                        \n                            changeSelect:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             containerHeight\n                        \n                    \n                    \n                        \n                            containerHeight:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 70\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             message\n                        \n                    \n                    \n                        \n                            message:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private nodeId\n                        \n                    \n                    \n                        \n                            nodeId:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Private nodeIdChanged\n                        \n                    \n                    \n                        \n                            nodeIdChanged:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nodeName\n                        \n                    \n                    \n                        \n                            nodeName:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: numerique\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             nodeNamingMethode\n                        \n                    \n                    \n                        \n                            nodeNamingMethode:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             remove\n                        \n                    \n                    \n                        \n                            remove:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private restoreArray\n                        \n                    \n                    \n                        \n                            restoreArray:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             saveUpload\n                        \n                    \n                    \n                        \n                            saveUpload:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectedNode\n                        \n                    \n                    \n                        \n                            selectedNode:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             typeGraphe\n                        \n                    \n                    \n                        \n                            typeGraphe:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             weight\n                        \n                    \n                    \n                        \n                            weight:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { GrapheService } from '../../Services/graphe.service';\r\nimport { SaveUploadService } from '../../Services/save-upload.service';\r\nimport { AlgorithmService } from '../../Services/algorithm.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DarkModeService } from '../../Services/dark-mode.service';\r\nimport { GeneratePDFService } from '../../Services/generate-pdf.service';\r\n\r\n/**\r\n * Angular component representing the screen box.\r\n */\r\n@Component({\r\n  selector: 'app-screenbox',\r\n  templateUrl: './screenbox.component.html',\r\n  styleUrls: ['./screenbox.component.css'],\r\n})\r\nexport class ScreenboxComponent implements OnInit,OnDestroy {\r\n  private buttonClicked:string=\"\";\r\n  private restoreArray:Array =[] ;\r\n  typeGraphe: string = \"\";\r\n  weight?:number;\r\n  containerHeight:number=70;//Height of msg box\r\n  selectedNode:Array=[];\r\n  message:string=\"\";\r\n  algorithm:string=\"\";\r\n  nodeNamingMethode:string=\"\";\r\n  remove:string=\"\";\r\n  saveUpload:string=\"\";\r\n  changeSelect:string=\"\";\r\n  nodeName:string=\"numerique\";\r\n  private nodeId:number=0;//Increment and assign a new node\r\n  private nodeIdChanged:any;\r\n  /**\r\n   * Initializes a new instance of the ScreenboxComponent class.\r\n   *\r\n   * @param {ElementRef} el - The ElementRef for this component.\r\n   * @param {GrapheService} grapheS - The GrapheService instance.\r\n   * @param {AlgorithmService} algoS - The AlgorithmService instance.\r\n   * @param {SaveUploadService} saveUploadS - The SaveUploadService instance.\r\n   * @param {TranslateService} translate - The TranslateService instance.\r\n   * @param {DarkModeService} darkModeS - The DarkModeService instance.\r\n   */\r\n  constructor(private el: ElementRef,protected grapheS:GrapheService,protected algoS:AlgorithmService,protected saveUploadS:SaveUploadService,protected translate:TranslateService,protected darkModeS:DarkModeService) {\r\n  }\r\n  /**\r\n   * Angular lifecycle hook called when the component is initialized.\r\n   */\r\n  ngOnInit(): void {\r\n    this.grapheS.OnInit(this);\r\n    this.grapheS.OnScreenTap(this);\r\n    this.grapheS.OnEdgeTap(this);\r\n    this.grapheS.OnNodeTap(this);\r\n  }\r\n  /**\r\n   * Angular lifecycle hook called when the component is destroyed.\r\n   */\r\n  ngOnDestroy(): void {\r\n    this.grapheS.OnDestroy();\r\n  }\r\n  /**\r\n   * Gets the ID of the button that was clicked and triggers relevant actions.\r\n   *\r\n   * @param {any} event - The event containing the click target.\r\n   */\r\n  getButtonClickedId(event: any): void {\r\n    this.buttonClicked= event.target.id;\r\n    this.grapheS.resetColors();\r\n    this.grapheS.onChangeButtonClicked(this);\r\n  }\r\n  /**\r\n   * Handles the change in weight.\r\n   *\r\n   * @param {number} newWeight - The new weight value(app-add-weighted-edge Output).\r\n   */\r\n  onWeightChange(newWeight: number): void {\r\n    this.weight=newWeight;\r\n  }\r\n  /**\r\n   * Changes the type of the graph.\r\n   *\r\n   * @param {string} data - The new graph type data.\r\n   */\r\n  chngeTypeGraphe(data:string): void {\r\n    this.typeGraphe=data;\r\n  }\r\n}\r\n\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n  Components\n  SelectComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/select/select.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                select.component.css\n            \n\n\n\n            \n                templateUrl\n                select.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            Class\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            container\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            disableLabell\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            functionHandler\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            items\n                        \n                        \n                              \n                                Type:    any[]\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            selected\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n\n    \n        Methods\n            \n                \n                    \n                        \n                             onChange\n                        \n                    \n    \n                    \n                        \n    onChange()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             selectedNew\n                        \n                    \n                    \n                        \n                            selectedNew:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component,EventEmitter,Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.css']\r\n})\r\nexport class SelectComponent {\r\n  @Input() disableLabell:string=\"\";\r\n  @Input() container:any;\r\n  @Input() functionHandler:any;\r\n  @Input() Class:string=\"\";\r\n  @Input() items:Array=[];\r\n  @Output() selected:EventEmitter= new EventEmitter();\r\n  selectedNew:string=\"\";\r\n  onChange():void{\r\n    this.selected.emit(this.selectedNew);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlgorithmService.html":{"url":"injectables/AlgorithmService.html","title":"injectable - AlgorithmService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AlgorithmService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/algorithm.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for performing algorithms.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(translate: TranslateService)\n                                \n                            \n            \n                            \n                                \n                                        Creates an instance of AlgorithmService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                translate\n                                                                    :     TranslateService\n            \n                                                            \n                                                            \n                                                                \n            The translation service.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     bfsAnimation\n                                \n                            \n            \n                            \n                                \n            bfsAnimation(rootNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform a breadth-first search (BFS) animation.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for BFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     dfsAnimation\n                                \n                            \n            \n                            \n                                \n            dfsAnimation(rootNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform a depth-first search (DFS) animation and update node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for DFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     printPath\n                                \n                            \n            \n                            \n                                \n            printPath(rootNodeId: string, path: { [nodeId: string]: string; }, targetNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Print the path and update the container's message.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for DFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                path\n                                                                    :     Object\n            \n                                                            \n                                                            \n                                                                \n            The DFS path object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the target node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     dijkstraAlgorithm\n                                \n                            \n            \n                            \n                                \n            dijkstraAlgorithm(rootNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform Dijkstra's algorithm to find the shortest path and update node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for Dijkstra's algorithm.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     dijkstraAnimation\n                                \n                            \n            \n                            \n                                \n            dijkstraAnimation(rootNodeId: string, targetNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Dijkstra's algorithm by updating node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for Dijkstra's algorithm.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the target node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     bellmanFordAnimation\n                                \n                            \n            \n                            \n                                \n            bellmanFordAnimation(rootNodeId: string, targetNodeId: string, container: any, time: number)\n                                \n                            \n            \n                            \n                                \n                                        Perform Bellman-Ford algorithm to find the shortest path and update node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for Bellman-Ford algorithm.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     bellmanFordAlgorithm\n                                \n                            \n            \n                            \n                                \n            bellmanFordAlgorithm(rootNodeId: string, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Bellman-Ford algorithm by updating node and edge styles.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                rootNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the root node for Bellman-Ford algorithm.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetNodeId\n                                                            \n                                                            \n                                                                \n            The ID of the target node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     floydWarshallAlgorithm\n                                \n                            \n            \n                            \n                                \n            floydWarshallAlgorithm(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform Floyd-Warshall algorithm to find all-pairs shortest paths and update messages.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeAlgorithm\n                                \n                            \n            \n                            \n                                \n            changeAlgorithm(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Change the selected algorithm and update the container's message.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     bfs\n                                \n                            \n            \n                            \n                                \n            bfs(node: any, visitedNodes: any)\n                                \n                            \n            \n                            \n                                \n                                        Perform breadth-first search (BFS) starting from a given node and mark visited nodes.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                node\n                                                            \n                                                            \n                                                                \n            The starting node for BFS.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                visitedNodes\n                                                                    :     Set\n            \n                                                            \n                                                            \n                                                                \n            A set to track visited node IDs.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isGraphConnected\n                                \n                            \n            \n                            \n                                \n            isGraphConnected(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Check if the graph is connected by performing a breadth-first search (BFS) from a starting node.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                True if the graph is connected; otherwise, false.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isAllEdgePositive\n                                \n                            \n            \n                            \n                                \n            isAllEdgePositive(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Check if all edges in the graph are positive (weight > 0).\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                            \n                                                True if all edges have positive weights; otherwise, false.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     MinimumSpanningTreeEdges\n                                \n                            \n            \n                            \n                                \n            MinimumSpanningTreeEdges(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Find the minimum spanning tree edges using Kruskal's algorithm and return them as an array.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                An array of minimum spanning tree edges.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     kruskalAnimation\n                                \n                            \n            \n                            \n                                \n            kruskalAnimation(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Kruskal's algorithm by changing edge and node colors to visualize the minimum spanning tree.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     primeAniamantion\n                                \n                            \n            \n                            \n                                \n            primeAniamantion(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Prim's algorithm by changing edge and node colors to visualize the minimum spanning tree.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRandomColor\n                                \n                            \n            \n                            \n                                \n            getRandomColor()\n                                \n                            \n            \n                            \n                                \n                                        Get a random color.\n            \n                                        \n                                        \n                                        \n                                            Returns:     string\n            \n                                        \n                                            \n                                                \n            A randomly generated color in hexadecimal format.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     tarjanStronglyComponentAnimation\n                                \n                            \n            \n                            \n                                \n            tarjanStronglyComponentAnimation(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Animate Tarjan's strongly connected components algorithm by changing node and edge colors.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph and visualization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     aStarAnimation\n                                \n                            \n            \n                            \n                                \n            aStarAnimation(container: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n/**\r\n * Service for performing algorithms.\r\n *\r\n * @description This service provides functionality for algorithm animations.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlgorithmService {\r\n  /**\r\n   * Creates an instance of AlgorithmService.\r\n   *\r\n   * @param {TranslateService} translate - The translation service.\r\n   */\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  /**\r\n   * Perform a breadth-first search (BFS) animation.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for BFS.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  bfsAnimation(rootNodeId: string,container:any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    const visited:Array = [];\r\n    const path: { [nodeId: string]: string } = {}; // To store the BFS path\r\n    let j:number=0;\r\n    let bfs:any=container.grapheS.cy.elements().bfs({\r\n      roots: root,\r\n      visit: (v:any, e:any, u:any, i:any, depth:any) => {\r\n        setTimeout(() => {\r\n          visited.push(v.id());\r\n          v.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE_ALGO); // Update node color\r\n          v.style('color',container.grapheS.COLOR_NODE_ALGO);\r\n          if (u && e) {\r\n            u.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE);\r\n            u.style('color', container.grapheS.COLOR_NODE);\r\n            e.style('line-color', container.grapheS.COLOR_LINE_EDGE_ALGO); // Update edge color\r\n            e.style('target-arrow-color', container.grapheS.TARGET_ARROW_COLOR_ALGO);\r\n            e.style('color', container.grapheS.DATA_EDGE_COLOR_ALGO)\r\n            path[v.id()] = u.id();\r\n          }\r\n          if (i == visited.length-1 ) {\r\n            this.printPath(rootNodeId, path, v.id(),container); // Print path when all nodes are visited\r\n          }\r\n        }, i * 2000); // Animation delay\r\n        j=i;\r\n      },\r\n      directed: (container.grapheS.typeGraphe.split(\" \")[0]==\"Directed\")\r\n    });\r\n    setTimeout(() => {\r\n      let path:string=\"\";\r\n      for(let i:number=0;i = [];\r\n    const path: { [nodeId: string]: string } = {}; // Pour stocker le chemin DFS\r\n    let j:number=0;\r\n    container.grapheS.cy.elements().dfs({\r\n        roots: root,\r\n        visit: (v: any, e: any, u: any, i: any, depth: any) => {\r\n            setTimeout(() => {\r\n                visited.push(v.id());\r\n                v.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE_ALGO); // Update node color\r\n                v.style('color',container.grapheS.COLOR_NODE_ALGO);\r\n\r\n                if (u && e) {\r\n                  u.style('background-color', container.grapheS.BACKGROUND_COLOR_NODE);\r\n                  u.style('color', container.grapheS.COLOR_NODE);\r\n                  e.style('line-color', container.grapheS.COLOR_LINE_EDGE_ALGO); // Update edge color\r\n                  e.style('target-arrow-color', container.grapheS.TARGET_ARROW_COLOR_ALGO);\r\n                  e.style('color', container.grapheS.DATA_EDGE_COLOR_ALGO)\r\n                    path[v.id()] = u.id();\r\n                }\r\n                if (i === visited.length - 1) {\r\n                    this.printPath(rootNodeId, path, v.id(), container); // Afficher le chemin lorsque tous les nœuds sont visités\r\n                }\r\n            }, i * 2000); // Délai d'animation\r\n            j=i;\r\n        },\r\n        directed: (container.grapheS.typeGraphe.split(\" \")[0]==\"Directed\")\r\n    });\r\n    setTimeout(() => {\r\n      let path:string=\"\";\r\n      for(let i:number=0;i ');\r\n      if(container.algorithm==\"dfs\"){\r\n        container.message = this.translate.instant('algoS.msg2') + PathString;\r\n      }else if(container.algorithm==\"bfs\"){\r\n        container.message = this.translate.instant('algoS.msg1') + PathString;\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Perform Dijkstra's algorithm to find the shortest path and update node and edge styles.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for Dijkstra's algorithm.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  dijkstraAlgorithm(rootNodeId: string, container: any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    let directed=false;\r\n    if(container.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n      directed=true;\r\n    }\r\n    const dijkstra = container.grapheS.cy.elements().dijkstra({\r\n        root: root,\r\n        weight: (edge:any) => edge.data('weight')||1,\r\n        directed:directed\r\n    });\r\n    let lastMessage:string=\"||\";\r\n    container.grapheS.cy.nodes().forEach((node:any) => {\r\n        if (node.id() !== rootNodeId) {\r\n            const targetNodeId = node.data('id');\r\n            const pathToTarget = dijkstra.pathTo(container.grapheS.cy.$(`#${targetNodeId}`));\r\n            const distanceToTarget = dijkstra.distanceTo(container.grapheS.cy.$(`#${targetNodeId}`));\r\n            const pathNodes = pathToTarget.nodes().map((node:any) => node.data('id'));\r\n            const pathString = pathNodes.join(' -> ');\r\n            lastMessage += this.translate.instant('algoS.msg4', { rootNodeId,targetNodeId,pathString,distanceToTarget });\r\n          }\r\n    });\r\n    container.grapheS.resetColors();\r\n    container.message=lastMessage;\r\n    container.algorithm=\"\";\r\n  }\r\n  /**\r\n   * Animate Dijkstra's algorithm by updating node and edge styles.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for Dijkstra's algorithm.\r\n   * @param {string} targetNodeId - The ID of the target node.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  dijkstraAnimation(rootNodeId: string, targetNodeId: string, container: any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    let directed = false;\r\n    if (container.typeGraphe.split(\" \")[0] === \"Directed\") {\r\n      directed = true;\r\n    }\r\n    const dijkstra = container.grapheS.cy.elements().dijkstra({\r\n      root: root,\r\n      weight: (edge: any) => edge.data('weight') || 1,\r\n      directed: directed\r\n    });\r\n    let i=0;\r\n    const targetNode = container.grapheS.cy.$(`#${targetNodeId}`);\r\n    const pathToTarget = dijkstra.pathTo(targetNode);\r\n    const distanceToTarget = dijkstra.distanceTo(targetNode);\r\n    const pathNodes = pathToTarget.nodes().map((node: any) => node.data('id'));\r\n    container.grapheS.changeColorNode(targetNode, container.grapheS.BACKGROUND_COLOR_NODE,container.grapheS.COLOR_NODE);\r\n    for(let k:number=0;k{ \r\n          container.grapheS.changeColorNode(pathToTarget.nodes()[k], container.grapheS.BACKGROUND_COLOR_NODE_ALGO,container.grapheS.COLOR_NODE_ALGO,i++*2000);\r\n          if(k!=pathToTarget.nodes().length-1){\r\n            container.grapheS.changeColorEdge(pathToTarget.edges()[k],container.grapheS.DATA_EDGE_COLOR_ALGO,container.grapheS.COLOR_LINE_EDGE_ALGO,container.grapheS.TARGET_ARROW_COLOR_ALGO,i*2000);\r\n          }\r\n        },i*2000);\r\n    }\r\n    const pathString = pathNodes.join(' -> ');\r\n    container.message = this.translate.instant(\"algoS.msg3\",{rootNodeId,targetNodeId,pathString,distanceToTarget});\r\n    container.algorithm=\"\";\r\n  }\r\n\r\n  /**\r\n   * Perform Bellman-Ford algorithm to find the shortest path and update node and edge styles.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for Bellman-Ford algorithm.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  bellmanFordAnimation(rootNodeId: string, targetNodeId: string, container: any,time:number=2000): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    let directed = false;\r\n    if (container.typeGraphe.split(\" \")[0] === \"Directed\") {\r\n      directed = true;\r\n    }\r\n    const bellmanFord = container.grapheS.cy.elements().bellmanFord({\r\n      root: root,\r\n      weight: (edge: any) => edge.data('weight') || 1,\r\n      directed: directed\r\n    });\r\n    let i=0;\r\n    const targetNode = container.grapheS.cy.$(`#${targetNodeId}`);\r\n    const pathToTarget = bellmanFord.pathTo(targetNode);\r\n    const distanceToTarget = bellmanFord.distanceTo(targetNode);\r\n    const pathNodes = pathToTarget.nodes().map((node: any) => node.data('id'));\r\n    container.grapheS.changeColorNode(targetNode, container.grapheS.BACKGROUND_COLOR_NODE,container.grapheS.COLOR_NODE);\r\n    for(let k:number=0;k{ \r\n        container.grapheS.changeColorNode(pathToTarget.nodes()[k], container.grapheS.BACKGROUND_COLOR_NODE_ALGO,container.grapheS.COLOR_NODE_ALGO,i++*time);\r\n        if(k!=pathToTarget.nodes().length-1){\r\n          container.grapheS.changeColorEdge(pathToTarget.edges()[k],container.grapheS.DATA_EDGE_COLOR_ALGO,container.grapheS.COLOR_LINE_EDGE_ALGO,container.grapheS.TARGET_ARROW_COLOR_ALGO,i*time);\r\n        }\r\n      },i*time);\r\n    }\r\n    const pathString = pathNodes.join(' -> ');\r\n    container.message = this.translate.instant(\"algoS.msg3\",{rootNodeId,targetNodeId,pathString,distanceToTarget});\r\n    container.algorithm=\"\";\r\n  }\r\n\r\n  /**\r\n   * Animate Bellman-Ford algorithm by updating node and edge styles.\r\n   *\r\n   * @param {string} rootNodeId - The ID of the root node for Bellman-Ford algorithm.\r\n   * @param {string} targetNodeId - The ID of the target node.\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  bellmanFordAlgorithm(rootNodeId: string, container: any): void {\r\n    const root = container.grapheS.cy.$(`#${rootNodeId}`);\r\n    let directed=false;\r\n    if(container.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n      directed=true;\r\n    }\r\n    const bellmanFord = container.grapheS.cy.elements().bellmanFord({\r\n        root: root,\r\n        weight: (edge:any) => edge.data('weight')||1,\r\n        directed:directed\r\n    });\r\n    let lastMessage:string=\"||\";\r\n    let i:number=0;\r\n    for(i=0;i node.data('id'));\r\n        const pathString = pathNodes.join(' -> ');\r\n        lastMessage += this.translate.instant('algoS.msg4', { rootNodeId,targetNodeId,pathString,distanceToTarget });\r\n     }\r\n    }\r\n    container.grapheS.resetColors();\r\n    container.message=lastMessage;\r\n    container.algorithm=\"\";\r\n  }\r\n\r\n  /**\r\n   * Perform Floyd-Warshall algorithm to find all-pairs shortest paths and update messages.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  floydWarshallAlgorithm(container: any): void {\r\n    let directed = false;\r\n    if (container.typeGraphe.split(\" \")[0] === \"Directed\") {\r\n      directed = true;\r\n    }\r\n    \r\n    const cy = container.grapheS.cy;\r\n    const floydWarshall = cy.elements().floydWarshall({\r\n      weight: (edge: any) => edge.data('weight') || 1,\r\n      directed: directed\r\n    });\r\n\r\n    container.message = \"||\";\r\n    let space:string=\"     \";\r\n    cy.nodes().forEach((nodeA: any) => {\r\n      cy.nodes().forEach((nodeB: any) => {\r\n        if (nodeA.id() !== nodeB.id()) {\r\n          const distance = floydWarshall.distance(nodeA, nodeB);\r\n          const pathToNodeB = floydWarshall.path(nodeA, nodeB);\r\n          let rootNodeId=nodeA.data(\"id\");\r\n          let targetNodeId=nodeB.data(\"id\");\r\n          if (distance !== Infinity) {\r\n            const pathNodes = pathToNodeB.nodes().map((node: any) => node.data('id'));\r\n            const pathString = pathNodes.join(' -> ');\r\n            container.message += this.translate.instant(\"algoS.msg5\", { rootNodeId, targetNodeId, distance, pathString });\r\n          } else {\r\n            container.message += this.translate.instant(\"algoS.msg6\",{rootNodeId, targetNodeId});\r\n          }\r\n        }\r\n      });\r\n    });\r\n    container.algorithm=\"\";\r\n  }\r\n\r\n  /**\r\n   * Change the selected algorithm and update the container's message.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  changeAlgorithm(container:any):void{\r\n    if(container.typeGraphe!=\"\" && container.grapheS.cy.nodes().length){\r\n      //DRY\r\n      container.changeSelect=\"\";\r\n      container.remove=\"\";\r\n      container.buttonClicked=\"\";\r\n      container.saveUpload = \"\";\r\n      container.containerHeight=50;\r\n      container.selectedNode=[];\r\n      //\r\n      container.grapheS.resetColors();\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n      formRemoveNode.style.display=\"none\";\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formRemoveEdge.style.display=\"none\";\r\n      container.grapheS.position=\"\";\r\n      container.message=this.translate.instant(\"algoS.msg7\",{algorithm:container.algorithm});\r\n      if(container.algorithm==\"floydWarshall\"){\r\n        this.floydWarshallAlgorithm(container);\r\n      }else if(container.algorithm==\"tarjan\"){\r\n        if(container.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n          this.tarjanStronglyComponentAnimation(container);\r\n        }else{\r\n          container.message=this.translate.instant(\"algoS.msg14\");\r\n          container.algorithm=\"\"\r\n        }\r\n      }\r\n      else if((container.algorithm==\"dijkstra\" || container.algorithm==\"dijkstraAB\")&& !this.isAllEdgePositive(container)){\r\n        container.message=container.translate.instant(\"algoS.msg10\");\r\n        container.algorithm=\"\";\r\n      }else if(container.algorithm==\"kruskal\" || container.algorithm==\"prime\"){\r\n        if(this.isGraphConnected(container)==true && container.typeGraphe.split(\" \")[0]==\"Undirected\" /*&& container.typeGraphe.split(\" \")[1]==\"Weighted\"*/){\r\n          container.grapheS.resetColors();\r\n          if(container.algorithm==\"kruskal\"){\r\n            container.message=\"Kruskal(MST): \";\r\n            this.kruskalAnimation(container);\r\n          }else{\r\n            container.message=\"Prime(MST): \";\r\n            this.primeAniamantion(container);\r\n          }\r\n          container.algorithm=\"\"\r\n        }else{\r\n          if(container.algorithm==\"kruskal\"){\r\n            container.message=container.translate.instant(\"algoS.msg8\");\r\n          }else{\r\n            container.message=container.translate.instant(\"algoS.msg12\");\r\n          }\r\n          setTimeout(()=>{\r\n            container.algorithm=\"\";\r\n          },2);\r\n        }\r\n      }\r\n    }else{\r\n      if(!container.grapheS.cy.nodes().length){\r\n        container.message=container.translate.instant(\"algoS.msg11\");\r\n      }else if(container.typeGraphe==\"\"){\r\n        container.message=this.translate.instant(\"screenbox.msg23\");\r\n      }\r\n      container.algorithm=\"\";\r\n    }\r\n  }\r\n  /**\r\n   * Perform breadth-first search (BFS) starting from a given node and mark visited nodes.\r\n   *\r\n   * @param {any} node - The starting node for BFS.\r\n   * @param {Set} visitedNodes - A set to track visited node IDs.\r\n   */\r\n  bfs(node:any,visitedNodes:any):void {\r\n    var queue = [node];\r\n    visitedNodes.add(node.id());\r\n\r\n    while (queue.length > 0) {\r\n      var currentNode = queue.shift();\r\n      var neighbors = currentNode.neighborhood().nodes();\r\n\r\n      neighbors.forEach((neighbor:any) =>{\r\n        if (!visitedNodes.has(neighbor.id())) {\r\n          visitedNodes.add(neighbor.id());\r\n          queue.push(neighbor);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the graph is connected by performing a breadth-first search (BFS) from a starting node.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   * @returns {boolean} True if the graph is connected; otherwise, false.\r\n   */\r\n  isGraphConnected(container:any):boolean{\r\n    if(container.grapheS.cy?.nodes().length){\r\n      var startNode = container.grapheS.cy.nodes().first(); \r\n      var visitedNodes = new Set();\r\n      this.bfs(startNode,visitedNodes);\r\n      return visitedNodes.size === container.grapheS.cy.nodes().size();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if all edges in the graph are positive (weight > 0).\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   * @returns {boolean} True if all edges have positive weights; otherwise, false.\r\n   */\r\n  isAllEdgePositive(container:any):boolean{\r\n    let allPositive:boolean=true;\r\n    if(container.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n      container.grapheS.cy.edges().forEach((edge:any)=>{\r\n        if(edge.data('weight')} An array of minimum spanning tree edges.\r\n   */\r\n  MinimumSpanningTreeEdges(container:any): Array {\r\n    const edges = container.grapheS.cy.edges().toArray();\r\n    edges.sort((a:any, b:any) => {\r\n      const weightA = a.data('weight') || 1;\r\n      const weightB = b.data('weight') || 1;\r\n      return weightA - weightB;\r\n    });\r\n    const treeEdges: Array = [];\r\n    const treeNodes = new Set();\r\n    for (const edge of edges) {\r\n      const sourceId:any = edge.source().id();\r\n      const targetId:any = edge.target().id();\r\n      if (!treeNodes.has(sourceId) || !treeNodes.has(targetId)) {\r\n        treeEdges.push(edge);\r\n        treeNodes.add(sourceId);\r\n        treeNodes.add(targetId);\r\n      }\r\n      if (treeEdges.length === container.grapheS.cy.nodes().length - 1) {\r\n        break; // L'arbre de poids minimal est complet\r\n      }\r\n    }\r\n    return treeEdges;\r\n  }\r\n\r\n  /**\r\n   * Animate Kruskal's algorithm by changing edge and node colors to visualize the minimum spanning tree.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  kruskalAnimation(container:any):void{\r\n    let i:number=0;\r\n    let j:number=0;\r\n    this.MinimumSpanningTreeEdges(container).forEach((edge:any)=>{\r\n      container.grapheS.changeColorEdge(edge,container.grapheS.DATA_EDGE_COLOR_ALGO,container.grapheS.COLOR_LINE_EDGE_ALGO,container.grapheS.TARGET_ARROW_COLOR_ALGO,j=++i*2000);\r\n      if(i!=container.grapheS.cy.nodes().length - 1){\r\n        setTimeout(()=>{\r\n          container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1})  ||`;\r\n        },j)\r\n      }else{\r\n        setTimeout(()=>{\r\n          container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1})`;\r\n        },j)\r\n      }\r\n    })\r\n    container.grapheS.cy.nodes().forEach((node:any)=>{\r\n      container.grapheS.changeColorNode(node, container.grapheS.BACKGROUND_COLOR_NODE_ALGO,container.grapheS.COLOR_NODE_ALGO,++i*2000);\r\n    })\r\n    container.algorithm=\"\";\r\n  }\r\n\r\n  /**\r\n   * Animate Prim's algorithm by changing edge and node colors to visualize the minimum spanning tree.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph and visualization.\r\n   */\r\n  primeAniamantion(container:any):void{\r\n    let i:number=0;\r\n    let j:number=0;\r\n    this.MinimumSpanningTreeEdges(container).forEach((edge:any)=>{\r\n      container.grapheS.changeColorNode(edge.source(), container.grapheS.BACKGROUND_COLOR_NODE_ALGO,container.grapheS.COLOR_NODE_ALGO,++i*2000);\r\n      container.grapheS.changeColorEdge(edge,container.grapheS.DATA_EDGE_COLOR_ALGO,container.grapheS.COLOR_LINE_EDGE_ALGO,container.grapheS.TARGET_ARROW_COLOR_ALGO,j=++i*2000);\r\n      if(i/2!=container.grapheS.cy.nodes().length - 1){\r\n        setTimeout(()=>{\r\n          container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1})  ||`;\r\n        },j)\r\n      }else{\r\n        container.grapheS.changeColorNode(edge.target(), container.grapheS.BACKGROUND_COLOR_NODE_ALGO,container.grapheS.COLOR_NODE_ALGO,j);\r\n        setTimeout(()=>{\r\n          container.message+=`(s:${edge.source().id()},t:${edge.target().id()},w:${edge.data(\"weight\")||1})`;\r\n        },j)\r\n      }\r\n    })\r\n    container.algorithm=\"\";\r\n  }\r\n  /**\r\n   * Get a random color.\r\n   *\r\n   * @returns {string} - A randomly generated color in hexadecimal format.\r\n   */\r\n  getRandomColor():string {\r\n    const letters:string = '0123456789ABCDEF';\r\n    let color:string = '#';\r\n    for (let i = 0; i  {\r\n      setTimeout(()=>{\r\n        message=this.translate.instant(\"algoS.msg13\",{index:++i});\r\n        container.algorithm=\"\";\r\n        const color:string = this.getRandomColor(); \r\n        const backgroundColor:string = this.getRandomColor();\r\n        const fleshColor:string=this.getRandomColor();\r\n        setTimeout(()=>{\r\n          component.nodes().style({\r\n            'background-color': backgroundColor,\r\n            'border-color': color,\r\n            'color': color,\r\n          });\r\n        },10)\r\n        component.nodes().forEach((node:any)=>{\r\n          message+=node.data('id')+\",\"\r\n        })\r\n        message=message.substring(0, message.length-1);\r\n        setTimeout(()=>{\r\n          component.edges().style({\r\n            'line-color':backgroundColor,\r\n          });\r\n        },10)\r\n       \r\n        if(container.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n          setTimeout(()=>{\r\n            component.edges().style({\r\n              'color': color,\r\n            });\r\n          },10)\r\n          \r\n        }\r\n        if(container.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n          setTimeout(()=>{\r\n            component.edges().style({\r\n              'target-arrow-color': fleshColor,\r\n            });\r\n          },10)\r\n        }\r\n        if(i!=components.length){\r\n          container.message+=message+\" || \";\r\n        }else{\r\n          container.message+=message;\r\n        }\r\n        \r\n      },i*20000)\r\n    });\r\n  }\r\n  \r\n  aStarAnimation(container:any):void{\r\n\r\n  }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DarkModeService.html":{"url":"injectables/DarkModeService.html","title":"injectable - DarkModeService","body":"\n                   \n\n\n\n\n\n  Injectables\n  DarkModeService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/dark-mode.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for managing dark mode settings.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                            \n                                \n                                        Initializes a new instance of the DarkModeService class.\n            \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     toggleDarkMode\n                                \n                            \n            \n                            \n                                \n            toggleDarkMode()\n                                \n                            \n            \n                            \n                                \n                                        Toggles the dark mode setting. If dark mode is currently enabled, it will be disabled, and vice versa.Updates the isDarkMode property and stores the new state in local storage.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     isDarkMode\n                                \n                            \n                            \n                                \n                                    isDarkMode:     boolean\n            \n                                \n                            \n                            \n                                \n                                    Indicates whether dark mode is currently enabled.\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Service for managing dark mode settings.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DarkModeService {\r\n\r\n  /**\r\n   * Initializes a new instance of the DarkModeService class.\r\n   */\r\n  constructor(){}\r\n   /**\r\n   * Indicates whether dark mode is currently enabled.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n   isDarkMode:boolean = localStorage.getItem('darkMode') === 'true';\r\n  /**\r\n   * Toggles the dark mode setting. If dark mode is currently enabled, it will be disabled, and vice versa.\r\n   * Updates the `isDarkMode` property and stores the new state in local storage.\r\n   */\r\n  toggleDarkMode() {\r\n    this.isDarkMode = !this.isDarkMode;\r\n    localStorage.setItem('darkMode', this.isDarkMode.toString());\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GrapheService.html":{"url":"injectables/GrapheService.html","title":"injectable - GrapheService","body":"\n                   \n\n\n\n\n\n  Injectables\n  GrapheService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/graphe.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for managing and interacting with the Cytoscape graph.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(translate: TranslateService)\n                                \n                            \n            \n                            \n                                \n                                        Constructor for the GrapheService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                translate\n                                                                    :     TranslateService\n            \n                                                            \n                                                            \n                                                                \n            The translation service for internationalization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     changeNodeEnum\n                                \n                            \n            \n                            \n                                \n            changeNodeEnum(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the node enumeration.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeChanges\n                                \n                            \n            \n                            \n                                \n            changeChanges(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes a setting or performs an action based on the selected option(chnage colors & sizes).\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeTypeGraphe\n                                \n                            \n            \n                            \n                                \n            changeTypeGraphe(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the type of graph (e.g., Directed, Undirected, Weighted).\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     onChangeButtonClicked\n                                \n                            \n            \n                            \n                                \n            onChangeButtonClicked(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Handles button clicks and performs actions based on the selected option.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeSizeScreen\n                                \n                            \n            \n                            \n                                \n            changeSizeScreen(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the size of the screen.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeSizeScreenComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterChangeSizeScreen\n                                \n                            \n            \n                            \n                                \n            RejeterChangeSizeScreen(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the changes made to the screen size and restores the previous size.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeSizeScreenComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addWeightedEdge\n                                \n                            \n            \n                            \n                                \n            addWeightedEdge(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Adds a weighted edge between selected nodes.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     AddWeightedEdgeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterAddEdgeWeighted\n                                \n                            \n            \n                            \n                                \n            RejeterAddEdgeWeighted(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the addition of a weighted edge and resets the form.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     AddWeightedEdgeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeNodeId\n                                \n                            \n            \n                            \n                                \n            changeNodeId(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the ID of a node in the graph.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeIdNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterChangeNodeId\n                                \n                            \n            \n                            \n                                \n            RejeterChangeNodeId(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the node ID change and resets the form.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeIdNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColor\n                                \n                            \n            \n                            \n                                \n            changeColor(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Changes the colors of nodes, edges, or the screen based on user selection.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     ChangeColorComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterChangeColor\n                                \n                            \n            \n                            \n                                \n            RejeterChangeColor(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the color changes and resets the form.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addNode\n                                \n                            \n            \n                            \n                                \n            addNode(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Adds a new node to the graph if it doesn't already exist.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     AddNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object containing the new node ID.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterAddNode\n                                \n                            \n            \n                            \n                                \n            RejeterAddNode(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Rejects the addition of a new node and resets the form.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     AddNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object containing the new node ID.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnScreenTap\n                                \n                            \n            \n                            \n                                \n            OnScreenTap(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Listens for a tap event on the screen background and adds a new node when conditions are met.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnEdgeTap\n                                \n                            \n            \n                            \n                                \n            OnEdgeTap(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Listens for a tap event on edges and removes edges when the 'remove edges' or 'remove all' action is selected.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnNodeTap\n                                \n                            \n            \n                            \n                                \n            OnNodeTap(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Listens for a tap event on nodes and handles various actions based on the container state.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnInit\n                                \n                            \n            \n                            \n                                \n            OnInit(Container: any)\n                                \n                            \n            \n                            \n                                \n                                        Initializes the graph using Cytoscape and sets up the initial style and layout.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                Container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container element for the graph.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resetColors\n                                \n                            \n            \n                            \n                                \n            resetColors()\n                                \n                            \n            \n                            \n                                \n                                        Resets the visual styles of nodes and edges in the graph to their default colors.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColorNode\n                                \n                            \n            \n                            \n                                \n            changeColorNode(node: any, bgcolor: string, color: string, time: number)\n                                \n                            \n            \n                            \n                                \n                                        Changes the background color and text color of a given node.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                node\n                                                            \n                                                            \n                                                                \n            The node to change the colors of.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                bgcolor\n                                                            \n                                                            \n                                                                \n            The new background color.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                color\n                                                            \n                                                            \n                                                                \n            The new text color.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                time\n                                                            \n                                                            \n                                                                \n            Optional. Time delay before applying the color change.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColorEdge\n                                \n                            \n            \n                            \n                                \n            changeColorEdge(edge: any, color: string, lineEdgeColor: string, targetArrowColor: string, time: number)\n                                \n                            \n            \n                            \n                                \n                                        Changes the visual styles of a given edge, including line color, data color, and target arrow color.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                edge\n                                                            \n                                                            \n                                                                \n            The edge to change the visual styles of.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                color\n                                                            \n                                                            \n                                                                \n            The new data color (used for weighted graphs).\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                lineEdgeColor\n                                                            \n                                                            \n                                                                \n            The new line color.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetArrowColor\n                                                            \n                                                            \n                                                                \n            The new target arrow color (used for directed graphs).\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                time\n                                                            \n                                                            \n                                                                \n            Optional. Time delay before applying the color change.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColorNodes\n                                \n                            \n            \n                            \n                                \n            changeColorNodes()\n                                \n                            \n            \n                            \n                                \n                                        Resets the visual styles of all nodes in the graph to their default colors.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeColorEdges\n                                \n                            \n            \n                            \n                                \n            changeColorEdges()\n                                \n                            \n            \n                            \n                                \n                                        Resets the visual styles of all edges in the graph to their default colors.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     onRemoveChange\n                                \n                            \n            \n                            \n                                \n            onRemoveChange(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Handles actions related to removing elements from the graph and resetting the graph properties.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     searcheEdgeChnageBC\n                                \n                            \n            \n                            \n                                \n            searcheEdgeChnageBC(container: any, source: string, target: string, color: string, lineEdgeColor: string, targetArrowColor: string, time: number)\n                                \n                            \n            \n                            \n                                \n                                        Searches for an edge between two specified nodes and changes its line color.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                source\n                                                            \n                                                            \n                                                                \n            The source node ID.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                target\n                                                            \n                                                            \n                                                                \n            The target node ID.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                lineColor\n                                                            \n                                                            \n                                                                \n            The new line color for the edge.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     restoreGraphe\n                                \n                            \n            \n                            \n                                \n            restoreGraphe(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Restores the graph by adding or removing elements based on the restoreArray.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getListeOfEdge\n                                \n                            \n            \n                            \n                                \n            getListeOfEdge()\n                                \n                            \n            \n                            \n                                \n                                        Generates a formatted list of edges in the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     string\n            \n                                        \n                                            \n                                                \n            A formatted string representing the list of edges.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getListOfNode\n                                \n                            \n            \n                            \n                                \n            getListOfNode()\n                                \n                            \n            \n                            \n                                \n                                        Generates a formatted list of nodes in the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     string\n            \n                                        \n                                            \n                                                \n            A formatted string representing the list of nodes.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDestroy\n                                \n                            \n            \n                            \n                                \n            OnDestroy()\n                                \n                            \n            \n                            \n                                \n                                        Performs cleanup operations when the component is destroyed.Destroys the CytoScape instance.\n            \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     matrixAdjancy\n                                \n                            \n            \n                            \n                                \n            matrixAdjancy()\n                                \n                            \n            \n                            \n                                \n                                        Generates an adjacency matrix representation of the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                \n            A 2D array representing the adjacency matrix.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isEdgeRemove\n                                \n                            \n            \n                            \n                                \n            isEdgeRemove(node1: any, node2: any, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Checks if an edge between two nodes exists and removes it from the graph if found.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                node1\n                                                            \n                                                            \n                                                                \n            The ID of the first node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                node2\n                                                            \n                                                            \n                                                                \n            The ID of the second node.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getDegreeNodes\n                                \n                            \n            \n                            \n                                \n            getDegreeNodes()\n                                \n                            \n            \n                            \n                                \n                                        Get the degrees of all nodes in the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                \n            An array of objects containing node IDs, in-degrees, out-degrees, and degrees.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createGrapheFromAdjancyMatrix\n                                \n                            \n            \n                            \n                                \n            createGrapheFromAdjancyMatrix(elements: any, directed: boolean, weighted: boolean, container: any)\n                                \n                            \n            \n                            \n                                \n                                        Create a graph from an adjacency matrix.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                elements\n                                                            \n                                                            \n                                                                \n            Graph elements, including nodes and edges.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                directed\n                                                            \n                                                            \n                                                                \n            Whether the graph is directed.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                weighted\n                                                            \n                                                            \n                                                                \n            Whether the graph is weighted.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     rejeterGenerateGraphFromMatrixAdjancy\n                                \n                            \n            \n                            \n                                \n            rejeterGenerateGraphFromMatrixAdjancy(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Reject the generation of a graph from an adjacency matrix.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     GrapheFromMatrixAdjaComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     changeStyleGraphe\n                                \n                            \n            \n                            \n                                \n            changeStyleGraphe(typeGraphe: string)\n                                \n                            \n            \n                            \n                                \n                                        Change the style of the graph based on its type.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                typeGraphe\n                                                            \n                                                            \n                                                                \n            The type of the graph (e.g., Directed Weighted).\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createGrapheFromListEdges\n                                \n                            \n            \n                            \n                                \n            createGrapheFromListEdges(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Create a graph from a list of edges.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     GrapheFromEdgesListComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     rejeterGenerateGraphFromListEdges\n                                \n                            \n            \n                            \n                                \n            rejeterGenerateGraphFromListEdges(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Reject the generation of a graph from a list of edges.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing graph-related properties.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     GrapheFromEdgesListComponent\n            \n                                                            \n                                                            \n                                                                \n            Another container object.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getDensityOfGraphe\n                                \n                            \n            \n                            \n                                \n            getDensityOfGraphe()\n                                \n                            \n            \n                            \n                                \n                                        Get the density of the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                \n            The density of the graph.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getNodeIds\n                                \n                            \n            \n                            \n                                \n            getNodeIds()\n                                \n                            \n            \n                            \n                                \n                                        Get an array of node IDs in the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                \n            An array of node IDs.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     incidenceMatrix\n                                \n                            \n            \n                            \n                                \n            incidenceMatrix()\n                                \n                            \n            \n                            \n                                \n                                        Calculate the incidence matrix of the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                \n            The incidence matrix of the graph.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getEdgeIds\n                                \n                            \n            \n                            \n                                \n            getEdgeIds()\n                                \n                            \n            \n                            \n                                \n                                        Get an array of edge IDs in the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                \n            An array of edge IDs.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeEdge\n                                \n                            \n            \n                            \n                                \n            removeEdge(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Remove an edge from the graph.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     RemoveEdgeComponent\n            \n                                                            \n                                                            \n                                                                \n            Additional container.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterRemoveEdge\n                                \n                            \n            \n                            \n                                \n            RejeterRemoveEdge(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Reject the removal of an edge from the graph.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     RemoveEdgeComponent\n            \n                                                            \n                                                            \n                                                                \n            Additional container.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeNode\n                                \n                            \n            \n                            \n                                \n            removeNode(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Remove a node from the graph.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     RemoveNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Additional container.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RejeterRemoveNode\n                                \n                            \n            \n                            \n                                \n            RejeterRemoveNode(container: any, container2: any)\n                                \n                            \n            \n                            \n                                \n                                        Reject the removal of a node from the graph.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container for the graph.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                container2\n                                                                    :     RemoveNodeComponent\n            \n                                                            \n                                                            \n                                                                \n            Additional container.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getAdjancyList\n                                \n                            \n            \n                            \n                                \n            getAdjancyList()\n                                \n                            \n            \n                            \n                                \n                                        Get the adjacency list of the graph.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                            \n                                                \n            The adjacency list of the graph.\n            \n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     alphabets\n                                \n                            \n                            \n                                \n                                    alphabets:     string[]\n            \n                                \n                            \n                            \n                                \n                                    Array of lowercase alphabet characters followed by '1'. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     Alphabets\n                                \n                            \n                            \n                                \n                                    Alphabets:     string[]\n            \n                                \n                            \n                            \n                                \n                                    Array of lowercase alphabet characters followed by '2'. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     alphabets0\n                                \n                            \n                            \n                                \n                                    alphabets0:     string[]\n            \n                                \n                            \n                            \n                                \n                                    Array of lowercase alphabet characters. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     BACKGROUND_COLOR_NODE\n                                \n                            \n                            \n                                \n                                    BACKGROUND_COLOR_NODE:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: black\n                                    \n                                \n                            \n                                \n                                    The background color of nodes. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private BACKGROUND_COLOR_NODE_ALGO\n                                \n                            \n                            \n                                \n                                    BACKGROUND_COLOR_NODE_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: yellow\n                                    \n                                \n                            \n                                \n                                    The background color of nodes in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     COLOR_LINE_EDGE\n                                \n                            \n                            \n                                \n                                    COLOR_LINE_EDGE:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: black\n                                    \n                                \n                            \n                                \n                                    The color of edges. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private COLOR_LINE_EDGE_ALGO\n                                \n                            \n                            \n                                \n                                    COLOR_LINE_EDGE_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: yellow\n                                    \n                                \n                            \n                                \n                                    The color of edges in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     COLOR_NODE\n                                \n                            \n                            \n                                \n                                    COLOR_NODE:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: white\n                                    \n                                \n                            \n                                \n                                    The color of nodes. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private COLOR_NODE_ALGO\n                                \n                            \n                            \n                                \n                                    COLOR_NODE_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: black\n                                    \n                                \n                            \n                                \n                                    The color of nodes in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     counter\n                                \n                            \n                            \n                                \n                                    counter:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                            \n                                \n                                    A counter variable for tracking. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public cy\n                                \n                            \n                            \n                                \n                                    cy:     any\n            \n                                \n                            \n                            \n                                \n                                    The Cytoscape instance used to manage and render the graph. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DATA_EDGE_COLOR\n                                \n                            \n                            \n                                \n                                    DATA_EDGE_COLOR:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: red\n                                    \n                                \n                            \n                                \n                                    The color of data associated with edges. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private DATA_EDGE_COLOR_ALGO\n                                \n                            \n                            \n                                \n                                    DATA_EDGE_COLOR_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: blue\n                                    \n                                \n                            \n                                \n                                    The color of data associated with edges in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     numbersArray\n                                \n                            \n                            \n                                \n                                    numbersArray:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     position\n                                \n                            \n                            \n                                \n                                    position:     any\n            \n                                \n                            \n                            \n                                \n                                    The position of something (needs a description). \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     POSITIONS\n                                \n                            \n                            \n                                \n                                    POSITIONS:     IPosition[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     TARGET_ARROW_COLOR\n                                \n                            \n                            \n                                \n                                    TARGET_ARROW_COLOR:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: blue\n                                    \n                                \n                            \n                                \n                                    The color of the target arrow on edges. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private TARGET_ARROW_COLOR_ALGO\n                                \n                            \n                            \n                                \n                                    TARGET_ARROW_COLOR_ALGO:     any\n            \n                                \n                            \n                                \n                                    \n                                        Default value: black\n                                    \n                                \n                            \n                                \n                                    The color of the target arrow in algorithm animations. \n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public typeGraphe\n                                \n                            \n                            \n                                \n                                    typeGraphe:     string\n            \n                                \n                            \n                            \n                                \n                                    The type of the graph (e.g., Directed, Undirected, Weighted). \n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as cytoscape from 'cytoscape';\r\ninterface IPosition{\r\n  x:number;\r\n  y:number;\r\n}\r\n/**\r\n * Service for managing and interacting with the Cytoscape graph.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GrapheService {\r\n  /** The Cytoscape instance used to manage and render the graph. */\r\n  public cy: any;\r\n\r\n  /** The type of the graph (e.g., Directed, Undirected, Weighted). */\r\n  public typeGraphe: string = \"\";\r\n\r\n  /** Array of lowercase alphabet characters. */\r\n  alphabets0: string[] = Array.from({ length: 26 }, (_, i) =>\r\n    String.fromCharCode(65 + i)\r\n  );\r\n\r\n  /** Array of lowercase alphabet characters followed by '1'. */\r\n  alphabets: string[] = this.alphabets0.concat(\r\n    this.alphabets0.map(letter => letter + '1')\r\n  );\r\n\r\n  /** Array of lowercase alphabet characters followed by '2'. */\r\n  Alphabets: string[] = this.alphabets.concat(\r\n    this.alphabets0.map(letter => letter + '2')\r\n  );\r\n\r\n  /** A counter variable for tracking. */\r\n  counter: number = 0;\r\n  numbersArray:number[] = Array.from(Array(200), (_, i) => i + 1);\r\n  /** The position of something (needs a description). */\r\n  position: any;\r\n  POSITIONS:IPosition[] = \r\n  [\r\n    {x: 241, y: 46},{x: 493, y: 47},{x: 261, y: 174},{x: 541, y: 174},\r\n    {x: 719, y: 41},{x: 736, y: 165},{x: 295, y: 314},{x: 530, y: 301},\r\n    {x: 772, y: 299},{x: 845, y: 43},{x: 885, y: 178},{x: 875, y: 276},\r\n    {x: 82, y: 5},{x: 106, y: 144},{x: 121.28128725008331, y: 263.51311061937736},\r\n    {x: 382, y: 87},{x: 617, y: 105},{x: 592, y: 217},{x: 323, y: 264},{x: 835, y: 319},\r\n    {x: 82, y: 24},{x: 98, y: 274},{x: 88, y: 173},{x: 380, y: 23},{x: 739, y: 73},\r\n    {x: 702, y: 211},{x: 577, y: 287},{x: 351, y: 323},{x: 350, y: 200},{x: 533, y: 108},\r\n    {x: 1221, y: 49},{x: 970, y: 133},{x: 1227, y: 227},{x: 1154, y: 353},{x: 919, y: 378},\r\n    {x: 887, y: 239},{x: 958, y: 48}\r\n  ];\r\n\r\n\r\n\r\n  /** The color of nodes. */\r\n  COLOR_NODE: any = \"white\";\r\n\r\n  /** The background color of nodes. */\r\n  BACKGROUND_COLOR_NODE: any = \"black\";\r\n\r\n  /** The color of edges. */\r\n  COLOR_LINE_EDGE: any = \"black\";\r\n\r\n  /** The color of the target arrow on edges. */\r\n  TARGET_ARROW_COLOR: any = \"blue\";\r\n\r\n  /** The color of data associated with edges. */\r\n  DATA_EDGE_COLOR: any = \"red\";\r\n\r\n  //----------------------------------------------------------------\r\n  // Private Constants for Algorithm Colors\r\n  //----------------------------------------------------------------\r\n\r\n  /** The color of the target arrow in algorithm animations. */\r\n  private TARGET_ARROW_COLOR_ALGO: any = \"black\";\r\n\r\n  /** The color of edges in algorithm animations. */\r\n  private COLOR_LINE_EDGE_ALGO: any = \"yellow\";\r\n\r\n  /** The color of nodes in algorithm animations. */\r\n  private COLOR_NODE_ALGO: any = \"black\";\r\n\r\n  /** The background color of nodes in algorithm animations. */\r\n  private BACKGROUND_COLOR_NODE_ALGO: any = \"yellow\";\r\n\r\n  /** The color of data associated with edges in algorithm animations. */\r\n  private DATA_EDGE_COLOR_ALGO: any = \"blue\";\r\n\r\n  //----------------------------------------------------------------\r\n\r\n  /**\r\n   * Constructor for the GrapheService.\r\n   *\r\n   * @param {TranslateService} translate - The translation service for internationalization.\r\n   */\r\n  constructor(private translate: TranslateService) {\r\n    // Constructor logic here\r\n  }\r\n\r\n  /**\r\n   * Changes the node enumeration.\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  changeNodeEnum(container:any):void{\r\n    if(this.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.selectedNode=[];\r\n      if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n        container.algorithm=\"\";\r\n      }\r\n      \r\n      container.saveUpload = \"\";\r\n      container.remove=\"\";\r\n      container.containerHeight=50;\r\n      this.resetColors();\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n      formAddNode.style.display=\"none\";\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      container.changeSelect=\"\";\r\n      this.position=null;\r\n      //\r\n    }else{\r\n      container.message=this.translate.instant(\"screenbox.msg23\");\r\n      container.nodeName=\"numerique\";\r\n    }\r\n    \r\n  }\r\n  /**\r\n  * Changes a setting or performs an action based on the selected option(chnage colors & sizes).\r\n  *\r\n  * @param {ScreenboxComponent} container - The container object.\r\n  */\r\n  changeChanges(container:any){\r\n    //DRY\r\n    container.selectedNode=[];\r\n    if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n      container.algorithm=\"\";\r\n    }\r\n    container.saveUpload = \"\";\r\n    container.remove=\"\";\r\n    container.containerHeight=50;\r\n    container.buttonClicked=\"\";\r\n    container.restoreArray=[];\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n    const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n    const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n    formRemoveNode.style.display=\"none\";\r\n    formChangeNodeId.style.display=\"none\";\r\n    formAddEdge.style.display=\"none\";\r\n    formChangeColor.style.display=\"none\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    formAddNode.style.display=\"none\";\r\n    formRemoveEdge.style.display=\"none\";\r\n    this.position=\"\";\r\n    this.resetColors();\r\n    //\r\n    if(container.changeSelect==\"changeColorNodes\" || container.changeSelect==\"changeColorEdges\" || container.changeSelect==\"changeColorNodesAlgo\" || container.changeSelect==\"changeColorEdgesAlgo\" || container.changeSelect==\"changeColorScreen\"){\r\n      if(container.changeSelect==\"changeColorNodes\"){\r\n        container.message=this.translate.instant(\"grapheS.msg26\")\r\n      }else if(container.changeSelect==\"changeColorEdges\") {\r\n        container.message=this.translate.instant(\"grapheS.msg27\")\r\n      }if(container.changeSelect==\"changeColorNodesAlgo\"){\r\n        container.message=this.translate.instant(\"grapheS.msg34\")\r\n      }else if(container.changeSelect==\"changeColorEdgesAlgo\") {\r\n        container.message=this.translate.instant(\"grapheS.msg35\")\r\n      }else if(container.changeSelect==\"changeColorScreen\") {\r\n        container.message=this.translate.instant(\"grapheS.msg36\")\r\n      }\r\n      formChangeColor.style.display=\"block\";\r\n    }else if(container.changeSelect==\"addGrapheFromMatrix\"){\r\n      const screen=container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheWithMatrix=container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n      const addGrapheFromEdgesList=container.el.nativeElement.querySelector('.addGrapheFromEdgesList');\r\n      screen.style.display=\"none\";\r\n      addGrapheFromEdgesList.style.display=\"none\";\r\n      buttonManupilation.style.display=\"none\";\r\n      addGrapheWithMatrix.style.display=\"block\";\r\n      container.message=this.translate.instant(\"grapheFromMatrix.msg6\");\r\n    }else if(container.changeSelect==\"addGrapheFromEdgesList\"){\r\n      const screen=container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheWithMatrix=container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n      const addGrapheFromEdgesList=container.el.nativeElement.querySelector('.addGrapheFromEdgesList');\r\n      screen.style.display=\"none\";\r\n      addGrapheFromEdgesList.style.display=\"block\";\r\n      buttonManupilation.style.display=\"none\";\r\n      addGrapheWithMatrix.style.display=\"none\";\r\n      container.message=this.translate.instant(\"grapheFromMatrix.msg6\");///////////////////////Chnge this Message\r\n    }else if(container.changeSelect==\"changeSizeScreen\"){\r\n      container.message=this.translate.instant(\"grapheS.msg39\")\r\n      formAChangeSizeScreen.style.display=\"block\";\r\n    }else if(container.changeSelect==\"changeIdNode\"){\r\n      if(this.typeGraphe && this.cy.nodes().length){\r\n        container.message=this.translate.instant(\"grapheS.msg24\")\r\n      }else{\r\n        if(this.typeGraphe==\"\"){\r\n          container.message=this.translate.instant(\"screenbox.msg23\");\r\n        }else if(this.cy.nodes().length==0){\r\n          container.message=this.translate.instant(\"grapheS.msg41\");\r\n        }\r\n        container.changeSelect=\"\";\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Changes the type of graph (e.g., Directed, Undirected, Weighted).\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  changeTypeGraphe(container:any):void{\r\n    //DRY\r\n    container.selectedNode=[];\r\n    container.buttonClicked=\"\";\r\n    if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n      container.algorithm=\"\";\r\n    }\r\n    container.saveUpload = \"\";\r\n    container.remove=\"\";\r\n    container.changeSelect=\"\";\r\n    this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n    this.counter=0;\r\n    //\r\n    \r\n    this.typeGraphe=container.typeGraphe;\r\n    this.resetColors();\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n    const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n    const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n    formRemoveNode.style.display=\"none\";\r\n    formChangeNodeId.style.display=\"none\";\r\n    formAddEdge.style.display=\"none\";\r\n    formChangeColor.style.display=\"none\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    formAddNode.style.display=\"none\";\r\n    formRemoveEdge.style.display=\"none\";\r\n    this.position=\"\";\r\n    container.containerHeight=50;\r\n    this.cy.remove(this.cy.elements());\r\n    container.message=this.translate.instant(\"grapheS.msg1\");\r\n      if (this.typeGraphe === \"Directed Weighted\") {\r\n          this.changeStyleGraphe(this.typeGraphe);\r\n          container.message+=this.translate.instant(\"grapheS.msg18\")+\" \"+this.translate.instant(\"grapheS.msg20\");\r\n\r\n      }else if (this.typeGraphe === \"Directed Unweighted\") {\r\n          this.changeStyleGraphe(this.typeGraphe);\r\n          container.message+=this.translate.instant(\"grapheS.msg18\")+\" \"+this.translate.instant(\"grapheS.msg21\");\r\n      } else if (this.typeGraphe === \"Undirected Weighted\") {\r\n          this.changeStyleGraphe(this.typeGraphe);\r\n          container.message+=this.translate.instant(\"grapheS.msg19\")+\" \"+this.translate.instant(\"grapheS.msg20\");;\r\n      } else if (this.typeGraphe === \"Undirected Unweighted\") {\r\n        this.changeStyleGraphe(this.typeGraphe);\r\n        container.message+=this.translate.instant(\"grapheS.msg19\")+\" \"+this.translate.instant(\"grapheS.msg21\");;\r\n      }\r\n  }\r\n  /**\r\n * Handles button clicks and performs actions based on the selected option.\r\n *\r\n * @param {ScreenboxComponent} container - The container object.\r\n */\r\n  onChangeButtonClicked(container:any):void{\r\n    if(this.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.changeSelect=\"\";\r\n      container.selectedNode=[];\r\n      if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n        container.algorithm=\"\";\r\n      }\r\n      container.saveUpload = \"\";\r\n      container.remove=\"\";\r\n      container.containerHeight=50;\r\n      //\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n      formRemoveNode.style.display=\"none\";\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formRemoveEdge.style.display=\"none\";\r\n      this.position=\"\";\r\n      if(container.buttonClicked==\"default\"){\r\n        container.message=this.translate.instant(\"grapheS.msg2\");\r\n        this.cy.fit();\r\n      }else if(container.buttonClicked==\"addVertices\"){\r\n        container.message=this.translate.instant(\"grapheS.msg3\");\r\n      }else if(container.buttonClicked==\"addEdges\"){\r\n        if(this.cy.nodes().length){\r\n          container.message=this.translate.instant(\"grapheS.msg4\");\r\n        }else{\r\n          container.message=this.translate.instant(\"grapheS.msg41\");\r\n          container.buttonClicked=\"\";\r\n        }\r\n      }else if(container.buttonClicked==\"restore\"){\r\n        if(!container.restoreArray.length){\r\n          container.message=this.translate.instant(\"grapheS.msg60\")\r\n        }else{\r\n          this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n          this.counter=0;\r\n          this.restoreGraphe(container);\r\n        }        \r\n      }\r\n    }else{\r\n      container.message=this.translate.instant(\"screenbox.msg23\");\r\n      container.buttonClicked=\"\";\r\n    }\r\n  }\r\n  /**\r\n   * Changes the size of the screen.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeSizeScreenComponent} container2 - Another container object.\r\n   */\r\n  changeSizeScreen(container:any,container2:any):void{\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    if(container2.height){\r\n      screen.style.height =container2.height+'px';\r\n      localStorage.setItem('screenHeight', screen.style.height.toString());\r\n      container.message=this.translate.instant(\"grapheS.msg37\",{height:container2.height});\r\n    }else{\r\n      container2.height=screen.style.height =400+'px';//default value\r\n      localStorage.setItem('screenHeight', screen.style.height.toString());\r\n      container.message=this.translate.instant(\"grapheS.msg38\");\r\n    }\r\n    container.changeSelect=\"\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Rejects the changes made to the screen size and restores the previous size.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeSizeScreenComponent} container2 - Another container object.\r\n   */\r\n  RejeterChangeSizeScreen(container:any,container2:any):void{\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    container2.height=screen.style.height.slice(0,-2)||400;\r\n    container.changeSelect=\"\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    container.message=this.translate.instant(\"grapheS.msg40\")\r\n  }\r\n  /**\r\n   * Adds a weighted edge between selected nodes.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddWeightedEdgeComponent} container2 - Another container object.\r\n   */\r\n  addWeightedEdge(container:any,container2:any):void{\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    if(container.weight!=0){\r\n      this.isEdgeRemove(container.selectedNode[0],container.selectedNode[1],container);\r\n      let data={\r\n        source:container.selectedNode[0],\r\n        target:container.selectedNode[1],\r\n        weight:container.weight\r\n      }\r\n      let edge=this.cy.add({\r\n        data\r\n      });\r\n      //NEW CODE\r\n      let elem={status:\"add\",element:edge};\r\n      container.restoreArray.push(elem);\r\n      //\r\n      formAddEdge.style.display='none';\r\n      container.message=this.translate.instant(\"grapheS.msg7\",{selectedNode1:container.selectedNode[0],selectedNode2:container.selectedNode[1],weight:container.weight});\r\n      container.weight=null;\r\n      container2.weightForm=null;\r\n      container.selectedNode=[];\r\n      this.resetColors();\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg8\")\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the addition of a weighted edge and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddWeightedEdgeComponent} container2 - Another container object.\r\n   */\r\n  RejeterAddEdgeWeighted(container:any,container2:any):void{\r\n    container.selectedNode=[];\r\n    container.weight=null;\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    formAddEdge.style.display='none';\r\n    this.resetColors();\r\n    container.message=this.translate.instant(\"grapheS.msg9\");\r\n    container2.weightForm=null;\r\n  }\r\n  /**\r\n   * Changes the ID of a node in the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeIdNodeComponent} container2 - Another container object.\r\n   */\r\n  changeNodeId(container:any,container2:any):void{\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    let idExists=false;\r\n    this.cy.nodes().forEach((node:any)=>{\r\n      if(node.data('id')==container2.newNodeId){\r\n        container.message=this.translate.instant(\"grapheS.msg23\");\r\n        idExists=true;\r\n      }\r\n    })\r\n\r\n    if(idExists==false){\r\n      let node = this.cy.getElementById(container.selectedNode[0]);\r\n      let elem:any;\r\n      let nodeNew=this.cy.add({ group: 'nodes', data: { id: container2.newNodeId}, position: { x: node.position('x'),y: node.position('y'),}});\r\n      \r\n      this.cy.edges().forEach((edge:any)=>{\r\n        if(this.typeGraphe.split(\" \")[1]==\"Unweighted\"){\r\n            if (edge.source().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n              this.cy.add({\r\n                  group: 'edges',\r\n                  data: {\r\n                      source: nodeNew.id(),\r\n                      target: edge.target().id(),\r\n                  }\r\n              });\r\n            } else if (edge.target().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n                this.cy.add({\r\n                    group: 'edges',\r\n                    data: {\r\n                        source: edge.source().id(),\r\n                        target: nodeNew.id(),\r\n                    }\r\n                });\r\n            }\r\n        }else if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n            if (edge.source().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n              this.cy.add({\r\n                  group: 'edges',\r\n                  data: {\r\n                      source: nodeNew.id(),\r\n                      target: edge.target().id(),\r\n                      weight: edge.data('weight') \r\n                  }\r\n              });\r\n            } else if (edge.target().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n                this.cy.add({\r\n                    group: 'edges',\r\n                    data: {\r\n                        source: edge.source().id(),\r\n                        target: nodeNew.id(),\r\n                        weight: edge.data('weight') \r\n                    }\r\n                });\r\n            }\r\n        }\r\n      })\r\n      //Restore\r\n      elem={status:\"remove\",element:node};\r\n      container.restoreArray.push(elem);\r\n      this.cy.remove(node);\r\n      elem={status:\"add\",element:nodeNew};\r\n      container.restoreArray.push(elem);\r\n      //Log message \r\n      container.message=this.translate.instant(\"grapheS.msg25\",{last:container.selectedNode[0],new:container2.newNodeId});\r\n      //Initialiation\r\n      container.nodeIdChanged=container2.newNodeId;\r\n      formChangeNodeId.style.display = 'none';\r\n      container.selectedNode=[];\r\n      container2.newNodeId=null;\r\n      this.resetColors();\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the node ID change and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeIdNodeComponent} container2 - Another container object.\r\n   */\r\n  RejeterChangeNodeId(container:any,container2:any):void{\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    formChangeNodeId.style.display = 'none';\r\n    container.selectedNode=[];\r\n    container2.newNodeId=null;\r\n    this.resetColors();\r\n    container.message=this.translate.instant(\"grapheS.msg22\");\r\n  }\r\n  /**\r\n   * Changes the colors of nodes, edges, or the screen based on user selection.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeColorComponent} container2 - Another container object.\r\n   */\r\n  changeColor(container:any,container2:any){\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    if(container.changeSelect==\"changeColorNodes\"){\r\n      this.COLOR_NODE=container2.color;\r\n      this.BACKGROUND_COLOR_NODE=container2.bgColor;\r\n      this.cy.style()\r\n          .selector('node') \r\n          .style({\r\n            'background-color': this.BACKGROUND_COLOR_NODE,\r\n            'color': this.COLOR_NODE\r\n          })\r\n          .update();\r\n      this.changeColorNodes();\r\n      container.message=this.translate.instant(\"grapheS.msg30\")\r\n    }else if(container.changeSelect==\"changeColorEdges\"){\r\n      this.COLOR_LINE_EDGE=container2.bgColor;\r\n      this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'line-color': this.COLOR_LINE_EDGE,\r\n          })\r\n          .update();\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        this.DATA_EDGE_COLOR=container2.color;\r\n        this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'color': this.DATA_EDGE_COLOR\r\n          })\r\n          .update();\r\n      }\r\n      \r\n      if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n        this.TARGET_ARROW_COLOR=container2.fColor;\r\n        this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n          })\r\n          .update();\r\n      }\r\n      this.changeColorEdges();\r\n      container.message=this.translate.instant(\"grapheS.msg31\")\r\n    }else if(container.changeSelect==\"changeColorNodesAlgo\"){\r\n      this.COLOR_NODE_ALGO=container2.color;\r\n      this.BACKGROUND_COLOR_NODE_ALGO=container2.bgColor;\r\n      container.message=this.translate.instant(\"grapheS.msg32\")\r\n    }else if(container.changeSelect==\"changeColorEdgesAlgo\"){\r\n      this.COLOR_LINE_EDGE_ALGO=container2.bgColor;\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        this.DATA_EDGE_COLOR_ALGO=container2.color;\r\n      }\r\n      \r\n      if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n        this.TARGET_ARROW_COLOR_ALGO=container2.fColor;\r\n      }\r\n      container.message=this.translate.instant(\"grapheS.msg33\")\r\n    }else if(container.changeSelect==\"changeColorScreen\"){\r\n      screen.style.backgroundColor=container2.bgColor;\r\n      localStorage.setItem(\"ScreenColor\",screen.style.backgroundColor.toString());\r\n    }\r\n    container.changeSelect=\"\";\r\n    formChangeColor.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Rejects the color changes and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  RejeterChangeColor(container:any):void {\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    if(container.changeSelect==\"changeColorNodes\"){\r\n      container.message=this.translate.instant(\"grapheS.msg28\")\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg29\")\r\n    }\r\n    container.changeSelect=\"\";\r\n    formChangeColor.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Adds a new node to the graph if it doesn't already exist.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddNodeComponent} container2 - Another container object containing the new node ID.\r\n   */\r\n  addNode(container:any,container2:any):void{\r\n    const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n    let exist:boolean=false;\r\n    if(container2.nodeId){\r\n      this.cy.nodes().forEach((node:any)=>{\r\n        if(node.data('id')==container2.nodeId){\r\n          container.message=this.translate.instant('grapheS.msg23');\r\n          exist=true;\r\n        }\r\n      })\r\n      if(!exist){\r\n        let node=this.cy.add({ group: 'nodes', data: { id: container2.nodeId}, position: this.position });\r\n        let elem={status:\"add\",element:node};\r\n        container.restoreArray.push(elem);\r\n        container.message=this.translate.instant(\"grapheS.msg10\",{nodeId:node.data('id')});\r\n        formAddNode.style.display=\"none\";\r\n        this.position=\"\";\r\n        container2.nodeId=null;\r\n      }\r\n    }else{\r\n      container.message=this.translate.instant('screenbox.msg41');\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the addition of a new node and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddNodeComponent} container2 - Another container object containing the new node ID.\r\n   */\r\n  RejeterAddNode(container:any,container2:any):void{\r\n    const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n    formAddNode.style.display=\"none\";\r\n    this.position=\"\";\r\n    container2.nodeId=null;\r\n  }\r\n  /**\r\n   * Listens for a tap event on the screen background and adds a new node when conditions are met.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnScreenTap(container:any):void{\r\n    this.cy.on('tap', (evt:any)=> {\r\n      if (evt.target === this.cy && container.buttonClicked===\"addVertices\" && this.typeGraphe!=\"\") {\r\n          //Use all possile name of node , case of node deleted id\r\n          this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n          this.counter=0;\r\n          //\r\n          let pos = evt.position || evt.cyPosition;\r\n          let node:any;\r\n          const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n          if(container.nodeName==\"numerique\"){\r\n            formAddNode.style.display=\"none\";\r\n            this.cy.nodes().forEach((node:any)=>{\r\n              if(node.data('id')==this.counter+1){\r\n                ++this.counter;\r\n              }\r\n            })\r\n            node=this.cy.add({ group: 'nodes', data: { id: ++this.counter}, position: pos });\r\n          }else if(container.nodeName==\"alphabic\"){\r\n            formAddNode.style.display=\"none\";\r\n            this.cy.nodes().forEach((node:any)=>{\r\n              if(node.data('id')==this.Alphabets[0]){\r\n                this.Alphabets.shift();\r\n              }\r\n            })\r\n            node=this.cy.add({ group: 'nodes', data: { id: this.Alphabets.shift()}, position: pos });\r\n          }else if(container.nodeName==\"customText\"){\r\n            formAddNode.style.display=\"block\";\r\n            this.position=pos;\r\n          }\r\n          if(container.nodeName!=\"customText\"){\r\n            let elem={status:\"add\",element:node};\r\n            container.restoreArray.push(elem);\r\n            container.message=this.translate.instant(\"grapheS.msg10\",{nodeId:node.data('id')});\r\n          }\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Listens for a tap event on edges and removes edges when the 'remove edges' or 'remove all' action is selected.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnEdgeTap(container:any):void{\r\n    this.cy.on('tap', 'edge',  (evt:any)=> {\r\n      var edge = evt.target;\r\n      if(container.remove==\"remove edges\" || container.remove==\"remove all\"){\r\n        this.resetColors();\r\n        container.message=this.translate.instant(\"grapheS.msg11\",{sourceId:edge.source().id(),targetId:edge.target().id()});\r\n        edge.remove();\r\n         //NEW CODE\r\n         let elem={status:\"remove\",element:edge};\r\n         container.restoreArray.push(elem);\r\n         //\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Listens for a tap event on nodes and handles various actions based on the container state.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnNodeTap(container:any):void{\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    this.cy.on('tap', 'node',  (evt:any)=> {\r\n      var node = evt.target;\r\n      if(container.remove==\"remove nodes\" || container.remove==\"remove all\"){\r\n        this.resetColors();\r\n        node.remove();\r\n        //NEW CODE\r\n        let elem={status:\"remove\",element:node};\r\n        container.restoreArray.push(elem);\r\n        //\r\n        container.message=this.translate.instant(\"grapheS.msg12\",{nodeId:node.data('id')});\r\n      }else if(container.changeSelect===\"changeIdNode\"){\r\n        if(container.selectedNode.length!=0){\r\n          container.selectedNode=[];\r\n        }\r\n        this.changeColorNode(node, this.BACKGROUND_COLOR_NODE_ALGO,this.COLOR_NODE_ALGO);\r\n        container.selectedNode.push(node.data('id'));\r\n        formChangeNodeId.style.display = 'block';\r\n      }else if(container.buttonClicked===\"addEdges\"){\r\n          this.resetColors();\r\n          if(container.selectedNode.length {\r\n      this.cy.nodes().style('background-color', this.BACKGROUND_COLOR_NODE);\r\n      this.cy.nodes().style('color', this.COLOR_NODE);\r\n      this.cy.edges().style('line-color', this.COLOR_LINE_EDGE);\r\n      this.cy.edges().style('color', this.DATA_EDGE_COLOR);\r\n      this.cy.edges().style('target-arrow-color', this.TARGET_ARROW_COLOR);\r\n    },10)\r\n  }\r\n  /**\r\n   * Changes the background color and text color of a given node.\r\n   *\r\n   * @param {any} node - The node to change the colors of.\r\n   * @param {string} bgcolor - The new background color.\r\n   * @param {string} color - The new text color.\r\n   * @param {number} time - Optional. Time delay before applying the color change.\r\n   */\r\n  changeColorNode(node:any,bgcolor:string,color:string,time:number=10): void {\r\n    setTimeout(() => {\r\n      node.style('background-color',bgcolor);\r\n      node.style('color',color);\r\n    },time);\r\n  }\r\n  /**\r\n   * Changes the visual styles of a given edge, including line color, data color, and target arrow color.\r\n   *\r\n   * @param {any} edge - The edge to change the visual styles of.\r\n   * @param {string} color - The new data color (used for weighted graphs).\r\n   * @param {string} lineEdgeColor - The new line color.\r\n   * @param {string} targetArrowColor - The new target arrow color (used for directed graphs).\r\n   * @param {number} time - Optional. Time delay before applying the color change.\r\n   */\r\n  changeColorEdge(edge:any,color:string,lineEdgeColor:string,targetArrowColor:string,time:number=10): void {\r\n    setTimeout(() => {\r\n        edge.style('line-color',lineEdgeColor);\r\n        if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n          edge.style('color',color);\r\n        }\r\n        if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n          edge.style('target-arrow-color', targetArrowColor);\r\n        }\r\n      },time)\r\n  }\r\n  /**\r\n   * Resets the visual styles of all nodes in the graph to their default colors.\r\n   */\r\n  changeColorNodes(): void {\r\n    setTimeout(() => {\r\n      this.cy.nodes().forEach((node:any)=>{\r\n        node.style('background-color',this.BACKGROUND_COLOR_NODE);\r\n        node.style('color',this.COLOR_NODE);\r\n      })\r\n    },10)\r\n  }\r\n  /**\r\n   * Resets the visual styles of all edges in the graph to their default colors.\r\n   */\r\n  changeColorEdges(): void {\r\n    setTimeout(() => {\r\n      this.cy.edges().forEach((edge:any)=>{\r\n        edge.style('line-color',this.COLOR_LINE_EDGE);\r\n        if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n          edge.style('color',this.DATA_EDGE_COLOR);\r\n        }\r\n        if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n          edge.style('target-arrow-color', this.TARGET_ARROW_COLOR);\r\n        }\r\n      })\r\n    },10)\r\n  }\r\n  /**\r\n   * Handles actions related to removing elements from the graph and resetting the graph properties.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   */\r\n  onRemoveChange(container:any):void{\r\n    if(container.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.changeSelect=\"\";\r\n      container.buttonClicked=\"\";\r\n      container.containerHeight=50;\r\n      container.selectedNode=[];\r\n      container.saveUpload=\"\";\r\n      if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n        container.algorithm=\"\";\r\n      }\r\n      //\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formRemoveEdge.style.display=\"none\";\r\n      formRemoveNode.style.display=\"none\";\r\n      container.grapheS.position=\"\";\r\n      this.resetColors();\r\n      if(container.remove==\"reset graphe\"){\r\n        this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n        this.counter=0;\r\n        this.cy.remove(this.cy.elements());\r\n        container.message=this.translate.instant(\"grapheS.msg17\");\r\n      }else if(container.remove==\"remove edges\"){\r\n        container.message=this.translate.instant(\"grapheS.msg44\");\r\n      }else if(container.remove==\"remove nodes\"){\r\n        container.message=this.translate.instant(\"grapheS.msg43\");\r\n      }else if(container.remove==\"remove all\"){\r\n        container.message=this.translate.instant(\"grapheS.msg45\");\r\n      }else if(container.remove==\"special edges\"){\r\n        formRemoveEdge.style.display=\"block\";\r\n        container.message=this.translate.instant(\"grapheS.msg49\");\r\n      }else if(container.remove==\"special nodes\"){\r\n        formRemoveNode.style.display=\"block\";\r\n        container.message=this.translate.instant(\"grapheS.msg50\");\r\n      }\r\n    }else{\r\n      container.message=this.translate.instant(\"screenbox.msg23\");\r\n      container.remove=\"\";\r\n    }\r\n    \r\n  }\r\n  /**\r\n   * Searches for an edge between two specified nodes and changes its line color.\r\n   *\r\n   * @param {any} container - The container object containing graph-related properties.\r\n   * @param {string} source - The source node ID.\r\n   * @param {string} target - The target node ID.\r\n   * @param {string} lineColor - The new line color for the edge.\r\n   */\r\n  searcheEdgeChnageBC(container:any,source:string,target:string,color:string,lineEdgeColor:string,targetArrowColor:string,time:number=10):void{\r\n    const edges = this.cy.elements('edge'); // Select only edges\r\n    edges.forEach((edge:any) => {\r\n        const edgeSourceId = edge.source().id();\r\n        const edgeTargetId = edge.target().id();\r\n        if (edgeSourceId === source && edgeTargetId === target) {\r\n            this.changeColorEdge(edge,color,lineEdgeColor,targetArrowColor,time);\r\n        }\r\n    });\r\n  }\r\n  /**\r\n   * Restores the graph by adding or removing elements based on the restoreArray.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   */\r\n  restoreGraphe(container:any):void{\r\n    if(container.restoreArray.length!=0){\r\n      let elem=container.restoreArray.pop();\r\n      let element=elem.element;\r\n      if(elem.status==\"add\"){\r\n        if(element.isNode() || element.isEdge()){\r\n          element.remove();\r\n          if(element.isNode()){\r\n            container.message=this.translate.instant(\"grapheS.msg55\",{nodeId:element.data('id')});\r\n          }else{\r\n            if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n              container.message=this.translate.instant(\"grapheS.msg58\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight\")});\r\n            }else{\r\n              container.message=this.translate.instant(\"grapheS.msg59\",{source:element.source().id(),target:element.target().id()});\r\n            }\r\n            \r\n          }\r\n        }\r\n      }else{\r\n        if(element.isNode() || element.isEdge()){\r\n          this.cy.add(element);\r\n          if(element.isNode()){\r\n            container.message=this.translate.instant(\"grapheS.msg54\",{nodeId:element.data('id')});\r\n          }else{\r\n            if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n              container.message=this.translate.instant(\"grapheS.msg57\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight\")});\r\n            }else{\r\n              container.message=this.translate.instant(\"grapheS.msg56\",{source:element.source().id(),target:element.target().id()});\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Generates a formatted list of edges in the graph.\r\n   *\r\n   * @returns {string} - A formatted string representing the list of edges.\r\n   */\r\n  getListeOfEdge():string {\r\n    let listOfEdge:string=\"\";\r\n    let i:number=0;\r\n    this.cy?.edges().forEach((edge:any) => {\r\n      i++;\r\n      let element:string=`(${this.translate.instant(\"info.s\")}: ${edge.source().id()},${this.translate.instant(\"info.t\")}: ${edge.target().id()}`;\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        element+=`,${this.translate.instant(\"info.w\")}: ${edge.data('weight')}) `;\r\n      }else{\r\n        element+=\") \";\r\n      }\r\n      if(i!=this.cy?.edges().length){\r\n        element+=\" --- \";\r\n      }\r\n      listOfEdge+=element;\r\n    });\r\n    return listOfEdge;\r\n  }\r\n  /**\r\n   * Generates a formatted list of nodes in the graph.\r\n   *\r\n   * @returns {string} - A formatted string representing the list of nodes.\r\n   */\r\n  getListOfNode():string{\r\n    let listOfNode:string=\"\";\r\n    let i:number=0;\r\n    this.cy?.nodes().forEach((node:any) => {\r\n      i++;\r\n      listOfNode+=`${node.data(\"id\")} `;\r\n      if(i!=this.cy?.nodes().length){\r\n        listOfNode+=\" --- \";\r\n      }\r\n    });\r\n    return listOfNode;\r\n  }\r\n  /**\r\n   * Performs cleanup operations when the component is destroyed.\r\n   * Destroys the CytoScape instance.\r\n   */\r\n  OnDestroy():void{\r\n    this.cy.destroy();\r\n  }\r\n  /**\r\n   * Generates an adjacency matrix representation of the graph.\r\n   * \r\n   * @returns {Array} - A 2D array representing the adjacency matrix.\r\n   */\r\n  matrixAdjancy():Array{\r\n    let adjacencyMatrix:Array=[];\r\n    const nodes = this.cy.nodes();\r\n    const numNodes = nodes.length;\r\n    for (let i = 0; i {\r\n        if((edge.source().id()==node1 && edge.target().id()==node2)/* || (edge.source().id()==node2 && edge.target().id()==node1)*/){\r\n          this.cy.remove(edge);\r\n          let elem={status:\"remove\",element:edge};\r\n          container.restoreArray.push(elem);\r\n        }\r\n      })\r\n  }\r\n  /**\r\n   * Get the degrees of all nodes in the graph.\r\n   *\r\n   * @returns {Array} - An array of objects containing node IDs, in-degrees, out-degrees, and degrees.\r\n   */\r\n  getDegreeNodes():Array{\r\n    let nodesDegre:Array = [];\r\n    let obj:any;\r\n    if(this.cy.nodes().length){\r\n      this.cy.nodes().forEach((node:any) => {\r\n        obj={\r\n          id:node.data('id'),\r\n          indegree:node.indegree(),\r\n          outdegree:node.outdegree(),\r\n          degree:node.degree()\r\n        }; \r\n        nodesDegre.push(obj);\r\n      })\r\n    }\r\n    return nodesDegre;\r\n  }\r\n  /**\r\n   * Create a graph from an adjacency matrix.\r\n   *\r\n   * @param {any} elements - Graph elements, including nodes and edges.\r\n   * @param {boolean} directed - Whether the graph is directed.\r\n   * @param {boolean} weighted - Whether the graph is weighted.\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   */\r\n  createGrapheFromAdjancyMatrix(elements:any,directed:boolean,weighted:boolean,container:any):void{\r\n    this.cy.elements().remove();\r\n    if(directed && weighted){\r\n      container.typeGraphe=this.typeGraphe=\"Directed Weighted\";\r\n      this.changeStyleGraphe(this.typeGraphe);\r\n    }else if (directed) {\r\n        container.typeGraphe=this.typeGraphe=\"Directed Unweighted\";\r\n        this.changeStyleGraphe(this.typeGraphe);\r\n    }else if (weighted) {\r\n        container.typeGraphe=this.typeGraphe=\"Undirected Weighted\";\r\n        this.changeStyleGraphe(this.typeGraphe);\r\n    }else{\r\n        container.typeGraphe=this.typeGraphe=\"Undirected Unweighted\";\r\n        this.changeStyleGraphe(this.typeGraphe);\r\n    }\r\n    let i:number=0;\r\n    elements.forEach((element:any)=>{\r\n      if(element.id){\r\n        const pos = this.POSITIONS[i++];\r\n        this.cy.add({ group: 'nodes', data: { id: element.id}, position: pos });\r\n      }else{\r\n        if(weighted){\r\n          if(element.source && element.target && element.weight){\r\n            if(directed){\r\n              this.cy.add({data:{\r\n                source: element.source,\r\n                target: element.target,\r\n                weight: element.weight\r\n              }\r\n              }); \r\n            }else{\r\n              let exist:boolean=false;\r\n              this.cy.edges().forEach((edge:any)=>{\r\n                if(edge.source().id()==element.target && edge.target().id()==element.source && edge.data(\"weight\")==element.weight){\r\n                  exist=true;\r\n                }\r\n              })\r\n              if(!exist){\r\n                this.cy.add({data:{\r\n                  source: element.source,\r\n                  target: element.target,\r\n                  weight: element.weight\r\n                }\r\n                }); \r\n              }\r\n            }\r\n              \r\n          }\r\n        }else{\r\n          if(element.source && element.target){\r\n            if(directed){\r\n              this.cy.add({\r\n                data: {\r\n                source: element.source,\r\n                target: element.target,\r\n                }\r\n              }); \r\n            }else{\r\n              let exist:boolean=false;\r\n              this.cy.edges().forEach((edge:any)=>{\r\n                if(edge.source().id()==element.target && edge.target().id()==element.source){\r\n                  exist=true;\r\n                }\r\n              })\r\n              if(!exist){\r\n                this.cy.add({\r\n                  data: {\r\n                  source: element.source,\r\n                  target: element.target,\r\n                  }\r\n                }); \r\n              }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    });\r\n  }\r\n  /**\r\n   * Reject the generation of a graph from an adjacency matrix.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   * @param {GrapheFromMatrixAdjaComponent} container2 - Another container object.\r\n   */\r\n  rejeterGenerateGraphFromMatrixAdjancy(container:any,container2:any):void {\r\n    const screen=container.el.nativeElement.querySelector('.screen');\r\n    const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n    const addGrapheWithMatrix=container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n    screen.style.display=\"block\";\r\n    buttonManupilation.style.display=\"block\";\r\n    addGrapheWithMatrix.style.display=\"none\";\r\n    container2.matrixText=\"\";\r\n    container.message=this.translate.instant(\"grapheFromMatrix.msg5\");\r\n    container.changeSelect=\"\";\r\n  }\r\n  /**\r\n   * Change the style of the graph based on its type.\r\n   *\r\n   * @param {string} typeGraphe - The type of the graph (e.g., Directed Weighted).\r\n   */\r\n  changeStyleGraphe(typeGraphe:string):void{\r\n    if(typeGraphe==\"Directed Weighted\"){\r\n      this.cy.style()\r\n        .selector('edge') \r\n        .style({\r\n            'width': 4,\r\n            'line-color': this.COLOR_LINE_EDGE,\r\n            'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n            'target-arrow-shape': 'triangle',\r\n            'color': this.DATA_EDGE_COLOR,\r\n            'curve-style': 'bezier',\r\n            'label': \"data(weight)\",\r\n            'text-margin-y': -12\r\n        })\r\n        .update();\r\n    }else if(typeGraphe==\"Directed Unweighted\"){\r\n      this.cy.style()\r\n        .selector('edge') // Apply the style to all edges\r\n        .style({\r\n            'width': 4,\r\n            'line-color': this.COLOR_LINE_EDGE,\r\n            'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n            'target-arrow-shape': 'triangle',\r\n            'color': this.DATA_EDGE_COLOR,\r\n            'curve-style': 'bezier',\r\n            'label': \"\"\r\n        })\r\n        .update();\r\n    }else if(typeGraphe==\"Undirected Weighted\"){\r\n      this.cy.style()\r\n            .selector('edge') // Apply the style to all edges\r\n            .style({\r\n                'width': 4,\r\n                'line-color': this.COLOR_LINE_EDGE,\r\n                'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n                'target-arrow-shape': 'triangle',\r\n                'color': this.DATA_EDGE_COLOR,\r\n                'curve-style': 'haystack',\r\n                'label': \"data(weight)\",\r\n                'text-margin-y': -12\r\n            })\r\n            .update();\r\n    }else if(typeGraphe==\"Undirected Unweighted\"){\r\n      this.cy.style()\r\n            .selector('edge') // Apply the style to all edges\r\n            .style({\r\n                'width': 4,\r\n                'line-color': this.COLOR_LINE_EDGE,\r\n                'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n                'target-arrow-shape': 'triangle',\r\n                'color': this.DATA_EDGE_COLOR,\r\n                'curve-style': 'haystack',\r\n                'label': \"\"\r\n            })\r\n            .update();\r\n    }\r\n  }\r\n  /**\r\n   * Create a graph from a list of edges.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   * @param {GrapheFromEdgesListComponent} container2 - Another container object.\r\n   */\r\n  createGrapheFromListEdges(container:any,container2:any):void{\r\n    const elements:any=container2.sendElements();\r\n    let err:boolean=false;\r\n    let cyElements:any=this.cy.elements();\r\n    let cyType:string=this.typeGraphe;\r\n    if(elements){\r\n      this.cy.elements().remove();\r\n      let typeGraphe:string=elements[0].type;\r\n      container.typeGraphe=this.typeGraphe=typeGraphe;\r\n      this.changeStyleGraphe(typeGraphe);\r\n      let i:number=0;\r\n      for(let element of elements){\r\n        const nodeExists = this.cy.getElementById(element.source).nonempty();\r\n        const nodeExists1 = this.cy.getElementById(element.target).nonempty();\r\n        if(element.source==\"\"){\r\n          container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n          err=true;\r\n          break;\r\n        }else if(!nodeExists){\r\n          const pos = this.POSITIONS[i++];\r\n          this.cy.add({ group: 'nodes', data: { id: element.source}, position: pos });\r\n        }\r\n        if(element.target==\"\"){\r\n          err=true;\r\n          container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n          break;\r\n        }else if(!nodeExists1){\r\n          const pos = this.POSITIONS[i++];\r\n          this.cy.add({ group: 'nodes', data: { id: element.target}, position: pos });\r\n        }\r\n      }\r\n      if(!err){\r\n        elements.forEach((element:any)=>{\r\n          if(typeGraphe.split(' ')[1]==\"Weighted\"){\r\n            if(element.source && element.target && element.weight){\r\n                this.cy.add({data:{\r\n                  source: element.source,\r\n                  target: element.target,\r\n                  weight: element.weight\r\n                }\r\n                }); \r\n            }\r\n          }else{\r\n            if(element.source && element.target){\r\n              this.cy.add({\r\n                data: {\r\n                source: element.source,\r\n                target: element.target,\r\n                }\r\n              }); \r\n            }\r\n          }\r\n        })\r\n      const screen=container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheFromEdgesList=container.el.nativeElement.querySelector('.addGrapheFromEdgesList');\r\n      screen.style.display=\"block\";\r\n      buttonManupilation.style.display=\"block\";\r\n      addGrapheFromEdgesList.style.display=\"none\";\r\n      container2.listEdgeTextArea=\"\";\r\n      container.message=this.translate.instant(\"grapheFromEdgeList.msg7\");////\r\n      container.restoreArray=[];\r\n      container.changeSelect=\"\";\r\n      }else{\r\n        container.typeGraphe=this.typeGraphe=cyType;\r\n        this.changeStyleGraphe(typeGraphe);\r\n        this.cy.elements().remove();\r\n        this.cy.add(cyElements);\r\n      }\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n    }\r\n  }\r\n  /**\r\n   * Reject the generation of a graph from a list of edges.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   * @param {GrapheFromEdgesListComponent} container2 - Another container object.\r\n   */\r\n  rejeterGenerateGraphFromListEdges(container:any,container2:any):void {\r\n    const screen=container.el.nativeElement.querySelector('.screen');\r\n    const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n    const addGrapheFromEdgesList=container.el.nativeElement.querySelector('.addGrapheFromEdgesList');\r\n    screen.style.display=\"block\";\r\n    buttonManupilation.style.display=\"block\";\r\n    addGrapheFromEdgesList.style.display=\"none\";\r\n    container2.listEdgeTextArea=\"\";\r\n    container.message=this.translate.instant(\"grapheFromEdgeList.msg6\");///////Change this message\r\n    container.changeSelect=\"\";\r\n  }\r\n  /**\r\n   * Get the density of the graph.\r\n   *\r\n   * @returns {number} - The density of the graph.\r\n   */\r\n  getDensityOfGraphe():number{\r\n    if(this.cy.nodes().length){\r\n      if(this.typeGraphe.split(' ')[0] == 'Directed'){\r\n        return this.cy.edges().length/(this.cy.nodes().length*(this.cy.nodes().length-1));\r\n      }else{\r\n        return (2*this.cy.edges().length)/(this.cy.nodes().length*(this.cy.nodes().length-1));\r\n      }\r\n    }else{\r\n      return 0;\r\n    }\r\n  }\r\n  /**\r\n   * Get an array of node IDs in the graph.\r\n   *\r\n   * @returns {Array} - An array of node IDs.\r\n   */\r\n  getNodeIds():Array{\r\n    const nodes:Array = [];\r\n    this.cy.nodes().forEach((node:any)=>{\r\n      nodes.push(node.data('id'));\r\n    })\r\n    return nodes;\r\n  }\r\n  /**\r\n   * Calculate the incidence matrix of the graph.\r\n   *\r\n   * @returns {Array} - The incidence matrix of the graph.\r\n   */\r\n  incidenceMatrix():Array {\r\n    const nodes = this.cy.nodes();\r\n    const edges = this.cy.edges();\r\n  \r\n    // Create an empty incidence matrix\r\n    const incidenceMatrix:Array = [];\r\n  \r\n    // Initialize an empty matrix with rows corresponding to nodes and columns to edges\r\n    for (let i = 0; i  {\r\n      const sourceNode = edge.source();\r\n      const targetNode = edge.target();\r\n  \r\n      // Find the indices of the source and target nodes in the nodes array\r\n      const sourceIndex = nodes.indexOf(sourceNode);\r\n      const targetIndex = nodes.indexOf(targetNode);\r\n  \r\n      // Set the corresponding cells in the matrix to 1 or -1 to indicate incidence\r\n      if(sourceIndex==targetIndex){\r\n        incidenceMatrix[sourceIndex][edgeIndex] = 2;\r\n      }else if(this.typeGraphe.split(' ')[0]==\"Directed\"){\r\n        incidenceMatrix[targetIndex][edgeIndex] = 1;\r\n        incidenceMatrix[sourceIndex][edgeIndex] = -1;\r\n      }else{\r\n        incidenceMatrix[sourceIndex][edgeIndex] = 1;\r\n        incidenceMatrix[targetIndex][edgeIndex] = 1;\r\n      }\r\n    });\r\n  \r\n    return incidenceMatrix;\r\n  }\r\n  /**\r\n   * Get an array of edge IDs in the graph.\r\n   *\r\n   * @returns {Array} - An array of edge IDs.\r\n   */\r\n  getEdgeIds():Array{\r\n    const edges:Array = [];\r\n    this.cy.edges().forEach((edge:any)=>{\r\n      let edgeText:string=\"\";\r\n      if(this.typeGraphe.split(' ')[0]==\"Directed\"){\r\n        edgeText=`${edge.source().id()} > ${edge.target().id()}`;\r\n      }else{\r\n        edgeText=`${edge.source().id()} - ${edge.target().id()}`;\r\n      }\r\n      edges.push(edgeText);\r\n    })\r\n    return edges;\r\n  }\r\n  /**\r\n   * Remove an edge from the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph.\r\n   * @param {RemoveEdgeComponent} container2 - Additional container.\r\n   */\r\n  removeEdge(container:any,container2:any):void{\r\n    let exist: boolean=false;\r\n    const edges = this.cy.edges();\r\n    let edgeI:any;\r\n    if(this.typeGraphe.split(' ')[0]==\"Undirected\"){\r\n      for(let edge of edges){\r\n        if((edge.source().id()==container2.sourceId && edge.target().id()==container2.targetId)||(edge.target().id()==container2.sourceId && edge.source().id()==container2.targetId)){\r\n          edgeI=edge;\r\n          exist=true;\r\n          break;\r\n        }\r\n      }\r\n    }else{\r\n      for(let edge of edges){\r\n        if(edge.source().id()==container2.sourceId && edge.target().id()==container2.targetId){\r\n          edgeI=edge;\r\n          exist=true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(exist){\r\n      this.cy.remove(edgeI);\r\n      let elem={status:\"remove\",element:edgeI};\r\n      container.restoreArray.push(elem);\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      formRemoveEdge.style.display=\"none\";\r\n      container.message=this.translate.instant(\"grapheS.msg48\",{source:container2.sourceId,target:container2.targetId});\r\n      container2.sourceId=\"\";\r\n      container2.targetId=\"\";\r\n      container.remove=\"\";\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg47\",{source:container2.sourceId,target:container2.targetId});\r\n    }\r\n  }\r\n  /**\r\n   * Reject the removal of an edge from the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph.\r\n   * @param {RemoveEdgeComponent} container2 - Additional container.\r\n   */\r\n  RejeterRemoveEdge(container:any,container2:any):void{\r\n    const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n    formRemoveEdge.style.display=\"none\";\r\n    container2.sourceId=\"\";\r\n    container2.targetId=\"\";\r\n    container.remove=\"\";\r\n    container.message=this.translate.instant(\"grapheS.msg46\");\r\n  }\r\n  /**\r\n   * Remove a node from the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph.\r\n   * @param {RemoveNodeComponent} container2 - Additional container.\r\n   */\r\n  removeNode(container:any,container2:any):void{\r\n    let node:any=this.cy.getElementById(container2.nodeId);\r\n    let exist:boolean=node.isNode();\r\n    if(exist){\r\n      node.remove();\r\n      let elem={status:\"remove\",element:node};\r\n      container.restoreArray.push(elem);\r\n      //\r\n      container.message=this.translate.instant(\"grapheS.msg52\",{nodeId:container2.nodeId});\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formRemoveEdge.style.display=\"none\";\r\n      formRemoveNode.style.display=\"none\";\r\n      container2.nodeId=\"\";\r\n      container.remove=\"\";\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg53\",{nodeId:container2.nodeId});\r\n    }\r\n  }\r\n  /**\r\n   * Reject the removal of a node from the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph.\r\n   * @param {RemoveNodeComponent} container2 - Additional container.\r\n   */\r\n  RejeterRemoveNode(container:any,container2:any):void{\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n    const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n    const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n    container.message=this.translate.instant(\"grapheS.msg51\");\r\n    formChangeNodeId.style.display=\"none\";\r\n    formAddEdge.style.display=\"none\";\r\n    formChangeColor.style.display=\"none\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    formAddNode.style.display=\"none\";\r\n    formRemoveEdge.style.display=\"none\";\r\n    formRemoveNode.style.display=\"none\";\r\n    container2.nodeId=\"\";\r\n    container.remove=\"\";\r\n  }\r\n  /**\r\n   * Get the adjacency list of the graph.\r\n   *\r\n   * @returns {Array} - The adjacency list of the graph.\r\n   */\r\n  getAdjancyList():Array{\r\n    const adjacencyList:Array = [];\r\n      this.cy.nodes().forEach((node:any) => {\r\n        const outgoingEdges = node.outgoers();\r\n        const incomersEdges = node.incomers();\r\n        let adjNode:Array=outgoingEdges.map((edge:any) => edge.target().id());\r\n        let elements:Array=incomersEdges.map((edge:any) => edge.source().id());\r\n        let adjanString:string=\"\";\r\n        adjNode = adjNode.filter(item => item !== undefined);\r\n        elements = elements.filter(item => item !== undefined);\r\n        for(let i:number=0;i `;\r\n            }else{\r\n              adjanString+=`${adjNode[i]}`\r\n            }\r\n          }else{\r\n            let edge:any;\r\n            for(let element of this.cy.edges()){\r\n              if(element.target().id()==adjNode[i] && element.source().id()==node.id()){\r\n                edge=element;\r\n                break;\r\n              }\r\n            }\r\n            if(i!=adjNode.length-1){\r\n              adjanString+=`${adjNode[i]} (${edge.data(\"weight\")}) ~> `;\r\n            }else{\r\n              adjanString+=`${adjNode[i]} (${edge.data(\"weight\")})`\r\n            }\r\n          }\r\n          \r\n        }\r\n        if(this.typeGraphe.split(\" \")[0]!=\"Directed\"){\r\n          for(let i:number=0;i ${elements[i]} ~> `;\r\n              }else if(i!=elements.length-1){\r\n                adjanString+=` ${elements[i]} ~> `;\r\n              }else{\r\n                adjanString+=`${elements[i]}`;\r\n              }\r\n            }else{\r\n              let edge:any;\r\n              for(let element of this.cy.edges()){\r\n                if(element.source().id()==adjNode[i] && element.target().id()==node.id()){\r\n                  edge=element;\r\n                  break;\r\n                }\r\n              }\r\n              if(i==0 && adjNode.length){\r\n                adjanString+=` ~> ${elements[i]} (${edge.data(\"weight\")}) ~> `;\r\n              }else if(i!=elements.length-1){\r\n                adjanString+=` ${elements[i]} (${edge.data(\"weight\")}) ~> `;\r\n              }else{\r\n                adjanString+=`${elements[i]} (${edge.data(\"weight\")})`;\r\n              }\r\n            }\r\n              \r\n          }\r\n        }\r\n        if(adjanString){\r\n          if(adjanString.slice(-3)==\"~> \"){\r\n            adjanString+=\" NULL\";\r\n          }else {\r\n            adjanString+=\" ~> NULL\";\r\n          }\r\n        }\r\n        const adjacencyListEntry = {\r\n          node: node.id(),\r\n          adjacentNodes: adjanString\r\n        };\r\n        adjacencyList.push(adjacencyListEntry);\r\n        });\r\n    return adjacencyList;\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaveUploadService.html":{"url":"injectables/SaveUploadService.html","title":"injectable - SaveUploadService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SaveUploadService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/save-upload.service.ts\n        \n\n            \n                Description\n            \n            \n                Service responsible for handling save and upload operations.It provides methods to save and upload data, and uses the TranslateService for localization.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(translate: TranslateService)\n                                \n                            \n            \n                            \n                                \n                                        Initializes a new instance of the SaveUploadService.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                translate\n                                                                    :     TranslateService\n            \n                                                            \n                                                            \n                                                                \n            The TranslateService for localization.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     saveJSON\n                                \n                            \n            \n                            \n                                \n            saveJSON(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Saves the current graph as a JSON file.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     saveJPG\n                                \n                            \n            \n                            \n                                \n            saveJPG(container: any, fullGraphe: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Saves the current graph as a JPG image.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                fullGraphe\n                                                            \n                                                            \n                                                                \n            Whether to export the full graph or just the current viewport view.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     savePNG\n                                \n                            \n            \n                            \n                                \n            savePNG(container: any, fullGraph: boolean)\n                                \n                            \n            \n                            \n                                \n                                        Saves the current graph as a PNG image.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                fullGraph\n                                                            \n                                                            \n                                                                \n            Whether to export the full graph or just the current viewport view.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     uploadJSON\n                                \n                            \n            \n                            \n                                \n            uploadJSON(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Uploads a JSON file and updates the graph with the uploaded data.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnSaveUploadChange\n                                \n                            \n            \n                            \n                                \n            OnSaveUploadChange(container: any)\n                                \n                            \n            \n                            \n                                \n                                        Handles the change in the save/upload option and performs the corresponding action.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                container\n                                                                    :     ScreenboxComponent\n            \n                                                            \n                                                            \n                                                                \n            The container object containing the Cytoscape instance and other data.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     doc\n                                \n                            \n                            \n                                \n                                    doc:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     lastElementHeight\n                                \n                            \n                            \n                                \n                                    lastElementHeight:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport jsPDF from 'jspdf';\r\n/**\r\n * Service responsible for handling save and upload operations.\r\n * It provides methods to save and upload data, and uses the TranslateService for localization.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaveUploadService {\r\n  /**\r\n   * Initializes a new instance of the SaveUploadService.\r\n   *\r\n   * @param {TranslateService} translate - The TranslateService for localization.\r\n   */\r\n  constructor(private translate: TranslateService) { }\r\n  doc:any;\r\n  lastElementHeight:number=0;\r\n  /**\r\n   * Saves the current graph as a JSON file.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   */\r\n  saveJSON(container:any) {\r\n    // Get the Cytoscape elements in JSON format\r\n    let elementsJson = container.grapheS.cy.json();\r\n    elementsJson.typeGraphe = container.typeGraphe;\r\n    // Create a Blob from the JSON data\r\n    const blob = new Blob([JSON.stringify(elementsJson)], { type: 'application/json' });\r\n    // Create a temporary URL for the Blob\r\n    const url = URL.createObjectURL(blob);\r\n    // Create an anchor element for the download\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'graphe.json';\r\n    // Trigger the download\r\n    a.click();\r\n    container.saveUpload=\"\";\r\n    // Clean up the temporary URL\r\n    URL.revokeObjectURL(url);\r\n  }\r\n  \r\n  /**\r\n   * Saves the current graph as a JPG image.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   * @param {boolean} [fullGraphe=true] - Whether to export the full graph or just the current viewport view.\r\n   */\r\n  saveJPG(container:any,fullGraphe:boolean=true):void{\r\n  // Get a reference to the Cytoscape instance\r\n  const cy = container.grapheS.cy;\r\n  // Export the current graph view as a JPG image\r\n  const jpgPromise = cy.jpg({\r\n      output: 'blob-promise', // Use 'blob-promise' to make it non-blocking\r\n      quality: 1, // Set the quality to 1 (highest quality)\r\n      bg: 'white', // Set the background color to white (optional)\r\n      full: fullGraphe, // Export the current viewport view (change to true for full graph)\r\n      scale: 1, // Set the scale (1 for original size)\r\n      maxWidth: 900, // Maximum width (optional)\r\n      maxHeight: 800, // Maximum height (optional)\r\n  });\r\n  jpgPromise.then((blob:any) => {\r\n      // Create an anchor element for the download\r\n      const a = document.createElement('a');\r\n      a.href = URL.createObjectURL(blob);\r\n      a.download = 'graph.jpg';\r\n      // Trigger the download\r\n      a.click();\r\n      container.saveUpload=\"\";\r\n  });\r\n  }\r\n  /**\r\n   * Saves the current graph as a PNG image.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   * @param {boolean} [fullGraph=true] - Whether to export the full graph or just the current viewport view.\r\n   */\r\n  savePNG(container:any,fullGraph:boolean=true):void{\r\n    // Get a reference to the Cytoscape instance\r\n    const cy = container.grapheS.cy;\r\n      \r\n    // Export the current graph view as a PNG image\r\n    const pngPromise = cy.png({\r\n        output: 'blob-promise', // Use 'blob-promise' to make it non-blocking\r\n        bg: 'white', // Set the background color to white (optional)\r\n        full: fullGraph, // Export the current viewport view (change to true for full graph)\r\n        scale: 1, // Set the scale (1 for original size)\r\n        maxWidth: 900, // Maximum width (optional)\r\n        maxHeight: 800, // Maximum height (optional)\r\n    });\r\n    \r\n    pngPromise.then((blob: any) => {\r\n        // Create an anchor element for the download\r\n        const a = document.createElement('a');\r\n        a.href = URL.createObjectURL(blob);\r\n        a.download = 'graph.png';\r\n        \r\n        // Trigger the download\r\n        a.click();\r\n        \r\n        // Optionally, you can perform additional actions after the download\r\n        container.saveUpload = \"\";\r\n    });\r\n  }\r\n  /**\r\n   * Uploads a JSON file and updates the graph with the uploaded data.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   */\r\n  uploadJSON(container:any) {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.onchange = (event) => {\r\n      const file = (event.target as HTMLInputElement).files?.[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          try {\r\n            const json = JSON.parse(e.target?.result as string);\r\n            let largestNodeId = 0;\r\n            json.elements.nodes.forEach((node: any) => {\r\n              const nodeId = parseInt(node.data.id);\r\n              if (nodeId > largestNodeId) {\r\n                largestNodeId = nodeId;\r\n              }\r\n            });\r\n            container.nodeId=largestNodeId;\r\n            // Check if the typeGraphe property exists\r\n            if (json.typeGraphe) {\r\n              // Clear existing elements\r\n              container.grapheS.cy.elements().remove();\r\n              // Add new elements from the uploaded JSON\r\n              container.typeGraphe=json.typeGraphe;\r\n              container.grapheS.changeTypeGraphe(container);\r\n              container.grapheS.cy.add(json.elements);\r\n              // Fit the graph to the viewport\r\n              container.saveUpload=\"\";\r\n              container.message=this.translate.instant(\"saveUploadS.msg1\");\r\n              container.grapheS.cy.fit();\r\n              container.grapheS.cy.reset()\r\n              container.restoreArray=[];\r\n\r\n            } else {\r\n              container.saveUpload=\"\";\r\n              container.message=this.translate.instant(\"saveUploadS.msg2\");\r\n            }\r\n          } catch (error) {\r\n            container.saveUpload=\"\";\r\n            container.message=this.translate.instant(\"saveUploadS.msg2\");\r\n          }\r\n        };\r\n        reader.readAsText(file);\r\n      }\r\n    };\r\n    input.click();\r\n  }\r\n  /**\r\n   * Handles the change in the save/upload option and performs the corresponding action.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing the Cytoscape instance and other data.\r\n   */\r\n  OnSaveUploadChange(container:any):void{\r\n      container.changeSelect=\"\";\r\n      container.remove=\"\";\r\n      container.buttonClicked=\"\";\r\n      container.containerHeight=50;\r\n      container.selectedNode=[];\r\n      if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n        container.algorithm=\"\";\r\n      }\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n      formRemoveNode.style.display=\"none\";\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formRemoveEdge.style.display=\"none\";\r\n      container.grapheS.position=\"\";\r\n      if(container.saveUpload==\"upload\"){\r\n        this.uploadJSON(container);\r\n      }else if(container.typeGraphe!=\"\" && container.grapheS.cy.nodes().length){\r\n        if(container.saveUpload==\"save\"){\r\n          this.saveJSON(container);\r\n        }else if(container.saveUpload==\"saveJPG\"){\r\n          this.saveJPG(container);\r\n        }else if(container.saveUpload==\"saveJPGScreen\"){\r\n          this.saveJPG(container,false);\r\n        }else if(container.saveUpload==\"savePNG\"){\r\n          this.savePNG(container);\r\n        }else if(container.saveUpload==\"savePNGScreen\"){\r\n          this.savePNG(container,false);\r\n        }\r\n      }else{\r\n          if(!container.grapheS.cy.nodes().length){\r\n            container.message=this.translate.instant(\"algoS.msg11\");\r\n          } else if(container.typeGraphe==\"\"){\r\n            container.message=this.translate.instant(\"screenbox.msg23\");\r\n          }\r\n          container.typeGraphe=\"\";\r\n      }\r\n  }\r\n  // infoDOc(docName:string,username:string,emailUser:string,urlSite:string):void{\r\n  //   // Add a title (LaTeX-like document name)\r\n  //   let yPosition:number = 300;\r\n  //   this.doc.setFontSize(24); // Set font size\r\n  //   this.doc.setFont(\"helvetica\"); // You can specify the font family here\r\n  //   let widthInPoints:number = this.doc.getStringUnitWidth(docName) * this.doc.getFontSize();\r\n  //   let docNameArray:string[] =[];\r\n  //   if(widthInPoints>595.276){\r\n  //     docNameArray=docName.split(\" \");\r\n  //     docName=\"\";\r\n  //     this.testAndAddDocName(docName,docNameArray,yPosition);\r\n  //     this.incrementLastElementHeight(yPosition+this.doc.getFontSize());\r\n  //     yPosition+=30;\r\n  //   }else{\r\n  //     this.doc.text(docName, (595.276-widthInPoints)/2, yPosition); // Replace 'Document Title' with your desired title\r\n  //     this.incrementLastElementHeight(yPosition+this.doc.getFontSize());\r\n  //     yPosition+=30;\r\n  //   }\r\n  //   while(docNameArray.length){\r\n  //     widthInPoints = this.doc.getStringUnitWidth(docName) * this.doc.getFontSize();\r\n  //     this.testAndAddDocName(docName,docNameArray,yPosition);\r\n  //     yPosition+=30;\r\n  //   }\r\n  //   // Add user data\r\n  //   const userData = {\r\n  //     userName: username, // Replace with the user's name\r\n  //     userEmail: emailUser, // Replace with the user's email\r\n  //     dateTime: this.getDataTime(),\r\n  //     urlSite: urlSite, // Replace with the user's address\r\n  //   };\r\n\r\n  //   this.doc.setFontSize(12); // Set font size for user data\r\n\r\n  //   // Loop through user data and add it to the PDF\r\n  //   for (const [key, value] of Object.entries(userData)) {\r\n  //     if(value){\r\n  //       if(key==\"urlSite\"){\r\n  //         widthInPoints = this.doc.getStringUnitWidth(`generated by : ${value}`) * this.doc.getFontSize();\r\n  //         this.doc.text(`generated by : ${value}`, (595.276-widthInPoints)/2, yPosition);\r\n  //       }else if(key==\"userName\"){\r\n  //         widthInPoints = this.doc.getStringUnitWidth(value) * this.doc.getFontSize();\r\n  //         this.doc.text(`${value}`, (595.276-widthInPoints)/2, yPosition);\r\n  //       }else{\r\n  //         widthInPoints = this.doc.getStringUnitWidth(value) * this.doc.getFontSize();\r\n  //         this.doc.text(`${value}`, (595.276-widthInPoints)/2, yPosition);\r\n  //       }\r\n  //       this.incrementLastElementHeight(yPosition+this.doc.getFontSize());\r\n  //       yPosition += 25; // Increase the vertical position for the next line\r\n  //     }\r\n  //   }\r\n  //   this.doc.addPage();\r\n  // }\r\n  // getDataTime(): string {\r\n  //   let currentDate = new Date();\r\n\r\n  //   // Define the months in an array\r\n  //   let months = [\r\n  //     \"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n  //     \"May\", \"Jun\", \"Jul\", \"Aug\",\r\n  //     \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n  //   ];\r\n\r\n  //   // Get the individual components of the date and time\r\n  //   let day:number = currentDate.getDate();\r\n  //   let month:string = months[currentDate.getMonth()];\r\n  //   let year = currentDate.getFullYear();\r\n  //   let hours:number = currentDate.getHours();\r\n  //   let minutes:number|string = currentDate.getMinutes();\r\n  //   let seconds:number|string = currentDate.getSeconds();\r\n\r\n  //   // Add leading zeros to minutes and seconds if they are single digits\r\n  //   if (minutes 505.276){\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  //   let widthInPoints:number = this.doc.getStringUnitWidth(docName) * this.doc.getFontSize();\r\n  //   this.doc.text(docName, (595.276-widthInPoints)/2, yPosition); // Replace 'Document Title' with your desired title\r\n  // }\r\n  // incrementLastElementHeight(increment:number):void{\r\n  //   this.lastElementHeight+=increment;\r\n  // }\r\n  // isTheLastOfPageAddNewPage():void{\r\n  //   if(this.lastElementHeight>750){\r\n  //     this.doc.addPage();\r\n  //     this.lastElementHeight=50;\r\n  //   }\r\n  // }\r\n  // infoGrapheDoc(container:any,lastheight:number):void{\r\n  //   this.doc.setFontSize(22); // Set font size\r\n  //   let text:string=\"Graph Information : \"\r\n  //   let arrayString:string[] = [];\r\n  //   let widthInPoints:number = this.doc.getStringUnitWidth(text) * this.doc.getFontSize();\r\n  //   this.doc.setTextColor(255, 0, 0);//red\r\n  //   lastheight+=10;\r\n  //   this.doc.text(text,  (595.276-widthInPoints)/2, lastheight); // Replace 'Document Title' with your desired title\r\n  //   this.doc.setTextColor(0, 0, 0);//black\r\n  //   this.doc.setFontSize(14); // Set font size\r\n  //   text=`List of nodes : `;\r\n  //   lastheight+=30;\r\n  //   this.doc.text(text, 20, lastheight); // Replace 'Document Title' with your desired title\r\n  //   text=container.grapheS.getListOfNode();\r\n  //   widthInPoints = this.doc.getStringUnitWidth(text) * this.doc.getFontSize();\r\n  //   if(widthInPoints>575.276){\r\n  //     arrayString=text.split(\"---\");\r\n  //     text=\"\";\r\n  //     lastheight+=30;\r\n  //     for(let i:number=0 ;i505.276){\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     this.doc.text(text, 30, lastheight); \r\n  //     // this.lastElementHeight+=10;\r\n  //   }else{\r\n  //     lastheight+=30;\r\n  //     this.doc.text(text, 30, lastheight); // Replace 'Document Title' with your desired title\r\n  //     // yPosition+=30;\r\n  //   }\r\n  //   while(arrayString.length){\r\n  //     text=\"\";\r\n  //     lastheight+=30;\r\n  //     for(let i:number=0 ;i505.276){\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     this.doc.text(text, 30, lastheight); \r\n  //   }\r\n    \r\n  // }\r\n  // generatePDF(container:any,docName:string,username:string,emailUser:string,urlSite:string):void{\r\n  //   this.infoDOc(docName,username,emailUser,urlSite);\r\n  //   this.infoGrapheDoc(container,50);\r\n  //   this.doc.save('sample.pdf');\r\n  // }\r\n}\r\n\r\n\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPosition.html":{"url":"interfaces/IPosition.html","title":"interface - IPosition","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IPosition\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/graphe.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as cytoscape from 'cytoscape';\r\ninterface IPosition{\r\n  x:number;\r\n  y:number;\r\n}\r\n/**\r\n * Service for managing and interacting with the Cytoscape graph.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GrapheService {\r\n  /** The Cytoscape instance used to manage and render the graph. */\r\n  public cy: any;\r\n\r\n  /** The type of the graph (e.g., Directed, Undirected, Weighted). */\r\n  public typeGraphe: string = \"\";\r\n\r\n  /** Array of lowercase alphabet characters. */\r\n  alphabets0: string[] = Array.from({ length: 26 }, (_, i) =>\r\n    String.fromCharCode(65 + i)\r\n  );\r\n\r\n  /** Array of lowercase alphabet characters followed by '1'. */\r\n  alphabets: string[] = this.alphabets0.concat(\r\n    this.alphabets0.map(letter => letter + '1')\r\n  );\r\n\r\n  /** Array of lowercase alphabet characters followed by '2'. */\r\n  Alphabets: string[] = this.alphabets.concat(\r\n    this.alphabets0.map(letter => letter + '2')\r\n  );\r\n\r\n  /** A counter variable for tracking. */\r\n  counter: number = 0;\r\n  numbersArray:number[] = Array.from(Array(200), (_, i) => i + 1);\r\n  /** The position of something (needs a description). */\r\n  position: any;\r\n  POSITIONS:IPosition[] = \r\n  [\r\n    {x: 241, y: 46},{x: 493, y: 47},{x: 261, y: 174},{x: 541, y: 174},\r\n    {x: 719, y: 41},{x: 736, y: 165},{x: 295, y: 314},{x: 530, y: 301},\r\n    {x: 772, y: 299},{x: 845, y: 43},{x: 885, y: 178},{x: 875, y: 276},\r\n    {x: 82, y: 5},{x: 106, y: 144},{x: 121.28128725008331, y: 263.51311061937736},\r\n    {x: 382, y: 87},{x: 617, y: 105},{x: 592, y: 217},{x: 323, y: 264},{x: 835, y: 319},\r\n    {x: 82, y: 24},{x: 98, y: 274},{x: 88, y: 173},{x: 380, y: 23},{x: 739, y: 73},\r\n    {x: 702, y: 211},{x: 577, y: 287},{x: 351, y: 323},{x: 350, y: 200},{x: 533, y: 108},\r\n    {x: 1221, y: 49},{x: 970, y: 133},{x: 1227, y: 227},{x: 1154, y: 353},{x: 919, y: 378},\r\n    {x: 887, y: 239},{x: 958, y: 48}\r\n  ];\r\n\r\n\r\n\r\n  /** The color of nodes. */\r\n  COLOR_NODE: any = \"white\";\r\n\r\n  /** The background color of nodes. */\r\n  BACKGROUND_COLOR_NODE: any = \"black\";\r\n\r\n  /** The color of edges. */\r\n  COLOR_LINE_EDGE: any = \"black\";\r\n\r\n  /** The color of the target arrow on edges. */\r\n  TARGET_ARROW_COLOR: any = \"blue\";\r\n\r\n  /** The color of data associated with edges. */\r\n  DATA_EDGE_COLOR: any = \"red\";\r\n\r\n  //----------------------------------------------------------------\r\n  // Private Constants for Algorithm Colors\r\n  //----------------------------------------------------------------\r\n\r\n  /** The color of the target arrow in algorithm animations. */\r\n  private TARGET_ARROW_COLOR_ALGO: any = \"black\";\r\n\r\n  /** The color of edges in algorithm animations. */\r\n  private COLOR_LINE_EDGE_ALGO: any = \"yellow\";\r\n\r\n  /** The color of nodes in algorithm animations. */\r\n  private COLOR_NODE_ALGO: any = \"black\";\r\n\r\n  /** The background color of nodes in algorithm animations. */\r\n  private BACKGROUND_COLOR_NODE_ALGO: any = \"yellow\";\r\n\r\n  /** The color of data associated with edges in algorithm animations. */\r\n  private DATA_EDGE_COLOR_ALGO: any = \"blue\";\r\n\r\n  //----------------------------------------------------------------\r\n\r\n  /**\r\n   * Constructor for the GrapheService.\r\n   *\r\n   * @param {TranslateService} translate - The translation service for internationalization.\r\n   */\r\n  constructor(private translate: TranslateService) {\r\n    // Constructor logic here\r\n  }\r\n\r\n  /**\r\n   * Changes the node enumeration.\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  changeNodeEnum(container:any):void{\r\n    if(this.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.selectedNode=[];\r\n      if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n        container.algorithm=\"\";\r\n      }\r\n      \r\n      container.saveUpload = \"\";\r\n      container.remove=\"\";\r\n      container.containerHeight=50;\r\n      this.resetColors();\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n      formAddNode.style.display=\"none\";\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      container.changeSelect=\"\";\r\n      this.position=null;\r\n      //\r\n    }else{\r\n      container.message=this.translate.instant(\"screenbox.msg23\");\r\n      container.nodeName=\"numerique\";\r\n    }\r\n    \r\n  }\r\n  /**\r\n  * Changes a setting or performs an action based on the selected option(chnage colors & sizes).\r\n  *\r\n  * @param {ScreenboxComponent} container - The container object.\r\n  */\r\n  changeChanges(container:any){\r\n    //DRY\r\n    container.selectedNode=[];\r\n    if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n      container.algorithm=\"\";\r\n    }\r\n    container.saveUpload = \"\";\r\n    container.remove=\"\";\r\n    container.containerHeight=50;\r\n    container.buttonClicked=\"\";\r\n    container.restoreArray=[];\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n    const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n    const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n    formRemoveNode.style.display=\"none\";\r\n    formChangeNodeId.style.display=\"none\";\r\n    formAddEdge.style.display=\"none\";\r\n    formChangeColor.style.display=\"none\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    formAddNode.style.display=\"none\";\r\n    formRemoveEdge.style.display=\"none\";\r\n    this.position=\"\";\r\n    this.resetColors();\r\n    //\r\n    if(container.changeSelect==\"changeColorNodes\" || container.changeSelect==\"changeColorEdges\" || container.changeSelect==\"changeColorNodesAlgo\" || container.changeSelect==\"changeColorEdgesAlgo\" || container.changeSelect==\"changeColorScreen\"){\r\n      if(container.changeSelect==\"changeColorNodes\"){\r\n        container.message=this.translate.instant(\"grapheS.msg26\")\r\n      }else if(container.changeSelect==\"changeColorEdges\") {\r\n        container.message=this.translate.instant(\"grapheS.msg27\")\r\n      }if(container.changeSelect==\"changeColorNodesAlgo\"){\r\n        container.message=this.translate.instant(\"grapheS.msg34\")\r\n      }else if(container.changeSelect==\"changeColorEdgesAlgo\") {\r\n        container.message=this.translate.instant(\"grapheS.msg35\")\r\n      }else if(container.changeSelect==\"changeColorScreen\") {\r\n        container.message=this.translate.instant(\"grapheS.msg36\")\r\n      }\r\n      formChangeColor.style.display=\"block\";\r\n    }else if(container.changeSelect==\"addGrapheFromMatrix\"){\r\n      const screen=container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheWithMatrix=container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n      const addGrapheFromEdgesList=container.el.nativeElement.querySelector('.addGrapheFromEdgesList');\r\n      screen.style.display=\"none\";\r\n      addGrapheFromEdgesList.style.display=\"none\";\r\n      buttonManupilation.style.display=\"none\";\r\n      addGrapheWithMatrix.style.display=\"block\";\r\n      container.message=this.translate.instant(\"grapheFromMatrix.msg6\");\r\n    }else if(container.changeSelect==\"addGrapheFromEdgesList\"){\r\n      const screen=container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheWithMatrix=container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n      const addGrapheFromEdgesList=container.el.nativeElement.querySelector('.addGrapheFromEdgesList');\r\n      screen.style.display=\"none\";\r\n      addGrapheFromEdgesList.style.display=\"block\";\r\n      buttonManupilation.style.display=\"none\";\r\n      addGrapheWithMatrix.style.display=\"none\";\r\n      container.message=this.translate.instant(\"grapheFromMatrix.msg6\");///////////////////////Chnge this Message\r\n    }else if(container.changeSelect==\"changeSizeScreen\"){\r\n      container.message=this.translate.instant(\"grapheS.msg39\")\r\n      formAChangeSizeScreen.style.display=\"block\";\r\n    }else if(container.changeSelect==\"changeIdNode\"){\r\n      if(this.typeGraphe && this.cy.nodes().length){\r\n        container.message=this.translate.instant(\"grapheS.msg24\")\r\n      }else{\r\n        if(this.typeGraphe==\"\"){\r\n          container.message=this.translate.instant(\"screenbox.msg23\");\r\n        }else if(this.cy.nodes().length==0){\r\n          container.message=this.translate.instant(\"grapheS.msg41\");\r\n        }\r\n        container.changeSelect=\"\";\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Changes the type of graph (e.g., Directed, Undirected, Weighted).\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  changeTypeGraphe(container:any):void{\r\n    //DRY\r\n    container.selectedNode=[];\r\n    container.buttonClicked=\"\";\r\n    if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n      container.algorithm=\"\";\r\n    }\r\n    container.saveUpload = \"\";\r\n    container.remove=\"\";\r\n    container.changeSelect=\"\";\r\n    this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n    this.counter=0;\r\n    //\r\n    \r\n    this.typeGraphe=container.typeGraphe;\r\n    this.resetColors();\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n    const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n    const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n    formRemoveNode.style.display=\"none\";\r\n    formChangeNodeId.style.display=\"none\";\r\n    formAddEdge.style.display=\"none\";\r\n    formChangeColor.style.display=\"none\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    formAddNode.style.display=\"none\";\r\n    formRemoveEdge.style.display=\"none\";\r\n    this.position=\"\";\r\n    container.containerHeight=50;\r\n    this.cy.remove(this.cy.elements());\r\n    container.message=this.translate.instant(\"grapheS.msg1\");\r\n      if (this.typeGraphe === \"Directed Weighted\") {\r\n          this.changeStyleGraphe(this.typeGraphe);\r\n          container.message+=this.translate.instant(\"grapheS.msg18\")+\" \"+this.translate.instant(\"grapheS.msg20\");\r\n\r\n      }else if (this.typeGraphe === \"Directed Unweighted\") {\r\n          this.changeStyleGraphe(this.typeGraphe);\r\n          container.message+=this.translate.instant(\"grapheS.msg18\")+\" \"+this.translate.instant(\"grapheS.msg21\");\r\n      } else if (this.typeGraphe === \"Undirected Weighted\") {\r\n          this.changeStyleGraphe(this.typeGraphe);\r\n          container.message+=this.translate.instant(\"grapheS.msg19\")+\" \"+this.translate.instant(\"grapheS.msg20\");;\r\n      } else if (this.typeGraphe === \"Undirected Unweighted\") {\r\n        this.changeStyleGraphe(this.typeGraphe);\r\n        container.message+=this.translate.instant(\"grapheS.msg19\")+\" \"+this.translate.instant(\"grapheS.msg21\");;\r\n      }\r\n  }\r\n  /**\r\n * Handles button clicks and performs actions based on the selected option.\r\n *\r\n * @param {ScreenboxComponent} container - The container object.\r\n */\r\n  onChangeButtonClicked(container:any):void{\r\n    if(this.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.changeSelect=\"\";\r\n      container.selectedNode=[];\r\n      if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n        container.algorithm=\"\";\r\n      }\r\n      container.saveUpload = \"\";\r\n      container.remove=\"\";\r\n      container.containerHeight=50;\r\n      //\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n      formRemoveNode.style.display=\"none\";\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formRemoveEdge.style.display=\"none\";\r\n      this.position=\"\";\r\n      if(container.buttonClicked==\"default\"){\r\n        container.message=this.translate.instant(\"grapheS.msg2\");\r\n        this.cy.fit();\r\n      }else if(container.buttonClicked==\"addVertices\"){\r\n        container.message=this.translate.instant(\"grapheS.msg3\");\r\n      }else if(container.buttonClicked==\"addEdges\"){\r\n        if(this.cy.nodes().length){\r\n          container.message=this.translate.instant(\"grapheS.msg4\");\r\n        }else{\r\n          container.message=this.translate.instant(\"grapheS.msg41\");\r\n          container.buttonClicked=\"\";\r\n        }\r\n      }else if(container.buttonClicked==\"restore\"){\r\n        if(!container.restoreArray.length){\r\n          container.message=this.translate.instant(\"grapheS.msg60\")\r\n        }else{\r\n          this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n          this.counter=0;\r\n          this.restoreGraphe(container);\r\n        }        \r\n      }\r\n    }else{\r\n      container.message=this.translate.instant(\"screenbox.msg23\");\r\n      container.buttonClicked=\"\";\r\n    }\r\n  }\r\n  /**\r\n   * Changes the size of the screen.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeSizeScreenComponent} container2 - Another container object.\r\n   */\r\n  changeSizeScreen(container:any,container2:any):void{\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    if(container2.height){\r\n      screen.style.height =container2.height+'px';\r\n      localStorage.setItem('screenHeight', screen.style.height.toString());\r\n      container.message=this.translate.instant(\"grapheS.msg37\",{height:container2.height});\r\n    }else{\r\n      container2.height=screen.style.height =400+'px';//default value\r\n      localStorage.setItem('screenHeight', screen.style.height.toString());\r\n      container.message=this.translate.instant(\"grapheS.msg38\");\r\n    }\r\n    container.changeSelect=\"\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Rejects the changes made to the screen size and restores the previous size.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeSizeScreenComponent} container2 - Another container object.\r\n   */\r\n  RejeterChangeSizeScreen(container:any,container2:any):void{\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    container2.height=screen.style.height.slice(0,-2)||400;\r\n    container.changeSelect=\"\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    container.message=this.translate.instant(\"grapheS.msg40\")\r\n  }\r\n  /**\r\n   * Adds a weighted edge between selected nodes.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddWeightedEdgeComponent} container2 - Another container object.\r\n   */\r\n  addWeightedEdge(container:any,container2:any):void{\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    if(container.weight!=0){\r\n      this.isEdgeRemove(container.selectedNode[0],container.selectedNode[1],container);\r\n      let data={\r\n        source:container.selectedNode[0],\r\n        target:container.selectedNode[1],\r\n        weight:container.weight\r\n      }\r\n      let edge=this.cy.add({\r\n        data\r\n      });\r\n      //NEW CODE\r\n      let elem={status:\"add\",element:edge};\r\n      container.restoreArray.push(elem);\r\n      //\r\n      formAddEdge.style.display='none';\r\n      container.message=this.translate.instant(\"grapheS.msg7\",{selectedNode1:container.selectedNode[0],selectedNode2:container.selectedNode[1],weight:container.weight});\r\n      container.weight=null;\r\n      container2.weightForm=null;\r\n      container.selectedNode=[];\r\n      this.resetColors();\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg8\")\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the addition of a weighted edge and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddWeightedEdgeComponent} container2 - Another container object.\r\n   */\r\n  RejeterAddEdgeWeighted(container:any,container2:any):void{\r\n    container.selectedNode=[];\r\n    container.weight=null;\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    formAddEdge.style.display='none';\r\n    this.resetColors();\r\n    container.message=this.translate.instant(\"grapheS.msg9\");\r\n    container2.weightForm=null;\r\n  }\r\n  /**\r\n   * Changes the ID of a node in the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeIdNodeComponent} container2 - Another container object.\r\n   */\r\n  changeNodeId(container:any,container2:any):void{\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    let idExists=false;\r\n    this.cy.nodes().forEach((node:any)=>{\r\n      if(node.data('id')==container2.newNodeId){\r\n        container.message=this.translate.instant(\"grapheS.msg23\");\r\n        idExists=true;\r\n      }\r\n    })\r\n\r\n    if(idExists==false){\r\n      let node = this.cy.getElementById(container.selectedNode[0]);\r\n      let elem:any;\r\n      let nodeNew=this.cy.add({ group: 'nodes', data: { id: container2.newNodeId}, position: { x: node.position('x'),y: node.position('y'),}});\r\n      \r\n      this.cy.edges().forEach((edge:any)=>{\r\n        if(this.typeGraphe.split(\" \")[1]==\"Unweighted\"){\r\n            if (edge.source().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n              this.cy.add({\r\n                  group: 'edges',\r\n                  data: {\r\n                      source: nodeNew.id(),\r\n                      target: edge.target().id(),\r\n                  }\r\n              });\r\n            } else if (edge.target().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n                this.cy.add({\r\n                    group: 'edges',\r\n                    data: {\r\n                        source: edge.source().id(),\r\n                        target: nodeNew.id(),\r\n                    }\r\n                });\r\n            }\r\n        }else if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n            if (edge.source().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n              this.cy.add({\r\n                  group: 'edges',\r\n                  data: {\r\n                      source: nodeNew.id(),\r\n                      target: edge.target().id(),\r\n                      weight: edge.data('weight') \r\n                  }\r\n              });\r\n            } else if (edge.target().id() === node.id()) {\r\n              elem={status:\"remove\",element:edge};\r\n              container.restoreArray.push(elem);\r\n                this.cy.add({\r\n                    group: 'edges',\r\n                    data: {\r\n                        source: edge.source().id(),\r\n                        target: nodeNew.id(),\r\n                        weight: edge.data('weight') \r\n                    }\r\n                });\r\n            }\r\n        }\r\n      })\r\n      //Restore\r\n      elem={status:\"remove\",element:node};\r\n      container.restoreArray.push(elem);\r\n      this.cy.remove(node);\r\n      elem={status:\"add\",element:nodeNew};\r\n      container.restoreArray.push(elem);\r\n      //Log message \r\n      container.message=this.translate.instant(\"grapheS.msg25\",{last:container.selectedNode[0],new:container2.newNodeId});\r\n      //Initialiation\r\n      container.nodeIdChanged=container2.newNodeId;\r\n      formChangeNodeId.style.display = 'none';\r\n      container.selectedNode=[];\r\n      container2.newNodeId=null;\r\n      this.resetColors();\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the node ID change and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeIdNodeComponent} container2 - Another container object.\r\n   */\r\n  RejeterChangeNodeId(container:any,container2:any):void{\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    formChangeNodeId.style.display = 'none';\r\n    container.selectedNode=[];\r\n    container2.newNodeId=null;\r\n    this.resetColors();\r\n    container.message=this.translate.instant(\"grapheS.msg22\");\r\n  }\r\n  /**\r\n   * Changes the colors of nodes, edges, or the screen based on user selection.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {ChangeColorComponent} container2 - Another container object.\r\n   */\r\n  changeColor(container:any,container2:any){\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const screen=container.el.nativeElement.querySelector('.scr');\r\n    if(container.changeSelect==\"changeColorNodes\"){\r\n      this.COLOR_NODE=container2.color;\r\n      this.BACKGROUND_COLOR_NODE=container2.bgColor;\r\n      this.cy.style()\r\n          .selector('node') \r\n          .style({\r\n            'background-color': this.BACKGROUND_COLOR_NODE,\r\n            'color': this.COLOR_NODE\r\n          })\r\n          .update();\r\n      this.changeColorNodes();\r\n      container.message=this.translate.instant(\"grapheS.msg30\")\r\n    }else if(container.changeSelect==\"changeColorEdges\"){\r\n      this.COLOR_LINE_EDGE=container2.bgColor;\r\n      this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'line-color': this.COLOR_LINE_EDGE,\r\n          })\r\n          .update();\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        this.DATA_EDGE_COLOR=container2.color;\r\n        this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'color': this.DATA_EDGE_COLOR\r\n          })\r\n          .update();\r\n      }\r\n      \r\n      if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n        this.TARGET_ARROW_COLOR=container2.fColor;\r\n        this.cy.style()\r\n          .selector('edge') // Apply the style to all edges\r\n          .style({\r\n              'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n          })\r\n          .update();\r\n      }\r\n      this.changeColorEdges();\r\n      container.message=this.translate.instant(\"grapheS.msg31\")\r\n    }else if(container.changeSelect==\"changeColorNodesAlgo\"){\r\n      this.COLOR_NODE_ALGO=container2.color;\r\n      this.BACKGROUND_COLOR_NODE_ALGO=container2.bgColor;\r\n      container.message=this.translate.instant(\"grapheS.msg32\")\r\n    }else if(container.changeSelect==\"changeColorEdgesAlgo\"){\r\n      this.COLOR_LINE_EDGE_ALGO=container2.bgColor;\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        this.DATA_EDGE_COLOR_ALGO=container2.color;\r\n      }\r\n      \r\n      if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n        this.TARGET_ARROW_COLOR_ALGO=container2.fColor;\r\n      }\r\n      container.message=this.translate.instant(\"grapheS.msg33\")\r\n    }else if(container.changeSelect==\"changeColorScreen\"){\r\n      screen.style.backgroundColor=container2.bgColor;\r\n      localStorage.setItem(\"ScreenColor\",screen.style.backgroundColor.toString());\r\n    }\r\n    container.changeSelect=\"\";\r\n    formChangeColor.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Rejects the color changes and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  RejeterChangeColor(container:any):void {\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    if(container.changeSelect==\"changeColorNodes\"){\r\n      container.message=this.translate.instant(\"grapheS.msg28\")\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg29\")\r\n    }\r\n    container.changeSelect=\"\";\r\n    formChangeColor.style.display=\"none\";\r\n  }\r\n  /**\r\n   * Adds a new node to the graph if it doesn't already exist.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddNodeComponent} container2 - Another container object containing the new node ID.\r\n   */\r\n  addNode(container:any,container2:any):void{\r\n    const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n    let exist:boolean=false;\r\n    if(container2.nodeId){\r\n      this.cy.nodes().forEach((node:any)=>{\r\n        if(node.data('id')==container2.nodeId){\r\n          container.message=this.translate.instant('grapheS.msg23');\r\n          exist=true;\r\n        }\r\n      })\r\n      if(!exist){\r\n        let node=this.cy.add({ group: 'nodes', data: { id: container2.nodeId}, position: this.position });\r\n        let elem={status:\"add\",element:node};\r\n        container.restoreArray.push(elem);\r\n        container.message=this.translate.instant(\"grapheS.msg10\",{nodeId:node.data('id')});\r\n        formAddNode.style.display=\"none\";\r\n        this.position=\"\";\r\n        container2.nodeId=null;\r\n      }\r\n    }else{\r\n      container.message=this.translate.instant('screenbox.msg41');\r\n    }\r\n  }\r\n  /**\r\n   * Rejects the addition of a new node and resets the form.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   * @param {AddNodeComponent} container2 - Another container object containing the new node ID.\r\n   */\r\n  RejeterAddNode(container:any,container2:any):void{\r\n    const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n    formAddNode.style.display=\"none\";\r\n    this.position=\"\";\r\n    container2.nodeId=null;\r\n  }\r\n  /**\r\n   * Listens for a tap event on the screen background and adds a new node when conditions are met.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnScreenTap(container:any):void{\r\n    this.cy.on('tap', (evt:any)=> {\r\n      if (evt.target === this.cy && container.buttonClicked===\"addVertices\" && this.typeGraphe!=\"\") {\r\n          //Use all possile name of node , case of node deleted id\r\n          this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n          this.counter=0;\r\n          //\r\n          let pos = evt.position || evt.cyPosition;\r\n          let node:any;\r\n          const formAddNode=container.el.nativeElement.querySelector('.formAddNode');\r\n          if(container.nodeName==\"numerique\"){\r\n            formAddNode.style.display=\"none\";\r\n            this.cy.nodes().forEach((node:any)=>{\r\n              if(node.data('id')==this.counter+1){\r\n                ++this.counter;\r\n              }\r\n            })\r\n            node=this.cy.add({ group: 'nodes', data: { id: ++this.counter}, position: pos });\r\n          }else if(container.nodeName==\"alphabic\"){\r\n            formAddNode.style.display=\"none\";\r\n            this.cy.nodes().forEach((node:any)=>{\r\n              if(node.data('id')==this.Alphabets[0]){\r\n                this.Alphabets.shift();\r\n              }\r\n            })\r\n            node=this.cy.add({ group: 'nodes', data: { id: this.Alphabets.shift()}, position: pos });\r\n          }else if(container.nodeName==\"customText\"){\r\n            formAddNode.style.display=\"block\";\r\n            this.position=pos;\r\n          }\r\n          if(container.nodeName!=\"customText\"){\r\n            let elem={status:\"add\",element:node};\r\n            container.restoreArray.push(elem);\r\n            container.message=this.translate.instant(\"grapheS.msg10\",{nodeId:node.data('id')});\r\n          }\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Listens for a tap event on edges and removes edges when the 'remove edges' or 'remove all' action is selected.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnEdgeTap(container:any):void{\r\n    this.cy.on('tap', 'edge',  (evt:any)=> {\r\n      var edge = evt.target;\r\n      if(container.remove==\"remove edges\" || container.remove==\"remove all\"){\r\n        this.resetColors();\r\n        container.message=this.translate.instant(\"grapheS.msg11\",{sourceId:edge.source().id(),targetId:edge.target().id()});\r\n        edge.remove();\r\n         //NEW CODE\r\n         let elem={status:\"remove\",element:edge};\r\n         container.restoreArray.push(elem);\r\n         //\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Listens for a tap event on nodes and handles various actions based on the container state.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object.\r\n   */\r\n  OnNodeTap(container:any):void{\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    this.cy.on('tap', 'node',  (evt:any)=> {\r\n      var node = evt.target;\r\n      if(container.remove==\"remove nodes\" || container.remove==\"remove all\"){\r\n        this.resetColors();\r\n        node.remove();\r\n        //NEW CODE\r\n        let elem={status:\"remove\",element:node};\r\n        container.restoreArray.push(elem);\r\n        //\r\n        container.message=this.translate.instant(\"grapheS.msg12\",{nodeId:node.data('id')});\r\n      }else if(container.changeSelect===\"changeIdNode\"){\r\n        if(container.selectedNode.length!=0){\r\n          container.selectedNode=[];\r\n        }\r\n        this.changeColorNode(node, this.BACKGROUND_COLOR_NODE_ALGO,this.COLOR_NODE_ALGO);\r\n        container.selectedNode.push(node.data('id'));\r\n        formChangeNodeId.style.display = 'block';\r\n      }else if(container.buttonClicked===\"addEdges\"){\r\n          this.resetColors();\r\n          if(container.selectedNode.length {\r\n      this.cy.nodes().style('background-color', this.BACKGROUND_COLOR_NODE);\r\n      this.cy.nodes().style('color', this.COLOR_NODE);\r\n      this.cy.edges().style('line-color', this.COLOR_LINE_EDGE);\r\n      this.cy.edges().style('color', this.DATA_EDGE_COLOR);\r\n      this.cy.edges().style('target-arrow-color', this.TARGET_ARROW_COLOR);\r\n    },10)\r\n  }\r\n  /**\r\n   * Changes the background color and text color of a given node.\r\n   *\r\n   * @param {any} node - The node to change the colors of.\r\n   * @param {string} bgcolor - The new background color.\r\n   * @param {string} color - The new text color.\r\n   * @param {number} time - Optional. Time delay before applying the color change.\r\n   */\r\n  changeColorNode(node:any,bgcolor:string,color:string,time:number=10): void {\r\n    setTimeout(() => {\r\n      node.style('background-color',bgcolor);\r\n      node.style('color',color);\r\n    },time);\r\n  }\r\n  /**\r\n   * Changes the visual styles of a given edge, including line color, data color, and target arrow color.\r\n   *\r\n   * @param {any} edge - The edge to change the visual styles of.\r\n   * @param {string} color - The new data color (used for weighted graphs).\r\n   * @param {string} lineEdgeColor - The new line color.\r\n   * @param {string} targetArrowColor - The new target arrow color (used for directed graphs).\r\n   * @param {number} time - Optional. Time delay before applying the color change.\r\n   */\r\n  changeColorEdge(edge:any,color:string,lineEdgeColor:string,targetArrowColor:string,time:number=10): void {\r\n    setTimeout(() => {\r\n        edge.style('line-color',lineEdgeColor);\r\n        if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n          edge.style('color',color);\r\n        }\r\n        if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n          edge.style('target-arrow-color', targetArrowColor);\r\n        }\r\n      },time)\r\n  }\r\n  /**\r\n   * Resets the visual styles of all nodes in the graph to their default colors.\r\n   */\r\n  changeColorNodes(): void {\r\n    setTimeout(() => {\r\n      this.cy.nodes().forEach((node:any)=>{\r\n        node.style('background-color',this.BACKGROUND_COLOR_NODE);\r\n        node.style('color',this.COLOR_NODE);\r\n      })\r\n    },10)\r\n  }\r\n  /**\r\n   * Resets the visual styles of all edges in the graph to their default colors.\r\n   */\r\n  changeColorEdges(): void {\r\n    setTimeout(() => {\r\n      this.cy.edges().forEach((edge:any)=>{\r\n        edge.style('line-color',this.COLOR_LINE_EDGE);\r\n        if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n          edge.style('color',this.DATA_EDGE_COLOR);\r\n        }\r\n        if(this.typeGraphe.split(\" \")[0]==\"Directed\"){\r\n          edge.style('target-arrow-color', this.TARGET_ARROW_COLOR);\r\n        }\r\n      })\r\n    },10)\r\n  }\r\n  /**\r\n   * Handles actions related to removing elements from the graph and resetting the graph properties.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   */\r\n  onRemoveChange(container:any):void{\r\n    if(container.typeGraphe!=\"\"){\r\n      //DRY\r\n      container.changeSelect=\"\";\r\n      container.buttonClicked=\"\";\r\n      container.containerHeight=50;\r\n      container.selectedNode=[];\r\n      container.saveUpload=\"\";\r\n      if(container.algorithm!=\"degrenodes\"&&container.algorithm!=\"matrixAdjancy\"&&container.algorithm!=\"matrixIncident\"&&container.algorithm!=\"listeAdjancy\"){\r\n        container.algorithm=\"\";\r\n      }\r\n      //\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formRemoveEdge.style.display=\"none\";\r\n      formRemoveNode.style.display=\"none\";\r\n      container.grapheS.position=\"\";\r\n      this.resetColors();\r\n      if(container.remove==\"reset graphe\"){\r\n        this.Alphabets=this.alphabets.concat(this.alphabets0.map(letter => letter + '2'));\r\n        this.counter=0;\r\n        this.cy.remove(this.cy.elements());\r\n        container.message=this.translate.instant(\"grapheS.msg17\");\r\n      }else if(container.remove==\"remove edges\"){\r\n        container.message=this.translate.instant(\"grapheS.msg44\");\r\n      }else if(container.remove==\"remove nodes\"){\r\n        container.message=this.translate.instant(\"grapheS.msg43\");\r\n      }else if(container.remove==\"remove all\"){\r\n        container.message=this.translate.instant(\"grapheS.msg45\");\r\n      }else if(container.remove==\"special edges\"){\r\n        formRemoveEdge.style.display=\"block\";\r\n        container.message=this.translate.instant(\"grapheS.msg49\");\r\n      }else if(container.remove==\"special nodes\"){\r\n        formRemoveNode.style.display=\"block\";\r\n        container.message=this.translate.instant(\"grapheS.msg50\");\r\n      }\r\n    }else{\r\n      container.message=this.translate.instant(\"screenbox.msg23\");\r\n      container.remove=\"\";\r\n    }\r\n    \r\n  }\r\n  /**\r\n   * Searches for an edge between two specified nodes and changes its line color.\r\n   *\r\n   * @param {any} container - The container object containing graph-related properties.\r\n   * @param {string} source - The source node ID.\r\n   * @param {string} target - The target node ID.\r\n   * @param {string} lineColor - The new line color for the edge.\r\n   */\r\n  searcheEdgeChnageBC(container:any,source:string,target:string,color:string,lineEdgeColor:string,targetArrowColor:string,time:number=10):void{\r\n    const edges = this.cy.elements('edge'); // Select only edges\r\n    edges.forEach((edge:any) => {\r\n        const edgeSourceId = edge.source().id();\r\n        const edgeTargetId = edge.target().id();\r\n        if (edgeSourceId === source && edgeTargetId === target) {\r\n            this.changeColorEdge(edge,color,lineEdgeColor,targetArrowColor,time);\r\n        }\r\n    });\r\n  }\r\n  /**\r\n   * Restores the graph by adding or removing elements based on the restoreArray.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   */\r\n  restoreGraphe(container:any):void{\r\n    if(container.restoreArray.length!=0){\r\n      let elem=container.restoreArray.pop();\r\n      let element=elem.element;\r\n      if(elem.status==\"add\"){\r\n        if(element.isNode() || element.isEdge()){\r\n          element.remove();\r\n          if(element.isNode()){\r\n            container.message=this.translate.instant(\"grapheS.msg55\",{nodeId:element.data('id')});\r\n          }else{\r\n            if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n              container.message=this.translate.instant(\"grapheS.msg58\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight\")});\r\n            }else{\r\n              container.message=this.translate.instant(\"grapheS.msg59\",{source:element.source().id(),target:element.target().id()});\r\n            }\r\n            \r\n          }\r\n        }\r\n      }else{\r\n        if(element.isNode() || element.isEdge()){\r\n          this.cy.add(element);\r\n          if(element.isNode()){\r\n            container.message=this.translate.instant(\"grapheS.msg54\",{nodeId:element.data('id')});\r\n          }else{\r\n            if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n              container.message=this.translate.instant(\"grapheS.msg57\",{source:element.source().id(),target:element.target().id(),weight:element.data(\"weight\")});\r\n            }else{\r\n              container.message=this.translate.instant(\"grapheS.msg56\",{source:element.source().id(),target:element.target().id()});\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Generates a formatted list of edges in the graph.\r\n   *\r\n   * @returns {string} - A formatted string representing the list of edges.\r\n   */\r\n  getListeOfEdge():string {\r\n    let listOfEdge:string=\"\";\r\n    let i:number=0;\r\n    this.cy?.edges().forEach((edge:any) => {\r\n      i++;\r\n      let element:string=`(${this.translate.instant(\"info.s\")}: ${edge.source().id()},${this.translate.instant(\"info.t\")}: ${edge.target().id()}`;\r\n      if(this.typeGraphe.split(\" \")[1]==\"Weighted\"){\r\n        element+=`,${this.translate.instant(\"info.w\")}: ${edge.data('weight')}) `;\r\n      }else{\r\n        element+=\") \";\r\n      }\r\n      if(i!=this.cy?.edges().length){\r\n        element+=\" --- \";\r\n      }\r\n      listOfEdge+=element;\r\n    });\r\n    return listOfEdge;\r\n  }\r\n  /**\r\n   * Generates a formatted list of nodes in the graph.\r\n   *\r\n   * @returns {string} - A formatted string representing the list of nodes.\r\n   */\r\n  getListOfNode():string{\r\n    let listOfNode:string=\"\";\r\n    let i:number=0;\r\n    this.cy?.nodes().forEach((node:any) => {\r\n      i++;\r\n      listOfNode+=`${node.data(\"id\")} `;\r\n      if(i!=this.cy?.nodes().length){\r\n        listOfNode+=\" --- \";\r\n      }\r\n    });\r\n    return listOfNode;\r\n  }\r\n  /**\r\n   * Performs cleanup operations when the component is destroyed.\r\n   * Destroys the CytoScape instance.\r\n   */\r\n  OnDestroy():void{\r\n    this.cy.destroy();\r\n  }\r\n  /**\r\n   * Generates an adjacency matrix representation of the graph.\r\n   * \r\n   * @returns {Array} - A 2D array representing the adjacency matrix.\r\n   */\r\n  matrixAdjancy():Array{\r\n    let adjacencyMatrix:Array=[];\r\n    const nodes = this.cy.nodes();\r\n    const numNodes = nodes.length;\r\n    for (let i = 0; i {\r\n        if((edge.source().id()==node1 && edge.target().id()==node2)/* || (edge.source().id()==node2 && edge.target().id()==node1)*/){\r\n          this.cy.remove(edge);\r\n          let elem={status:\"remove\",element:edge};\r\n          container.restoreArray.push(elem);\r\n        }\r\n      })\r\n  }\r\n  /**\r\n   * Get the degrees of all nodes in the graph.\r\n   *\r\n   * @returns {Array} - An array of objects containing node IDs, in-degrees, out-degrees, and degrees.\r\n   */\r\n  getDegreeNodes():Array{\r\n    let nodesDegre:Array = [];\r\n    let obj:any;\r\n    if(this.cy.nodes().length){\r\n      this.cy.nodes().forEach((node:any) => {\r\n        obj={\r\n          id:node.data('id'),\r\n          indegree:node.indegree(),\r\n          outdegree:node.outdegree(),\r\n          degree:node.degree()\r\n        }; \r\n        nodesDegre.push(obj);\r\n      })\r\n    }\r\n    return nodesDegre;\r\n  }\r\n  /**\r\n   * Create a graph from an adjacency matrix.\r\n   *\r\n   * @param {any} elements - Graph elements, including nodes and edges.\r\n   * @param {boolean} directed - Whether the graph is directed.\r\n   * @param {boolean} weighted - Whether the graph is weighted.\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   */\r\n  createGrapheFromAdjancyMatrix(elements:any,directed:boolean,weighted:boolean,container:any):void{\r\n    this.cy.elements().remove();\r\n    if(directed && weighted){\r\n      container.typeGraphe=this.typeGraphe=\"Directed Weighted\";\r\n      this.changeStyleGraphe(this.typeGraphe);\r\n    }else if (directed) {\r\n        container.typeGraphe=this.typeGraphe=\"Directed Unweighted\";\r\n        this.changeStyleGraphe(this.typeGraphe);\r\n    }else if (weighted) {\r\n        container.typeGraphe=this.typeGraphe=\"Undirected Weighted\";\r\n        this.changeStyleGraphe(this.typeGraphe);\r\n    }else{\r\n        container.typeGraphe=this.typeGraphe=\"Undirected Unweighted\";\r\n        this.changeStyleGraphe(this.typeGraphe);\r\n    }\r\n    let i:number=0;\r\n    elements.forEach((element:any)=>{\r\n      if(element.id){\r\n        const pos = this.POSITIONS[i++];\r\n        this.cy.add({ group: 'nodes', data: { id: element.id}, position: pos });\r\n      }else{\r\n        if(weighted){\r\n          if(element.source && element.target && element.weight){\r\n            if(directed){\r\n              this.cy.add({data:{\r\n                source: element.source,\r\n                target: element.target,\r\n                weight: element.weight\r\n              }\r\n              }); \r\n            }else{\r\n              let exist:boolean=false;\r\n              this.cy.edges().forEach((edge:any)=>{\r\n                if(edge.source().id()==element.target && edge.target().id()==element.source && edge.data(\"weight\")==element.weight){\r\n                  exist=true;\r\n                }\r\n              })\r\n              if(!exist){\r\n                this.cy.add({data:{\r\n                  source: element.source,\r\n                  target: element.target,\r\n                  weight: element.weight\r\n                }\r\n                }); \r\n              }\r\n            }\r\n              \r\n          }\r\n        }else{\r\n          if(element.source && element.target){\r\n            if(directed){\r\n              this.cy.add({\r\n                data: {\r\n                source: element.source,\r\n                target: element.target,\r\n                }\r\n              }); \r\n            }else{\r\n              let exist:boolean=false;\r\n              this.cy.edges().forEach((edge:any)=>{\r\n                if(edge.source().id()==element.target && edge.target().id()==element.source){\r\n                  exist=true;\r\n                }\r\n              })\r\n              if(!exist){\r\n                this.cy.add({\r\n                  data: {\r\n                  source: element.source,\r\n                  target: element.target,\r\n                  }\r\n                }); \r\n              }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    });\r\n  }\r\n  /**\r\n   * Reject the generation of a graph from an adjacency matrix.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   * @param {GrapheFromMatrixAdjaComponent} container2 - Another container object.\r\n   */\r\n  rejeterGenerateGraphFromMatrixAdjancy(container:any,container2:any):void {\r\n    const screen=container.el.nativeElement.querySelector('.screen');\r\n    const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n    const addGrapheWithMatrix=container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n    screen.style.display=\"block\";\r\n    buttonManupilation.style.display=\"block\";\r\n    addGrapheWithMatrix.style.display=\"none\";\r\n    container2.matrixText=\"\";\r\n    container.message=this.translate.instant(\"grapheFromMatrix.msg5\");\r\n    container.changeSelect=\"\";\r\n  }\r\n  /**\r\n   * Change the style of the graph based on its type.\r\n   *\r\n   * @param {string} typeGraphe - The type of the graph (e.g., Directed Weighted).\r\n   */\r\n  changeStyleGraphe(typeGraphe:string):void{\r\n    if(typeGraphe==\"Directed Weighted\"){\r\n      this.cy.style()\r\n        .selector('edge') \r\n        .style({\r\n            'width': 4,\r\n            'line-color': this.COLOR_LINE_EDGE,\r\n            'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n            'target-arrow-shape': 'triangle',\r\n            'color': this.DATA_EDGE_COLOR,\r\n            'curve-style': 'bezier',\r\n            'label': \"data(weight)\",\r\n            'text-margin-y': -12\r\n        })\r\n        .update();\r\n    }else if(typeGraphe==\"Directed Unweighted\"){\r\n      this.cy.style()\r\n        .selector('edge') // Apply the style to all edges\r\n        .style({\r\n            'width': 4,\r\n            'line-color': this.COLOR_LINE_EDGE,\r\n            'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n            'target-arrow-shape': 'triangle',\r\n            'color': this.DATA_EDGE_COLOR,\r\n            'curve-style': 'bezier',\r\n            'label': \"\"\r\n        })\r\n        .update();\r\n    }else if(typeGraphe==\"Undirected Weighted\"){\r\n      this.cy.style()\r\n            .selector('edge') // Apply the style to all edges\r\n            .style({\r\n                'width': 4,\r\n                'line-color': this.COLOR_LINE_EDGE,\r\n                'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n                'target-arrow-shape': 'triangle',\r\n                'color': this.DATA_EDGE_COLOR,\r\n                'curve-style': 'haystack',\r\n                'label': \"data(weight)\",\r\n                'text-margin-y': -12\r\n            })\r\n            .update();\r\n    }else if(typeGraphe==\"Undirected Unweighted\"){\r\n      this.cy.style()\r\n            .selector('edge') // Apply the style to all edges\r\n            .style({\r\n                'width': 4,\r\n                'line-color': this.COLOR_LINE_EDGE,\r\n                'target-arrow-color': this.TARGET_ARROW_COLOR,\r\n                'target-arrow-shape': 'triangle',\r\n                'color': this.DATA_EDGE_COLOR,\r\n                'curve-style': 'haystack',\r\n                'label': \"\"\r\n            })\r\n            .update();\r\n    }\r\n  }\r\n  /**\r\n   * Create a graph from a list of edges.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   * @param {GrapheFromEdgesListComponent} container2 - Another container object.\r\n   */\r\n  createGrapheFromListEdges(container:any,container2:any):void{\r\n    const elements:any=container2.sendElements();\r\n    let err:boolean=false;\r\n    let cyElements:any=this.cy.elements();\r\n    let cyType:string=this.typeGraphe;\r\n    if(elements){\r\n      this.cy.elements().remove();\r\n      let typeGraphe:string=elements[0].type;\r\n      container.typeGraphe=this.typeGraphe=typeGraphe;\r\n      this.changeStyleGraphe(typeGraphe);\r\n      let i:number=0;\r\n      for(let element of elements){\r\n        const nodeExists = this.cy.getElementById(element.source).nonempty();\r\n        const nodeExists1 = this.cy.getElementById(element.target).nonempty();\r\n        if(element.source==\"\"){\r\n          container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n          err=true;\r\n          break;\r\n        }else if(!nodeExists){\r\n          const pos = this.POSITIONS[i++];\r\n          this.cy.add({ group: 'nodes', data: { id: element.source}, position: pos });\r\n        }\r\n        if(element.target==\"\"){\r\n          err=true;\r\n          container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n          break;\r\n        }else if(!nodeExists1){\r\n          const pos = this.POSITIONS[i++];\r\n          this.cy.add({ group: 'nodes', data: { id: element.target}, position: pos });\r\n        }\r\n      }\r\n      if(!err){\r\n        elements.forEach((element:any)=>{\r\n          if(typeGraphe.split(' ')[1]==\"Weighted\"){\r\n            if(element.source && element.target && element.weight){\r\n                this.cy.add({data:{\r\n                  source: element.source,\r\n                  target: element.target,\r\n                  weight: element.weight\r\n                }\r\n                }); \r\n            }\r\n          }else{\r\n            if(element.source && element.target){\r\n              this.cy.add({\r\n                data: {\r\n                source: element.source,\r\n                target: element.target,\r\n                }\r\n              }); \r\n            }\r\n          }\r\n        })\r\n      const screen=container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheFromEdgesList=container.el.nativeElement.querySelector('.addGrapheFromEdgesList');\r\n      screen.style.display=\"block\";\r\n      buttonManupilation.style.display=\"block\";\r\n      addGrapheFromEdgesList.style.display=\"none\";\r\n      container2.listEdgeTextArea=\"\";\r\n      container.message=this.translate.instant(\"grapheFromEdgeList.msg7\");////\r\n      container.restoreArray=[];\r\n      container.changeSelect=\"\";\r\n      }else{\r\n        container.typeGraphe=this.typeGraphe=cyType;\r\n        this.changeStyleGraphe(typeGraphe);\r\n        this.cy.elements().remove();\r\n        this.cy.add(cyElements);\r\n      }\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n    }\r\n  }\r\n  /**\r\n   * Reject the generation of a graph from a list of edges.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container object containing graph-related properties.\r\n   * @param {GrapheFromEdgesListComponent} container2 - Another container object.\r\n   */\r\n  rejeterGenerateGraphFromListEdges(container:any,container2:any):void {\r\n    const screen=container.el.nativeElement.querySelector('.screen');\r\n    const buttonManupilation=container.el.nativeElement.querySelector('.buttonManupilation');\r\n    const addGrapheFromEdgesList=container.el.nativeElement.querySelector('.addGrapheFromEdgesList');\r\n    screen.style.display=\"block\";\r\n    buttonManupilation.style.display=\"block\";\r\n    addGrapheFromEdgesList.style.display=\"none\";\r\n    container2.listEdgeTextArea=\"\";\r\n    container.message=this.translate.instant(\"grapheFromEdgeList.msg6\");///////Change this message\r\n    container.changeSelect=\"\";\r\n  }\r\n  /**\r\n   * Get the density of the graph.\r\n   *\r\n   * @returns {number} - The density of the graph.\r\n   */\r\n  getDensityOfGraphe():number{\r\n    if(this.cy.nodes().length){\r\n      if(this.typeGraphe.split(' ')[0] == 'Directed'){\r\n        return this.cy.edges().length/(this.cy.nodes().length*(this.cy.nodes().length-1));\r\n      }else{\r\n        return (2*this.cy.edges().length)/(this.cy.nodes().length*(this.cy.nodes().length-1));\r\n      }\r\n    }else{\r\n      return 0;\r\n    }\r\n  }\r\n  /**\r\n   * Get an array of node IDs in the graph.\r\n   *\r\n   * @returns {Array} - An array of node IDs.\r\n   */\r\n  getNodeIds():Array{\r\n    const nodes:Array = [];\r\n    this.cy.nodes().forEach((node:any)=>{\r\n      nodes.push(node.data('id'));\r\n    })\r\n    return nodes;\r\n  }\r\n  /**\r\n   * Calculate the incidence matrix of the graph.\r\n   *\r\n   * @returns {Array} - The incidence matrix of the graph.\r\n   */\r\n  incidenceMatrix():Array {\r\n    const nodes = this.cy.nodes();\r\n    const edges = this.cy.edges();\r\n  \r\n    // Create an empty incidence matrix\r\n    const incidenceMatrix:Array = [];\r\n  \r\n    // Initialize an empty matrix with rows corresponding to nodes and columns to edges\r\n    for (let i = 0; i  {\r\n      const sourceNode = edge.source();\r\n      const targetNode = edge.target();\r\n  \r\n      // Find the indices of the source and target nodes in the nodes array\r\n      const sourceIndex = nodes.indexOf(sourceNode);\r\n      const targetIndex = nodes.indexOf(targetNode);\r\n  \r\n      // Set the corresponding cells in the matrix to 1 or -1 to indicate incidence\r\n      if(sourceIndex==targetIndex){\r\n        incidenceMatrix[sourceIndex][edgeIndex] = 2;\r\n      }else if(this.typeGraphe.split(' ')[0]==\"Directed\"){\r\n        incidenceMatrix[targetIndex][edgeIndex] = 1;\r\n        incidenceMatrix[sourceIndex][edgeIndex] = -1;\r\n      }else{\r\n        incidenceMatrix[sourceIndex][edgeIndex] = 1;\r\n        incidenceMatrix[targetIndex][edgeIndex] = 1;\r\n      }\r\n    });\r\n  \r\n    return incidenceMatrix;\r\n  }\r\n  /**\r\n   * Get an array of edge IDs in the graph.\r\n   *\r\n   * @returns {Array} - An array of edge IDs.\r\n   */\r\n  getEdgeIds():Array{\r\n    const edges:Array = [];\r\n    this.cy.edges().forEach((edge:any)=>{\r\n      let edgeText:string=\"\";\r\n      if(this.typeGraphe.split(' ')[0]==\"Directed\"){\r\n        edgeText=`${edge.source().id()} > ${edge.target().id()}`;\r\n      }else{\r\n        edgeText=`${edge.source().id()} - ${edge.target().id()}`;\r\n      }\r\n      edges.push(edgeText);\r\n    })\r\n    return edges;\r\n  }\r\n  /**\r\n   * Remove an edge from the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph.\r\n   * @param {RemoveEdgeComponent} container2 - Additional container.\r\n   */\r\n  removeEdge(container:any,container2:any):void{\r\n    let exist: boolean=false;\r\n    const edges = this.cy.edges();\r\n    let edgeI:any;\r\n    if(this.typeGraphe.split(' ')[0]==\"Undirected\"){\r\n      for(let edge of edges){\r\n        if((edge.source().id()==container2.sourceId && edge.target().id()==container2.targetId)||(edge.target().id()==container2.sourceId && edge.source().id()==container2.targetId)){\r\n          edgeI=edge;\r\n          exist=true;\r\n          break;\r\n        }\r\n      }\r\n    }else{\r\n      for(let edge of edges){\r\n        if(edge.source().id()==container2.sourceId && edge.target().id()==container2.targetId){\r\n          edgeI=edge;\r\n          exist=true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(exist){\r\n      this.cy.remove(edgeI);\r\n      let elem={status:\"remove\",element:edgeI};\r\n      container.restoreArray.push(elem);\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      formRemoveEdge.style.display=\"none\";\r\n      container.message=this.translate.instant(\"grapheS.msg48\",{source:container2.sourceId,target:container2.targetId});\r\n      container2.sourceId=\"\";\r\n      container2.targetId=\"\";\r\n      container.remove=\"\";\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg47\",{source:container2.sourceId,target:container2.targetId});\r\n    }\r\n  }\r\n  /**\r\n   * Reject the removal of an edge from the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph.\r\n   * @param {RemoveEdgeComponent} container2 - Additional container.\r\n   */\r\n  RejeterRemoveEdge(container:any,container2:any):void{\r\n    const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n    formRemoveEdge.style.display=\"none\";\r\n    container2.sourceId=\"\";\r\n    container2.targetId=\"\";\r\n    container.remove=\"\";\r\n    container.message=this.translate.instant(\"grapheS.msg46\");\r\n  }\r\n  /**\r\n   * Remove a node from the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph.\r\n   * @param {RemoveNodeComponent} container2 - Additional container.\r\n   */\r\n  removeNode(container:any,container2:any):void{\r\n    let node:any=this.cy.getElementById(container2.nodeId);\r\n    let exist:boolean=node.isNode();\r\n    if(exist){\r\n      node.remove();\r\n      let elem={status:\"remove\",element:node};\r\n      container.restoreArray.push(elem);\r\n      //\r\n      container.message=this.translate.instant(\"grapheS.msg52\",{nodeId:container2.nodeId});\r\n      const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n      const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n      const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n      const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n      const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n      const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n      const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n      formChangeNodeId.style.display=\"none\";\r\n      formAddEdge.style.display=\"none\";\r\n      formChangeColor.style.display=\"none\";\r\n      formAChangeSizeScreen.style.display=\"none\";\r\n      formAddNode.style.display=\"none\";\r\n      formRemoveEdge.style.display=\"none\";\r\n      formRemoveNode.style.display=\"none\";\r\n      container2.nodeId=\"\";\r\n      container.remove=\"\";\r\n    }else{\r\n      container.message=this.translate.instant(\"grapheS.msg53\",{nodeId:container2.nodeId});\r\n    }\r\n  }\r\n  /**\r\n   * Reject the removal of a node from the graph.\r\n   *\r\n   * @param {ScreenboxComponent} container - The container for the graph.\r\n   * @param {RemoveNodeComponent} container2 - Additional container.\r\n   */\r\n  RejeterRemoveNode(container:any,container2:any):void{\r\n    const formChangeNodeId=container.el.nativeElement.querySelector('.formChangeNodeId');\r\n    const formAddEdge = container.el.nativeElement.querySelector('.formAddEdges');\r\n    const formAChangeSizeScreen = container.el.nativeElement.querySelector('.formAChangeSizeScreen');\r\n    const formChangeColor = container.el.nativeElement.querySelector('.formChangeColor');\r\n    const formAddNode = container.el.nativeElement.querySelector('.formAddNode');\r\n    const formRemoveEdge = container.el.nativeElement.querySelector('.formRemoveEdge');\r\n    const formRemoveNode = container.el.nativeElement.querySelector('.formRemoveNode');\r\n    container.message=this.translate.instant(\"grapheS.msg51\");\r\n    formChangeNodeId.style.display=\"none\";\r\n    formAddEdge.style.display=\"none\";\r\n    formChangeColor.style.display=\"none\";\r\n    formAChangeSizeScreen.style.display=\"none\";\r\n    formAddNode.style.display=\"none\";\r\n    formRemoveEdge.style.display=\"none\";\r\n    formRemoveNode.style.display=\"none\";\r\n    container2.nodeId=\"\";\r\n    container.remove=\"\";\r\n  }\r\n  /**\r\n   * Get the adjacency list of the graph.\r\n   *\r\n   * @returns {Array} - The adjacency list of the graph.\r\n   */\r\n  getAdjancyList():Array{\r\n    const adjacencyList:Array = [];\r\n      this.cy.nodes().forEach((node:any) => {\r\n        const outgoingEdges = node.outgoers();\r\n        const incomersEdges = node.incomers();\r\n        let adjNode:Array=outgoingEdges.map((edge:any) => edge.target().id());\r\n        let elements:Array=incomersEdges.map((edge:any) => edge.source().id());\r\n        let adjanString:string=\"\";\r\n        adjNode = adjNode.filter(item => item !== undefined);\r\n        elements = elements.filter(item => item !== undefined);\r\n        for(let i:number=0;i `;\r\n            }else{\r\n              adjanString+=`${adjNode[i]}`\r\n            }\r\n          }else{\r\n            let edge:any;\r\n            for(let element of this.cy.edges()){\r\n              if(element.target().id()==adjNode[i] && element.source().id()==node.id()){\r\n                edge=element;\r\n                break;\r\n              }\r\n            }\r\n            if(i!=adjNode.length-1){\r\n              adjanString+=`${adjNode[i]} (${edge.data(\"weight\")}) ~> `;\r\n            }else{\r\n              adjanString+=`${adjNode[i]} (${edge.data(\"weight\")})`\r\n            }\r\n          }\r\n          \r\n        }\r\n        if(this.typeGraphe.split(\" \")[0]!=\"Directed\"){\r\n          for(let i:number=0;i ${elements[i]} ~> `;\r\n              }else if(i!=elements.length-1){\r\n                adjanString+=` ${elements[i]} ~> `;\r\n              }else{\r\n                adjanString+=`${elements[i]}`;\r\n              }\r\n            }else{\r\n              let edge:any;\r\n              for(let element of this.cy.edges()){\r\n                if(element.source().id()==adjNode[i] && element.target().id()==node.id()){\r\n                  edge=element;\r\n                  break;\r\n                }\r\n              }\r\n              if(i==0 && adjNode.length){\r\n                adjanString+=` ~> ${elements[i]} (${edge.data(\"weight\")}) ~> `;\r\n              }else if(i!=elements.length-1){\r\n                adjanString+=` ${elements[i]} (${edge.data(\"weight\")}) ~> `;\r\n              }else{\r\n                adjanString+=`${elements[i]} (${edge.data(\"weight\")})`;\r\n              }\r\n            }\r\n              \r\n          }\r\n        }\r\n        if(adjanString){\r\n          if(adjanString.slice(-3)==\"~> \"){\r\n            adjanString+=\" NULL\";\r\n          }else {\r\n            adjanString+=\" ~> NULL\";\r\n          }\r\n        }\r\n        const adjacencyListEntry = {\r\n          node: node.id(),\r\n          adjacentNodes: adjanString\r\n        };\r\n        adjacencyList.push(adjacencyListEntry);\r\n        });\r\n    return adjacencyList;\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUnweightedEdge.html":{"url":"interfaces/IUnweightedEdge.html","title":"interface - IUnweightedEdge","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IUnweightedEdge\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/graphe-from-matrix-adja/graphe-from-matrix-adja.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents an unweighted edge in a graph.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The source node of the edge.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The target node of the edge.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n/**\r\n * Represents a weighted edge in a graph.\r\n *\r\n * @interface IWeightedEdge\r\n */\r\ninterface IWeightedEdge {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The weight of the edge.\r\n   *\r\n   * @type {number}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  weight: number;\r\n}\r\n\r\n/**\r\n * Represents an unweighted edge in a graph.\r\n *\r\n * @interface IUnweightedEdge\r\n */\r\ninterface IUnweightedEdge {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdge\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdge\r\n   */\r\n  target: string;\r\n}\r\n@Component({\r\n  selector: 'app-graphe-from-matrix-adja',\r\n  templateUrl: './graphe-from-matrix-adja.component.html',\r\n  styleUrls: ['./graphe-from-matrix-adja.component.css']\r\n})\r\nexport class GrapheFromMatrixAdjaComponent {\r\n  /**\r\n   * Input container object for handling graph-related properties.\r\n   */\r\n  @Input() container:any;\r\n  /**\r\n   * The adjacency matrix in text format.\r\n   */\r\n  matrixText:string=\"\";\r\n  /**\r\n   * Constructor for the GrapheFromMatrixAdjaComponent.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance for handling graph operations.\r\n   * @param {TranslateService} translate - The TranslateService for language localization.\r\n   */\r\n  constructor(protected grapheS:GrapheService,protected translate:TranslateService){}\r\n  /**\r\n   * Generates a graph based on the provided adjacency matrix.\r\n   */\r\n  generateGraph() {\r\n    // Parse the matrix into a 2D array\r\n    const adjacencyMatrix = this.parseAdjacencyMatrix(this.matrixText);\r\n    if(adjacencyMatrix){\r\n      const elements:Array=this.createGraphElements(adjacencyMatrix);\r\n      this.grapheS.createGrapheFromAdjancyMatrix(elements,!this.isSymmetric(adjacencyMatrix),this.isWeighted(adjacencyMatrix),this.container);\r\n      const screen=this.container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=this.container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheWithMatrix=this.container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n      screen.style.display=\"block\";\r\n      buttonManupilation.style.display=\"block\";\r\n      addGrapheWithMatrix.style.display=\"none\";\r\n      this.matrixText=\"\";\r\n      this.container.message=this.translate.instant(\"grapheFromMatrix.msg4\");\r\n      this.container.changeSelect=\"\";\r\n      this.container.restoreArray=[];\r\n    }\r\n  }\r\n  /**\r\n   * Parses the input adjacency matrix in text format and returns a 2D array.\r\n   *\r\n   * @param {string} matrixText - The adjacency matrix in text format.\r\n   * @returns {any} - The parsed 2D array representing the adjacency matrix or `false` if parsing fails.\r\n   */\r\n  parseAdjacencyMatrix(matrixText:string):any {\r\n    // Remove leading and trailing whitespace\r\n    matrixText = matrixText.trim();\r\n    let err:boolean=false;\r\n    let matrix:any;\r\n    // Check if the input is empty\r\n    if (matrixText.length === 0) {\r\n        this.container.message=this.translate.instant('grapheFromMatrix.msg2');\r\n        err=true;\r\n    }\r\n    if(!err){\r\n      // Split the text by newline to get rows\r\n      const rows = matrixText.split('\\n');\r\n      const numRows = rows.length;\r\n\r\n      // Initialize a flag to check if the matrix is square\r\n      let isSquare = true;\r\n\r\n      // Parse each row into an array of numbers and validate the format\r\n      matrix = rows.map((row:any, rowIndex:any) => {\r\n          const values = row.trim().split(/\\s+/).map(Number);\r\n          // Check if the matrix is square by comparing the number of columns\r\n          if (values.length !== numRows) {\r\n              isSquare = false;\r\n          }\r\n          return values;\r\n      });\r\n      for (let i = 0; i >} adjacencyMatrix - The parsed adjacency matrix.\r\n   * @returns {Array} - An array of graph elements.\r\n   */\r\n  createGraphElements(adjacencyMatrix: Array>): Array {\r\n    let elements: Array = [];\r\n    const isDirected: boolean = !this.isSymmetric(adjacencyMatrix);\r\n    const isWeighted: boolean = this.isWeighted(adjacencyMatrix);\r\n    \r\n    // Create nodes\r\n    for (let i = 0; i =[];\r\n    if(this.container.nodeName==\"numerique\"){\r\n      arrayNemming=this.grapheS.numbersArray;\r\n    }else if(this.container.nodeName==\"alphabic\"){\r\n      arrayNemming=this.grapheS.Alphabets;\r\n    }\r\n    // Create edges based on adjacency matrix\r\n    for (let i = 0; i >} adjacencyMatrix - The adjacency matrix.\r\n   * @returns {boolean} - `true` if the graph is weighted, otherwise `false`.\r\n   */\r\n  isWeighted(adjacencyMatrix:Array>):boolean{\r\n    let weighted:boolean=false;\r\n    for (let i = 0; i >} matrix - The adjacency matrix.\r\n   * @returns {boolean} - `true` if the matrix is symmetric, indicating an undirected graph, otherwise `false`.\r\n   */\r\n  isSymmetric(matrix:Array>) {\r\n    if (!Array.isArray(matrix) || matrix.length === 0 || matrix[0].length === 0) {\r\n      return false; // Not a valid matrix\r\n    }\r\n  \r\n    const numRows = matrix.length;\r\n    const numCols = matrix[0].length;\r\n  \r\n    if (numRows !== numCols) {\r\n      return false; // Not a square matrix, so it can't be symmetric\r\n    }\r\n  \r\n    for (let i = 0; i \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUnweightedEdgeTyped.html":{"url":"interfaces/IUnweightedEdgeTyped.html","title":"interface - IUnweightedEdgeTyped","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IUnweightedEdgeTyped\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/graphe-from-edges-list/graphe-from-edges-list.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents an unweighted edge in a graph.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The source node of the edge.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The target node of the edge.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The type of the edge.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n/**\r\n * Represents a weighted edge in a graph.\r\n *\r\n * @interface IWeightedEdgeTyped\r\n */\r\ninterface IWeightedEdgeTyped {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The weight of the edge.\r\n   *\r\n   * @type {number}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  weight: number;\r\n\r\n  /**\r\n   * The type of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  type: string;\r\n}\r\n\r\n/**\r\n * Represents an unweighted edge in a graph.\r\n *\r\n * @interface IUnweightedEdgeTyped\r\n */\r\ninterface IUnweightedEdgeTyped {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The type of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  type: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-graphe-from-edges-list',\r\n  templateUrl: './graphe-from-edges-list.component.html',\r\n  styleUrls: ['./graphe-from-edges-list.component.css']\r\n})\r\nexport class GrapheFromEdgesListComponent {\r\n  /**\r\n   * Constructor for the GrapheFromEdgesListComponent.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance for handling graph operations.\r\n   * @param {TranslateService} translate - The TranslateService for language localization.\r\n   */\r\n  constructor(protected grapheS:GrapheService,protected translate:TranslateService){}\r\n  /**\r\n   * The text area input for the list of edges.\r\n   */\r\n  listEdgeTextArea:string=\"\";\r\n  /**\r\n   * Input container object for handling graph-related properties.\r\n   */\r\n  @Input() container:any;\r\n  /**\r\n   * Parses the extended format list of edges and returns an array of parsed edge objects.\r\n   *\r\n   * @returns {Array} - An array of parsed edge objects.\r\n   */\r\n  parseExtendedFormat():Array {\r\n    const lines = this.listEdgeTextArea.split('\\n');\r\n    const edges:Array = [];\r\n    if(lines.length==0){\r\n      this.container.message=this.translate.instant(\"grapheFromEdgeList.msg2\");\r\n    }\r\n    for (const line of lines) {\r\n      const edge = this.parseEdge(line);\r\n      if (edge && !this.containsInvalidCharacters(edge?.source) && !this.containsInvalidCharacters(edge?.source)) {\r\n        edges.push(edge);\r\n      }else{\r\n        this.container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n        break;\r\n      }\r\n    }\r\n  \r\n    return edges;\r\n  }\r\n  /**\r\n   * Parses a single edge from a line of text and returns an edge object.\r\n   *\r\n   * @param {string} line - The input line containing edge information.\r\n   * @returns {IWeightedEdgeTyped|IUnweightedEdgeTyped|null} - The parsed edge object.\r\n   */\r\n  parseEdge(line:string):IWeightedEdgeTyped|IUnweightedEdgeTyped|null {\r\n    const matchDirectedWeighted = line.match(/\\s*([^(-]*)\\s*-\\(([\\d.]+)\\)->\\s*([^(-]*)\\s*/);\r\n    const matchDirected = line.match(/\\s*([^(-]*)\\s*>\\s*([^(-]*)\\s*/);\r\n    const matchUndirectedWeighted = line.match(/\\s*([^(-]*)\\s*-\\(([\\d.]+)\\)-\\s*([^(-]*)\\s*/);\r\n    const matchUndirected = line.match(/\\s*([^(-]*)\\s*-\\s*([^(-]*)\\s*/);\r\n  \r\n    if (matchDirectedWeighted) {//OK\r\n      return {\r\n        source: matchDirectedWeighted[1].trim(),\r\n        target: matchDirectedWeighted[3].trim(),\r\n        weight: Number(matchDirectedWeighted[2]),\r\n        type: 'Directed Weighted',\r\n      };\r\n    } else if (matchDirected) {//OK\r\n      return {\r\n        source: matchDirected[1].trim(),\r\n        target: matchDirected[2].trim(),\r\n        type: 'Directed Unweighted',\r\n      };\r\n    } else if (matchUndirectedWeighted) {\r\n      console.log(matchUndirectedWeighted[2]);\r\n      console.log(matchUndirectedWeighted[1]);\r\n      console.log(matchUndirectedWeighted[3]);\r\n      return {\r\n        source: matchUndirectedWeighted[1].trim(),\r\n        target: matchUndirectedWeighted[3].trim(),\r\n        weight: Number(matchUndirectedWeighted[2]),\r\n        type: 'Undirected Weighted',\r\n      };\r\n    } else if (matchUndirected) {//OK\r\n      return {\r\n        source: matchUndirected[1].trim(),\r\n        target: matchUndirected[2].trim(),\r\n        type: 'Undirected Unweighted',\r\n      };\r\n    }\r\n  \r\n    return null;\r\n  }\r\n  /**\r\n  * Checks if all edges have the same type of graph (e.g., Directed Weighted).\r\n  *\r\n  * @param {Array} edges - An array of edge objects to check.\r\n  * @returns {boolean} - `true` if all edges have the same type, otherwise `false`.\r\n  */\r\n  isSameTypeGraphe(edges:Array): boolean {\r\n    let isSameTypeGraphe:boolean=true;\r\n    let firstType:string=edges[0]?.type;\r\n    if(firstType){\r\n      for (const edge of edges) {\r\n        if(edge.type!=firstType){\r\n          console.log(\" Type Error\")\r\n          isSameTypeGraphe=false;\r\n          break;\r\n        }\r\n      }\r\n    }else{\r\n      isSameTypeGraphe=false;\r\n    }\r\n    return isSameTypeGraphe;\r\n  }\r\n  /**\r\n   * Sends the parsed graph elements to the parent component.\r\n   *\r\n   * @returns {any} - The parsed graph elements or `false` if there is a type mismatch.\r\n   */\r\n  sendElements():any{\r\n    if(this.isSameTypeGraphe(this.parseExtendedFormat())){\r\n      return this.parseExtendedFormat();\r\n    }else{\r\n      this.container.message=this.translate.instant(\"grapheFromEdgeList.msg3\");\r\n      return false;\r\n    }\r\n  }\r\n  /**\r\n   * Checks if a given input string contains invalid characters.\r\n   *\r\n   * @param {string} inputString - The input string to check for invalid characters.\r\n   * @returns {boolean} - `true` if the input contains invalid characters, otherwise `false`.\r\n   */\r\n  containsInvalidCharacters(inputString:string) :boolean{\r\n    // Define a regular expression pattern for valid characters\r\n    const invalidCharactersPattern = /[<> ()&;:-]/;\r\n    // Test the inputString against the pattern\r\n    return invalidCharactersPattern.test(inputString);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeightedEdge.html":{"url":"interfaces/IWeightedEdge.html","title":"interface - IWeightedEdge","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IWeightedEdge\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/graphe-from-matrix-adja/graphe-from-matrix-adja.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents a weighted edge in a graph.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The source node of the edge.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The target node of the edge.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The weight of the edge.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n/**\r\n * Represents a weighted edge in a graph.\r\n *\r\n * @interface IWeightedEdge\r\n */\r\ninterface IWeightedEdge {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The weight of the edge.\r\n   *\r\n   * @type {number}\r\n   * @memberof IWeightedEdge\r\n   */\r\n  weight: number;\r\n}\r\n\r\n/**\r\n * Represents an unweighted edge in a graph.\r\n *\r\n * @interface IUnweightedEdge\r\n */\r\ninterface IUnweightedEdge {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdge\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdge\r\n   */\r\n  target: string;\r\n}\r\n@Component({\r\n  selector: 'app-graphe-from-matrix-adja',\r\n  templateUrl: './graphe-from-matrix-adja.component.html',\r\n  styleUrls: ['./graphe-from-matrix-adja.component.css']\r\n})\r\nexport class GrapheFromMatrixAdjaComponent {\r\n  /**\r\n   * Input container object for handling graph-related properties.\r\n   */\r\n  @Input() container:any;\r\n  /**\r\n   * The adjacency matrix in text format.\r\n   */\r\n  matrixText:string=\"\";\r\n  /**\r\n   * Constructor for the GrapheFromMatrixAdjaComponent.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance for handling graph operations.\r\n   * @param {TranslateService} translate - The TranslateService for language localization.\r\n   */\r\n  constructor(protected grapheS:GrapheService,protected translate:TranslateService){}\r\n  /**\r\n   * Generates a graph based on the provided adjacency matrix.\r\n   */\r\n  generateGraph() {\r\n    // Parse the matrix into a 2D array\r\n    const adjacencyMatrix = this.parseAdjacencyMatrix(this.matrixText);\r\n    if(adjacencyMatrix){\r\n      const elements:Array=this.createGraphElements(adjacencyMatrix);\r\n      this.grapheS.createGrapheFromAdjancyMatrix(elements,!this.isSymmetric(adjacencyMatrix),this.isWeighted(adjacencyMatrix),this.container);\r\n      const screen=this.container.el.nativeElement.querySelector('.screen');\r\n      const buttonManupilation=this.container.el.nativeElement.querySelector('.buttonManupilation');\r\n      const addGrapheWithMatrix=this.container.el.nativeElement.querySelector('.addGrapheWithMatrix');\r\n      screen.style.display=\"block\";\r\n      buttonManupilation.style.display=\"block\";\r\n      addGrapheWithMatrix.style.display=\"none\";\r\n      this.matrixText=\"\";\r\n      this.container.message=this.translate.instant(\"grapheFromMatrix.msg4\");\r\n      this.container.changeSelect=\"\";\r\n      this.container.restoreArray=[];\r\n    }\r\n  }\r\n  /**\r\n   * Parses the input adjacency matrix in text format and returns a 2D array.\r\n   *\r\n   * @param {string} matrixText - The adjacency matrix in text format.\r\n   * @returns {any} - The parsed 2D array representing the adjacency matrix or `false` if parsing fails.\r\n   */\r\n  parseAdjacencyMatrix(matrixText:string):any {\r\n    // Remove leading and trailing whitespace\r\n    matrixText = matrixText.trim();\r\n    let err:boolean=false;\r\n    let matrix:any;\r\n    // Check if the input is empty\r\n    if (matrixText.length === 0) {\r\n        this.container.message=this.translate.instant('grapheFromMatrix.msg2');\r\n        err=true;\r\n    }\r\n    if(!err){\r\n      // Split the text by newline to get rows\r\n      const rows = matrixText.split('\\n');\r\n      const numRows = rows.length;\r\n\r\n      // Initialize a flag to check if the matrix is square\r\n      let isSquare = true;\r\n\r\n      // Parse each row into an array of numbers and validate the format\r\n      matrix = rows.map((row:any, rowIndex:any) => {\r\n          const values = row.trim().split(/\\s+/).map(Number);\r\n          // Check if the matrix is square by comparing the number of columns\r\n          if (values.length !== numRows) {\r\n              isSquare = false;\r\n          }\r\n          return values;\r\n      });\r\n      for (let i = 0; i >} adjacencyMatrix - The parsed adjacency matrix.\r\n   * @returns {Array} - An array of graph elements.\r\n   */\r\n  createGraphElements(adjacencyMatrix: Array>): Array {\r\n    let elements: Array = [];\r\n    const isDirected: boolean = !this.isSymmetric(adjacencyMatrix);\r\n    const isWeighted: boolean = this.isWeighted(adjacencyMatrix);\r\n    \r\n    // Create nodes\r\n    for (let i = 0; i =[];\r\n    if(this.container.nodeName==\"numerique\"){\r\n      arrayNemming=this.grapheS.numbersArray;\r\n    }else if(this.container.nodeName==\"alphabic\"){\r\n      arrayNemming=this.grapheS.Alphabets;\r\n    }\r\n    // Create edges based on adjacency matrix\r\n    for (let i = 0; i >} adjacencyMatrix - The adjacency matrix.\r\n   * @returns {boolean} - `true` if the graph is weighted, otherwise `false`.\r\n   */\r\n  isWeighted(adjacencyMatrix:Array>):boolean{\r\n    let weighted:boolean=false;\r\n    for (let i = 0; i >} matrix - The adjacency matrix.\r\n   * @returns {boolean} - `true` if the matrix is symmetric, indicating an undirected graph, otherwise `false`.\r\n   */\r\n  isSymmetric(matrix:Array>) {\r\n    if (!Array.isArray(matrix) || matrix.length === 0 || matrix[0].length === 0) {\r\n      return false; // Not a valid matrix\r\n    }\r\n  \r\n    const numRows = matrix.length;\r\n    const numCols = matrix[0].length;\r\n  \r\n    if (numRows !== numCols) {\r\n      return false; // Not a square matrix, so it can't be symmetric\r\n    }\r\n  \r\n    for (let i = 0; i \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeightedEdgeTyped.html":{"url":"interfaces/IWeightedEdgeTyped.html","title":"interface - IWeightedEdgeTyped","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IWeightedEdgeTyped\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/graphe-from-edges-list/graphe-from-edges-list.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents a weighted edge in a graph.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The source node of the edge.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The target node of the edge.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The type of the edge.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        weight\n                                    \n                                \n                                \n                                    \n                                        weight:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    The weight of the edge.\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GrapheService } from 'src/app/Services/graphe.service';\r\n/**\r\n * Represents a weighted edge in a graph.\r\n *\r\n * @interface IWeightedEdgeTyped\r\n */\r\ninterface IWeightedEdgeTyped {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The weight of the edge.\r\n   *\r\n   * @type {number}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  weight: number;\r\n\r\n  /**\r\n   * The type of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IWeightedEdgeTyped\r\n   */\r\n  type: string;\r\n}\r\n\r\n/**\r\n * Represents an unweighted edge in a graph.\r\n *\r\n * @interface IUnweightedEdgeTyped\r\n */\r\ninterface IUnweightedEdgeTyped {\r\n  /**\r\n   * The source node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  source: string;\r\n\r\n  /**\r\n   * The target node of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  target: string;\r\n\r\n  /**\r\n   * The type of the edge.\r\n   *\r\n   * @type {string}\r\n   * @memberof IUnweightedEdgeTyped\r\n   */\r\n  type: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-graphe-from-edges-list',\r\n  templateUrl: './graphe-from-edges-list.component.html',\r\n  styleUrls: ['./graphe-from-edges-list.component.css']\r\n})\r\nexport class GrapheFromEdgesListComponent {\r\n  /**\r\n   * Constructor for the GrapheFromEdgesListComponent.\r\n   *\r\n   * @param {GrapheService} grapheS - The GrapheService instance for handling graph operations.\r\n   * @param {TranslateService} translate - The TranslateService for language localization.\r\n   */\r\n  constructor(protected grapheS:GrapheService,protected translate:TranslateService){}\r\n  /**\r\n   * The text area input for the list of edges.\r\n   */\r\n  listEdgeTextArea:string=\"\";\r\n  /**\r\n   * Input container object for handling graph-related properties.\r\n   */\r\n  @Input() container:any;\r\n  /**\r\n   * Parses the extended format list of edges and returns an array of parsed edge objects.\r\n   *\r\n   * @returns {Array} - An array of parsed edge objects.\r\n   */\r\n  parseExtendedFormat():Array {\r\n    const lines = this.listEdgeTextArea.split('\\n');\r\n    const edges:Array = [];\r\n    if(lines.length==0){\r\n      this.container.message=this.translate.instant(\"grapheFromEdgeList.msg2\");\r\n    }\r\n    for (const line of lines) {\r\n      const edge = this.parseEdge(line);\r\n      if (edge && !this.containsInvalidCharacters(edge?.source) && !this.containsInvalidCharacters(edge?.source)) {\r\n        edges.push(edge);\r\n      }else{\r\n        this.container.message=this.translate.instant(\"grapheFromEdgeList.msg1\");\r\n        break;\r\n      }\r\n    }\r\n  \r\n    return edges;\r\n  }\r\n  /**\r\n   * Parses a single edge from a line of text and returns an edge object.\r\n   *\r\n   * @param {string} line - The input line containing edge information.\r\n   * @returns {IWeightedEdgeTyped|IUnweightedEdgeTyped|null} - The parsed edge object.\r\n   */\r\n  parseEdge(line:string):IWeightedEdgeTyped|IUnweightedEdgeTyped|null {\r\n    const matchDirectedWeighted = line.match(/\\s*([^(-]*)\\s*-\\(([\\d.]+)\\)->\\s*([^(-]*)\\s*/);\r\n    const matchDirected = line.match(/\\s*([^(-]*)\\s*>\\s*([^(-]*)\\s*/);\r\n    const matchUndirectedWeighted = line.match(/\\s*([^(-]*)\\s*-\\(([\\d.]+)\\)-\\s*([^(-]*)\\s*/);\r\n    const matchUndirected = line.match(/\\s*([^(-]*)\\s*-\\s*([^(-]*)\\s*/);\r\n  \r\n    if (matchDirectedWeighted) {//OK\r\n      return {\r\n        source: matchDirectedWeighted[1].trim(),\r\n        target: matchDirectedWeighted[3].trim(),\r\n        weight: Number(matchDirectedWeighted[2]),\r\n        type: 'Directed Weighted',\r\n      };\r\n    } else if (matchDirected) {//OK\r\n      return {\r\n        source: matchDirected[1].trim(),\r\n        target: matchDirected[2].trim(),\r\n        type: 'Directed Unweighted',\r\n      };\r\n    } else if (matchUndirectedWeighted) {\r\n      console.log(matchUndirectedWeighted[2]);\r\n      console.log(matchUndirectedWeighted[1]);\r\n      console.log(matchUndirectedWeighted[3]);\r\n      return {\r\n        source: matchUndirectedWeighted[1].trim(),\r\n        target: matchUndirectedWeighted[3].trim(),\r\n        weight: Number(matchUndirectedWeighted[2]),\r\n        type: 'Undirected Weighted',\r\n      };\r\n    } else if (matchUndirected) {//OK\r\n      return {\r\n        source: matchUndirected[1].trim(),\r\n        target: matchUndirected[2].trim(),\r\n        type: 'Undirected Unweighted',\r\n      };\r\n    }\r\n  \r\n    return null;\r\n  }\r\n  /**\r\n  * Checks if all edges have the same type of graph (e.g., Directed Weighted).\r\n  *\r\n  * @param {Array} edges - An array of edge objects to check.\r\n  * @returns {boolean} - `true` if all edges have the same type, otherwise `false`.\r\n  */\r\n  isSameTypeGraphe(edges:Array): boolean {\r\n    let isSameTypeGraphe:boolean=true;\r\n    let firstType:string=edges[0]?.type;\r\n    if(firstType){\r\n      for (const edge of edges) {\r\n        if(edge.type!=firstType){\r\n          console.log(\" Type Error\")\r\n          isSameTypeGraphe=false;\r\n          break;\r\n        }\r\n      }\r\n    }else{\r\n      isSameTypeGraphe=false;\r\n    }\r\n    return isSameTypeGraphe;\r\n  }\r\n  /**\r\n   * Sends the parsed graph elements to the parent component.\r\n   *\r\n   * @returns {any} - The parsed graph elements or `false` if there is a type mismatch.\r\n   */\r\n  sendElements():any{\r\n    if(this.isSameTypeGraphe(this.parseExtendedFormat())){\r\n      return this.parseExtendedFormat();\r\n    }else{\r\n      this.container.message=this.translate.instant(\"grapheFromEdgeList.msg3\");\r\n      return false;\r\n    }\r\n  }\r\n  /**\r\n   * Checks if a given input string contains invalid characters.\r\n   *\r\n   * @param {string} inputString - The input string to check for invalid characters.\r\n   * @returns {boolean} - `true` if the input contains invalid characters, otherwise `false`.\r\n   */\r\n  containsInvalidCharacters(inputString:string) :boolean{\r\n    // Define a regular expression pattern for valid characters\r\n    const invalidCharactersPattern = /[<> ()&;:-]/;\r\n    // Test the inputString against the pattern\r\n    return invalidCharactersPattern.test(inputString);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    64%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/app/Services/algorithm.service.ts\n            \n            \n                injectable\n            \n            \n                AlgorithmService\n            \n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                src/app/Services/dark-mode.service.ts\n            \n            \n                injectable\n            \n            \n                DarkModeService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/Services/graphe.service.ts\n            \n            \n                injectable\n            \n            \n                GrapheService\n            \n            \n                96 %\n                (63/65)\n            \n        \n        \n            \n                src/app/Services/graphe.service.ts\n            \n            \n                interface\n            \n            \n                IPosition\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/Services/save-upload.service.ts\n            \n            \n                injectable\n            \n            \n                SaveUploadService\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/components/add-node/add-node.component.ts\n            \n            \n                component\n            \n            \n                AddNodeComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/app/components/add-weighted-edge/add-weighted-edge.component.ts\n            \n            \n                component\n            \n            \n                AddWeightedEdgeComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/app/components/change-color/change-color.component.ts\n            \n            \n                component\n            \n            \n                ChangeColorComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/app/components/change-id-node/change-id-node.component.ts\n            \n            \n                component\n            \n            \n                ChangeIdNodeComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/app/components/change-size-screen/change-size-screen.component.ts\n            \n            \n                component\n            \n            \n                ChangeSizeScreenComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/app/components/enumeration-node/enumeration-node.component.ts\n            \n            \n                component\n            \n            \n                EnumerationNodeComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/components/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/components/graphe-from-edges-list/graphe-from-edges-list.component.ts\n            \n            \n                component\n            \n            \n                GrapheFromEdgesListComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                src/app/components/graphe-from-edges-list/graphe-from-edges-list.component.ts\n            \n            \n                interface\n            \n            \n                IUnweightedEdgeTyped\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/app/components/graphe-from-edges-list/graphe-from-edges-list.component.ts\n            \n            \n                interface\n            \n            \n                IWeightedEdgeTyped\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/app/components/graphe-from-matrix-adja/graphe-from-matrix-adja.component.ts\n            \n            \n                component\n            \n            \n                GrapheFromMatrixAdjaComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                src/app/components/graphe-from-matrix-adja/graphe-from-matrix-adja.component.ts\n            \n            \n                interface\n            \n            \n                IUnweightedEdge\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/components/graphe-from-matrix-adja/graphe-from-matrix-adja.component.ts\n            \n            \n                interface\n            \n            \n                IWeightedEdge\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/app/components/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/components/info/info.component.ts\n            \n            \n                component\n            \n            \n                InfoComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                src/app/components/matrix/matrix.component.ts\n            \n            \n                component\n            \n            \n                MatrixComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/components/message/message.component.ts\n            \n            \n                component\n            \n            \n                MessageComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/app/components/remove-edge/remove-edge.component.ts\n            \n            \n                component\n            \n            \n                RemoveEdgeComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/components/remove-node/remove-node.component.ts\n            \n            \n                component\n            \n            \n                RemoveNodeComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/components/screen/screen.component.ts\n            \n            \n                component\n            \n            \n                ScreenComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/app/components/screenbox/screenbox.component.ts\n            \n            \n                component\n            \n            \n                ScreenboxComponent\n            \n            \n                21 %\n                (4/19)\n            \n        \n        \n            \n                src/app/components/select/select.component.ts\n            \n            \n                component\n            \n            \n                SelectComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
